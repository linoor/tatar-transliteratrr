/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/ohm.ts":
/*!********************!*\
  !*** ./src/ohm.ts ***!
  \********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   translate: () => (/* binding */ translate)\n/* harmony export */ });\n/* harmony import */ var ohm_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ohm-js */ \"./node_modules/ohm-js/index.mjs\");\n\nconst mapping = {\n    'Cyrillic': {\n        'NeoAlif': {\n            \"default\": {\n                'а': 'a', 'ә': 'ə', 'б': 'b',\n                \"a\": \"a\", \"e\": \"e\", \"o\": \"o\", \"y\": \"u\",\n                'җ': 'c', 'ч': 'ç', 'д': 'd',\n                'э': 'e', 'ф': 'f', \"г\": \"g\",\n                'һ': 'h', 'ы': 'ı', 'и': 'i',\n                'ж': 'j', 'к': 'k', 'л': 'l',\n                'м': 'm', 'н': 'n', 'ң': 'ñ',\n                'о': 'o', 'ө': 'ö', 'п': 'p',\n                'р': 'r', 'с': 's', 'ш': 'ş',\n                'т': 't', 'у': 'u', 'ү': 'ü',\n                'в': 'v', 'х': 'x', 'й': 'y',\n                'з': 'z', 'ь': \"'\", 'я': 'ya',\n                'е': 'e', 'Е': 'e',\n            },\n            \"before_back_vowel\": {\n                \"к\": \"q\", \"г\": \"ğ\"\n            },\n            \"before_front_vowel\": {\n                \"к\": \"k\", \"г\": \"g\"\n            },\n        }\n    }\n};\nconst grammar = ohm_js__WEBPACK_IMPORTED_MODULE_0__.grammar(`Cyrillic {\n    input = (syllable | cyrillic_letter | any)*\n    cyrillic_letter = (consonant | front_vowel | back_vowel)\n    syllable = g_front_vowel | g_back_vowel | k_front_vowel | k_back_vowel\n\n    g_front_vowel = (\"г\" | \"Г\")  &front_vowel\n    g_back_vowel = (\"г\" | \"Г\")  &back_vowel\n\n    k_front_vowel = (\"к\" | \"К\")  &front_vowel\n    k_back_vowel = (\"к\" | \"К\")  &back_vowel\n\n    consonant = consonant_lowercase | consonant_uppercase\n    consonant_lowercase = \"б\" | \"в\" | \"д\" | \"ж\" | \"г\" | \"з\" | \"й\" | \"к\" | \"л\" | \"м\" | \"н\" | \"ң\" | \"п\" | \"р\" | \"с\" | \"т\" | \"ф\" | \"х\" | \"һ\" | \"ч\" | \"ш\" | \"җ\" | \"ц\" | \"щ\" | \"я\" \n    consonant_uppercase = \"Б\" | \"В\" | \"Д\" | \"Ж\" | \"Г\" | \"З\" | \"Й\" | \"К\" | \"Л\" | \"М\" | \"Н\" | \"Ң\" | \"П\" | \"Р\" | \"С\" | \"Т\" | \"Ф\" | \"Х\" | \"Һ\" | \"Ч\" | \"Ш\" | \"Җ\" | \"Ц\" | \"Щ\" | \"Я\"\n\n    front_vowel = front_vowel_lower | front_vowel_upper\n    front_vowel_lower = \"ә\" | \"ө\" | \"ү\" | \"е\" | \"e\" | \"э\"\n    front_vowel_upper = \"Ә\" | \"Ө\" | \"Ү\" | \"Е\" | \"E\" | \"Э\"\n\n    back_vowel = back_vowel_lower | back_vowel_upper\n    back_vowel_lower = \"а\" | \"a\" | \"о\" | \"o\" | \"у\" | \"y\" | \"ы\" | \"и\" | \"ый\"\n    back_vowel_upper = \"А\" | \"A\" | \"О\" | \"O\" | \"У\" | \"Y\" | \"Ы\" | \"И\" | \"ЫЙ\"\n}`);\nconst semantics = grammar.createSemantics().addOperation('translate', {\n    _terminal() {\n        return this.sourceString;\n    },\n    input(ps) {\n        return ps.children.map(c => c.translate()).join('');\n    },\n    g_front_vowel(syllable, _vowel) {\n        return getEquivalent(syllable.sourceString, \"before_front_vowel\");\n    },\n    g_back_vowel(syllable, _vowel) {\n        return getEquivalent(syllable.sourceString, \"before_back_vowel\");\n    },\n    k_back_vowel(syllable, _vowel) {\n        debugger;\n        return getEquivalent(syllable.sourceString, \"before_back_vowel\");\n    },\n    k_front_vowel(syllable, _vowel) {\n        return getEquivalent(syllable.sourceString, \"before_front_vowel\");\n    },\n    cyrillic_letter(ps) {\n        return ps.children.map(c => getEquivalent(c.sourceString)).join('');\n    },\n});\nfunction getEquivalent(c, rule = \"default\") {\n    const equivalent = mapping['Cyrillic']['NeoAlif'][rule][c.toLowerCase()] || '?';\n    return c === c.toUpperCase() ?\n        equivalent.toUpperCase() :\n        equivalent;\n}\nfunction translate(text) {\n    const match = grammar.match(text);\n    if (match.succeeded()) {\n        console.log('Syntax is correct!');\n        return semantics(match).translate();\n    }\n    else {\n        return match.message;\n    }\n}\n\n\n//# sourceURL=webpack://tatar-transliteratrr/./src/ohm.ts?");

/***/ }),

/***/ "./src/script.ts":
/*!***********************!*\
  !*** ./src/script.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _ohm__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ohm */ \"./src/ohm.ts\");\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    const inputArea = document.getElementById('inputArea');\n    const outputArea = document.getElementById('outputArea');\n    inputArea.addEventListener('input', () => {\n        const inputText = inputArea.value;\n        outputArea.value = (0,_ohm__WEBPACK_IMPORTED_MODULE_0__.translate)(inputText);\n    });\n});\n\n\n//# sourceURL=webpack://tatar-transliteratrr/./src/script.ts?");

/***/ }),

/***/ "./node_modules/ohm-js/dist/built-in-rules.js":
/*!****************************************************!*\
  !*** ./node_modules/ohm-js/dist/built-in-rules.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _src_makeRecipe_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../src/makeRecipe.js */ \"./node_modules/ohm-js/src/makeRecipe.js\");\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_src_makeRecipe_js__WEBPACK_IMPORTED_MODULE_0__.makeRecipe)([\"grammar\",{\"source\":\"BuiltInRules {\\n\\n  alnum  (an alpha-numeric character)\\n    = letter\\n    | digit\\n\\n  letter  (a letter)\\n    = lower\\n    | upper\\n    | unicodeLtmo\\n\\n  digit  (a digit)\\n    = \\\"0\\\"..\\\"9\\\"\\n\\n  hexDigit  (a hexadecimal digit)\\n    = digit\\n    | \\\"a\\\"..\\\"f\\\"\\n    | \\\"A\\\"..\\\"F\\\"\\n\\n  ListOf<elem, sep>\\n    = NonemptyListOf<elem, sep>\\n    | EmptyListOf<elem, sep>\\n\\n  NonemptyListOf<elem, sep>\\n    = elem (sep elem)*\\n\\n  EmptyListOf<elem, sep>\\n    = /* nothing */\\n\\n  listOf<elem, sep>\\n    = nonemptyListOf<elem, sep>\\n    | emptyListOf<elem, sep>\\n\\n  nonemptyListOf<elem, sep>\\n    = elem (sep elem)*\\n\\n  emptyListOf<elem, sep>\\n    = /* nothing */\\n\\n  // Allows a syntactic rule application within a lexical context.\\n  applySyntactic<app> = app\\n}\"},\"BuiltInRules\",null,null,{\"alnum\":[\"define\",{\"sourceInterval\":[18,78]},\"an alpha-numeric character\",[],[\"alt\",{\"sourceInterval\":[60,78]},[\"app\",{\"sourceInterval\":[60,66]},\"letter\",[]],[\"app\",{\"sourceInterval\":[73,78]},\"digit\",[]]]],\"letter\":[\"define\",{\"sourceInterval\":[82,142]},\"a letter\",[],[\"alt\",{\"sourceInterval\":[107,142]},[\"app\",{\"sourceInterval\":[107,112]},\"lower\",[]],[\"app\",{\"sourceInterval\":[119,124]},\"upper\",[]],[\"app\",{\"sourceInterval\":[131,142]},\"unicodeLtmo\",[]]]],\"digit\":[\"define\",{\"sourceInterval\":[146,177]},\"a digit\",[],[\"range\",{\"sourceInterval\":[169,177]},\"0\",\"9\"]],\"hexDigit\":[\"define\",{\"sourceInterval\":[181,254]},\"a hexadecimal digit\",[],[\"alt\",{\"sourceInterval\":[219,254]},[\"app\",{\"sourceInterval\":[219,224]},\"digit\",[]],[\"range\",{\"sourceInterval\":[231,239]},\"a\",\"f\"],[\"range\",{\"sourceInterval\":[246,254]},\"A\",\"F\"]]],\"ListOf\":[\"define\",{\"sourceInterval\":[258,336]},null,[\"elem\",\"sep\"],[\"alt\",{\"sourceInterval\":[282,336]},[\"app\",{\"sourceInterval\":[282,307]},\"NonemptyListOf\",[[\"param\",{\"sourceInterval\":[297,301]},0],[\"param\",{\"sourceInterval\":[303,306]},1]]],[\"app\",{\"sourceInterval\":[314,336]},\"EmptyListOf\",[[\"param\",{\"sourceInterval\":[326,330]},0],[\"param\",{\"sourceInterval\":[332,335]},1]]]]],\"NonemptyListOf\":[\"define\",{\"sourceInterval\":[340,388]},null,[\"elem\",\"sep\"],[\"seq\",{\"sourceInterval\":[372,388]},[\"param\",{\"sourceInterval\":[372,376]},0],[\"star\",{\"sourceInterval\":[377,388]},[\"seq\",{\"sourceInterval\":[378,386]},[\"param\",{\"sourceInterval\":[378,381]},1],[\"param\",{\"sourceInterval\":[382,386]},0]]]]],\"EmptyListOf\":[\"define\",{\"sourceInterval\":[392,434]},null,[\"elem\",\"sep\"],[\"seq\",{\"sourceInterval\":[438,438]}]],\"listOf\":[\"define\",{\"sourceInterval\":[438,516]},null,[\"elem\",\"sep\"],[\"alt\",{\"sourceInterval\":[462,516]},[\"app\",{\"sourceInterval\":[462,487]},\"nonemptyListOf\",[[\"param\",{\"sourceInterval\":[477,481]},0],[\"param\",{\"sourceInterval\":[483,486]},1]]],[\"app\",{\"sourceInterval\":[494,516]},\"emptyListOf\",[[\"param\",{\"sourceInterval\":[506,510]},0],[\"param\",{\"sourceInterval\":[512,515]},1]]]]],\"nonemptyListOf\":[\"define\",{\"sourceInterval\":[520,568]},null,[\"elem\",\"sep\"],[\"seq\",{\"sourceInterval\":[552,568]},[\"param\",{\"sourceInterval\":[552,556]},0],[\"star\",{\"sourceInterval\":[557,568]},[\"seq\",{\"sourceInterval\":[558,566]},[\"param\",{\"sourceInterval\":[558,561]},1],[\"param\",{\"sourceInterval\":[562,566]},0]]]]],\"emptyListOf\":[\"define\",{\"sourceInterval\":[572,682]},null,[\"elem\",\"sep\"],[\"seq\",{\"sourceInterval\":[685,685]}]],\"applySyntactic\":[\"define\",{\"sourceInterval\":[685,710]},null,[\"app\"],[\"param\",{\"sourceInterval\":[707,710]},0]]}]));\n\n\n//# sourceURL=webpack://tatar-transliteratrr/./node_modules/ohm-js/dist/built-in-rules.js?");

/***/ }),

/***/ "./node_modules/ohm-js/dist/ohm-grammar.js":
/*!*************************************************!*\
  !*** ./node_modules/ohm-js/dist/ohm-grammar.js ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _src_main_kernel_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../src/main-kernel.js */ \"./node_modules/ohm-js/src/main-kernel.js\");\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_src_main_kernel_js__WEBPACK_IMPORTED_MODULE_0__.makeRecipe)([\"grammar\",{\"source\":\"Ohm {\\n\\n  Grammars\\n    = Grammar*\\n\\n  Grammar\\n    = ident SuperGrammar? \\\"{\\\" Rule* \\\"}\\\"\\n\\n  SuperGrammar\\n    = \\\"<:\\\" ident\\n\\n  Rule\\n    = ident Formals? ruleDescr? \\\"=\\\"  RuleBody  -- define\\n    | ident Formals?            \\\":=\\\" OverrideRuleBody  -- override\\n    | ident Formals?            \\\"+=\\\" RuleBody  -- extend\\n\\n  RuleBody\\n    = \\\"|\\\"? NonemptyListOf<TopLevelTerm, \\\"|\\\">\\n\\n  TopLevelTerm\\n    = Seq caseName  -- inline\\n    | Seq\\n\\n  OverrideRuleBody\\n    = \\\"|\\\"? NonemptyListOf<OverrideTopLevelTerm, \\\"|\\\">\\n\\n  OverrideTopLevelTerm\\n    = \\\"...\\\"  -- superSplice\\n    | TopLevelTerm\\n\\n  Formals\\n    = \\\"<\\\" ListOf<ident, \\\",\\\"> \\\">\\\"\\n\\n  Params\\n    = \\\"<\\\" ListOf<Seq, \\\",\\\"> \\\">\\\"\\n\\n  Alt\\n    = NonemptyListOf<Seq, \\\"|\\\">\\n\\n  Seq\\n    = Iter*\\n\\n  Iter\\n    = Pred \\\"*\\\"  -- star\\n    | Pred \\\"+\\\"  -- plus\\n    | Pred \\\"?\\\"  -- opt\\n    | Pred\\n\\n  Pred\\n    = \\\"~\\\" Lex  -- not\\n    | \\\"&\\\" Lex  -- lookahead\\n    | Lex\\n\\n  Lex\\n    = \\\"#\\\" Base  -- lex\\n    | Base\\n\\n  Base\\n    = ident Params? ~(ruleDescr? \\\"=\\\" | \\\":=\\\" | \\\"+=\\\")  -- application\\n    | oneCharTerminal \\\"..\\\" oneCharTerminal           -- range\\n    | terminal                                       -- terminal\\n    | \\\"(\\\" Alt \\\")\\\"                                    -- paren\\n\\n  ruleDescr  (a rule description)\\n    = \\\"(\\\" ruleDescrText \\\")\\\"\\n\\n  ruleDescrText\\n    = (~\\\")\\\" any)*\\n\\n  caseName\\n    = \\\"--\\\" (~\\\"\\\\n\\\" space)* name (~\\\"\\\\n\\\" space)* (\\\"\\\\n\\\" | &\\\"}\\\")\\n\\n  name  (a name)\\n    = nameFirst nameRest*\\n\\n  nameFirst\\n    = \\\"_\\\"\\n    | letter\\n\\n  nameRest\\n    = \\\"_\\\"\\n    | alnum\\n\\n  ident  (an identifier)\\n    = name\\n\\n  terminal\\n    = \\\"\\\\\\\"\\\" terminalChar* \\\"\\\\\\\"\\\"\\n\\n  oneCharTerminal\\n    = \\\"\\\\\\\"\\\" terminalChar \\\"\\\\\\\"\\\"\\n\\n  terminalChar\\n    = escapeChar\\n      | ~\\\"\\\\\\\\\\\" ~\\\"\\\\\\\"\\\" ~\\\"\\\\n\\\" \\\"\\\\u{0}\\\"..\\\"\\\\u{10FFFF}\\\"\\n\\n  escapeChar  (an escape sequence)\\n    = \\\"\\\\\\\\\\\\\\\\\\\"                                     -- backslash\\n    | \\\"\\\\\\\\\\\\\\\"\\\"                                     -- doubleQuote\\n    | \\\"\\\\\\\\\\\\'\\\"                                     -- singleQuote\\n    | \\\"\\\\\\\\b\\\"                                      -- backspace\\n    | \\\"\\\\\\\\n\\\"                                      -- lineFeed\\n    | \\\"\\\\\\\\r\\\"                                      -- carriageReturn\\n    | \\\"\\\\\\\\t\\\"                                      -- tab\\n    | \\\"\\\\\\\\u{\\\" hexDigit hexDigit? hexDigit?\\n             hexDigit? hexDigit? hexDigit? \\\"}\\\"   -- unicodeCodePoint\\n    | \\\"\\\\\\\\u\\\" hexDigit hexDigit hexDigit hexDigit  -- unicodeEscape\\n    | \\\"\\\\\\\\x\\\" hexDigit hexDigit                    -- hexEscape\\n\\n  space\\n   += comment\\n\\n  comment\\n    = \\\"//\\\" (~\\\"\\\\n\\\" any)* &(\\\"\\\\n\\\" | end)  -- singleLine\\n    | \\\"/*\\\" (~\\\"*/\\\" any)* \\\"*/\\\"  -- multiLine\\n\\n  tokens = token*\\n\\n  token = caseName | comment | ident | operator | punctuation | terminal | any\\n\\n  operator = \\\"<:\\\" | \\\"=\\\" | \\\":=\\\" | \\\"+=\\\" | \\\"*\\\" | \\\"+\\\" | \\\"?\\\" | \\\"~\\\" | \\\"&\\\"\\n\\n  punctuation = \\\"<\\\" | \\\">\\\" | \\\",\\\" | \\\"--\\\"\\n}\"},\"Ohm\",null,\"Grammars\",{\"Grammars\":[\"define\",{\"sourceInterval\":[9,32]},null,[],[\"star\",{\"sourceInterval\":[24,32]},[\"app\",{\"sourceInterval\":[24,31]},\"Grammar\",[]]]],\"Grammar\":[\"define\",{\"sourceInterval\":[36,83]},null,[],[\"seq\",{\"sourceInterval\":[50,83]},[\"app\",{\"sourceInterval\":[50,55]},\"ident\",[]],[\"opt\",{\"sourceInterval\":[56,69]},[\"app\",{\"sourceInterval\":[56,68]},\"SuperGrammar\",[]]],[\"terminal\",{\"sourceInterval\":[70,73]},\"{\"],[\"star\",{\"sourceInterval\":[74,79]},[\"app\",{\"sourceInterval\":[74,78]},\"Rule\",[]]],[\"terminal\",{\"sourceInterval\":[80,83]},\"}\"]]],\"SuperGrammar\":[\"define\",{\"sourceInterval\":[87,116]},null,[],[\"seq\",{\"sourceInterval\":[106,116]},[\"terminal\",{\"sourceInterval\":[106,110]},\"<:\"],[\"app\",{\"sourceInterval\":[111,116]},\"ident\",[]]]],\"Rule_define\":[\"define\",{\"sourceInterval\":[131,181]},null,[],[\"seq\",{\"sourceInterval\":[131,170]},[\"app\",{\"sourceInterval\":[131,136]},\"ident\",[]],[\"opt\",{\"sourceInterval\":[137,145]},[\"app\",{\"sourceInterval\":[137,144]},\"Formals\",[]]],[\"opt\",{\"sourceInterval\":[146,156]},[\"app\",{\"sourceInterval\":[146,155]},\"ruleDescr\",[]]],[\"terminal\",{\"sourceInterval\":[157,160]},\"=\"],[\"app\",{\"sourceInterval\":[162,170]},\"RuleBody\",[]]]],\"Rule_override\":[\"define\",{\"sourceInterval\":[188,248]},null,[],[\"seq\",{\"sourceInterval\":[188,235]},[\"app\",{\"sourceInterval\":[188,193]},\"ident\",[]],[\"opt\",{\"sourceInterval\":[194,202]},[\"app\",{\"sourceInterval\":[194,201]},\"Formals\",[]]],[\"terminal\",{\"sourceInterval\":[214,218]},\":=\"],[\"app\",{\"sourceInterval\":[219,235]},\"OverrideRuleBody\",[]]]],\"Rule_extend\":[\"define\",{\"sourceInterval\":[255,305]},null,[],[\"seq\",{\"sourceInterval\":[255,294]},[\"app\",{\"sourceInterval\":[255,260]},\"ident\",[]],[\"opt\",{\"sourceInterval\":[261,269]},[\"app\",{\"sourceInterval\":[261,268]},\"Formals\",[]]],[\"terminal\",{\"sourceInterval\":[281,285]},\"+=\"],[\"app\",{\"sourceInterval\":[286,294]},\"RuleBody\",[]]]],\"Rule\":[\"define\",{\"sourceInterval\":[120,305]},null,[],[\"alt\",{\"sourceInterval\":[131,305]},[\"app\",{\"sourceInterval\":[131,170]},\"Rule_define\",[]],[\"app\",{\"sourceInterval\":[188,235]},\"Rule_override\",[]],[\"app\",{\"sourceInterval\":[255,294]},\"Rule_extend\",[]]]],\"RuleBody\":[\"define\",{\"sourceInterval\":[309,362]},null,[],[\"seq\",{\"sourceInterval\":[324,362]},[\"opt\",{\"sourceInterval\":[324,328]},[\"terminal\",{\"sourceInterval\":[324,327]},\"|\"]],[\"app\",{\"sourceInterval\":[329,362]},\"NonemptyListOf\",[[\"app\",{\"sourceInterval\":[344,356]},\"TopLevelTerm\",[]],[\"terminal\",{\"sourceInterval\":[358,361]},\"|\"]]]]],\"TopLevelTerm_inline\":[\"define\",{\"sourceInterval\":[385,408]},null,[],[\"seq\",{\"sourceInterval\":[385,397]},[\"app\",{\"sourceInterval\":[385,388]},\"Seq\",[]],[\"app\",{\"sourceInterval\":[389,397]},\"caseName\",[]]]],\"TopLevelTerm\":[\"define\",{\"sourceInterval\":[366,418]},null,[],[\"alt\",{\"sourceInterval\":[385,418]},[\"app\",{\"sourceInterval\":[385,397]},\"TopLevelTerm_inline\",[]],[\"app\",{\"sourceInterval\":[415,418]},\"Seq\",[]]]],\"OverrideRuleBody\":[\"define\",{\"sourceInterval\":[422,491]},null,[],[\"seq\",{\"sourceInterval\":[445,491]},[\"opt\",{\"sourceInterval\":[445,449]},[\"terminal\",{\"sourceInterval\":[445,448]},\"|\"]],[\"app\",{\"sourceInterval\":[450,491]},\"NonemptyListOf\",[[\"app\",{\"sourceInterval\":[465,485]},\"OverrideTopLevelTerm\",[]],[\"terminal\",{\"sourceInterval\":[487,490]},\"|\"]]]]],\"OverrideTopLevelTerm_superSplice\":[\"define\",{\"sourceInterval\":[522,543]},null,[],[\"terminal\",{\"sourceInterval\":[522,527]},\"...\"]],\"OverrideTopLevelTerm\":[\"define\",{\"sourceInterval\":[495,562]},null,[],[\"alt\",{\"sourceInterval\":[522,562]},[\"app\",{\"sourceInterval\":[522,527]},\"OverrideTopLevelTerm_superSplice\",[]],[\"app\",{\"sourceInterval\":[550,562]},\"TopLevelTerm\",[]]]],\"Formals\":[\"define\",{\"sourceInterval\":[566,606]},null,[],[\"seq\",{\"sourceInterval\":[580,606]},[\"terminal\",{\"sourceInterval\":[580,583]},\"<\"],[\"app\",{\"sourceInterval\":[584,602]},\"ListOf\",[[\"app\",{\"sourceInterval\":[591,596]},\"ident\",[]],[\"terminal\",{\"sourceInterval\":[598,601]},\",\"]]],[\"terminal\",{\"sourceInterval\":[603,606]},\">\"]]],\"Params\":[\"define\",{\"sourceInterval\":[610,647]},null,[],[\"seq\",{\"sourceInterval\":[623,647]},[\"terminal\",{\"sourceInterval\":[623,626]},\"<\"],[\"app\",{\"sourceInterval\":[627,643]},\"ListOf\",[[\"app\",{\"sourceInterval\":[634,637]},\"Seq\",[]],[\"terminal\",{\"sourceInterval\":[639,642]},\",\"]]],[\"terminal\",{\"sourceInterval\":[644,647]},\">\"]]],\"Alt\":[\"define\",{\"sourceInterval\":[651,685]},null,[],[\"app\",{\"sourceInterval\":[661,685]},\"NonemptyListOf\",[[\"app\",{\"sourceInterval\":[676,679]},\"Seq\",[]],[\"terminal\",{\"sourceInterval\":[681,684]},\"|\"]]]],\"Seq\":[\"define\",{\"sourceInterval\":[689,704]},null,[],[\"star\",{\"sourceInterval\":[699,704]},[\"app\",{\"sourceInterval\":[699,703]},\"Iter\",[]]]],\"Iter_star\":[\"define\",{\"sourceInterval\":[719,736]},null,[],[\"seq\",{\"sourceInterval\":[719,727]},[\"app\",{\"sourceInterval\":[719,723]},\"Pred\",[]],[\"terminal\",{\"sourceInterval\":[724,727]},\"*\"]]],\"Iter_plus\":[\"define\",{\"sourceInterval\":[743,760]},null,[],[\"seq\",{\"sourceInterval\":[743,751]},[\"app\",{\"sourceInterval\":[743,747]},\"Pred\",[]],[\"terminal\",{\"sourceInterval\":[748,751]},\"+\"]]],\"Iter_opt\":[\"define\",{\"sourceInterval\":[767,783]},null,[],[\"seq\",{\"sourceInterval\":[767,775]},[\"app\",{\"sourceInterval\":[767,771]},\"Pred\",[]],[\"terminal\",{\"sourceInterval\":[772,775]},\"?\"]]],\"Iter\":[\"define\",{\"sourceInterval\":[708,794]},null,[],[\"alt\",{\"sourceInterval\":[719,794]},[\"app\",{\"sourceInterval\":[719,727]},\"Iter_star\",[]],[\"app\",{\"sourceInterval\":[743,751]},\"Iter_plus\",[]],[\"app\",{\"sourceInterval\":[767,775]},\"Iter_opt\",[]],[\"app\",{\"sourceInterval\":[790,794]},\"Pred\",[]]]],\"Pred_not\":[\"define\",{\"sourceInterval\":[809,824]},null,[],[\"seq\",{\"sourceInterval\":[809,816]},[\"terminal\",{\"sourceInterval\":[809,812]},\"~\"],[\"app\",{\"sourceInterval\":[813,816]},\"Lex\",[]]]],\"Pred_lookahead\":[\"define\",{\"sourceInterval\":[831,852]},null,[],[\"seq\",{\"sourceInterval\":[831,838]},[\"terminal\",{\"sourceInterval\":[831,834]},\"&\"],[\"app\",{\"sourceInterval\":[835,838]},\"Lex\",[]]]],\"Pred\":[\"define\",{\"sourceInterval\":[798,862]},null,[],[\"alt\",{\"sourceInterval\":[809,862]},[\"app\",{\"sourceInterval\":[809,816]},\"Pred_not\",[]],[\"app\",{\"sourceInterval\":[831,838]},\"Pred_lookahead\",[]],[\"app\",{\"sourceInterval\":[859,862]},\"Lex\",[]]]],\"Lex_lex\":[\"define\",{\"sourceInterval\":[876,892]},null,[],[\"seq\",{\"sourceInterval\":[876,884]},[\"terminal\",{\"sourceInterval\":[876,879]},\"#\"],[\"app\",{\"sourceInterval\":[880,884]},\"Base\",[]]]],\"Lex\":[\"define\",{\"sourceInterval\":[866,903]},null,[],[\"alt\",{\"sourceInterval\":[876,903]},[\"app\",{\"sourceInterval\":[876,884]},\"Lex_lex\",[]],[\"app\",{\"sourceInterval\":[899,903]},\"Base\",[]]]],\"Base_application\":[\"define\",{\"sourceInterval\":[918,979]},null,[],[\"seq\",{\"sourceInterval\":[918,963]},[\"app\",{\"sourceInterval\":[918,923]},\"ident\",[]],[\"opt\",{\"sourceInterval\":[924,931]},[\"app\",{\"sourceInterval\":[924,930]},\"Params\",[]]],[\"not\",{\"sourceInterval\":[932,963]},[\"alt\",{\"sourceInterval\":[934,962]},[\"seq\",{\"sourceInterval\":[934,948]},[\"opt\",{\"sourceInterval\":[934,944]},[\"app\",{\"sourceInterval\":[934,943]},\"ruleDescr\",[]]],[\"terminal\",{\"sourceInterval\":[945,948]},\"=\"]],[\"terminal\",{\"sourceInterval\":[951,955]},\":=\"],[\"terminal\",{\"sourceInterval\":[958,962]},\"+=\"]]]]],\"Base_range\":[\"define\",{\"sourceInterval\":[986,1041]},null,[],[\"seq\",{\"sourceInterval\":[986,1022]},[\"app\",{\"sourceInterval\":[986,1001]},\"oneCharTerminal\",[]],[\"terminal\",{\"sourceInterval\":[1002,1006]},\"..\"],[\"app\",{\"sourceInterval\":[1007,1022]},\"oneCharTerminal\",[]]]],\"Base_terminal\":[\"define\",{\"sourceInterval\":[1048,1106]},null,[],[\"app\",{\"sourceInterval\":[1048,1056]},\"terminal\",[]]],\"Base_paren\":[\"define\",{\"sourceInterval\":[1113,1168]},null,[],[\"seq\",{\"sourceInterval\":[1113,1124]},[\"terminal\",{\"sourceInterval\":[1113,1116]},\"(\"],[\"app\",{\"sourceInterval\":[1117,1120]},\"Alt\",[]],[\"terminal\",{\"sourceInterval\":[1121,1124]},\")\"]]],\"Base\":[\"define\",{\"sourceInterval\":[907,1168]},null,[],[\"alt\",{\"sourceInterval\":[918,1168]},[\"app\",{\"sourceInterval\":[918,963]},\"Base_application\",[]],[\"app\",{\"sourceInterval\":[986,1022]},\"Base_range\",[]],[\"app\",{\"sourceInterval\":[1048,1056]},\"Base_terminal\",[]],[\"app\",{\"sourceInterval\":[1113,1124]},\"Base_paren\",[]]]],\"ruleDescr\":[\"define\",{\"sourceInterval\":[1172,1231]},\"a rule description\",[],[\"seq\",{\"sourceInterval\":[1210,1231]},[\"terminal\",{\"sourceInterval\":[1210,1213]},\"(\"],[\"app\",{\"sourceInterval\":[1214,1227]},\"ruleDescrText\",[]],[\"terminal\",{\"sourceInterval\":[1228,1231]},\")\"]]],\"ruleDescrText\":[\"define\",{\"sourceInterval\":[1235,1266]},null,[],[\"star\",{\"sourceInterval\":[1255,1266]},[\"seq\",{\"sourceInterval\":[1256,1264]},[\"not\",{\"sourceInterval\":[1256,1260]},[\"terminal\",{\"sourceInterval\":[1257,1260]},\")\"]],[\"app\",{\"sourceInterval\":[1261,1264]},\"any\",[]]]]],\"caseName\":[\"define\",{\"sourceInterval\":[1270,1338]},null,[],[\"seq\",{\"sourceInterval\":[1285,1338]},[\"terminal\",{\"sourceInterval\":[1285,1289]},\"--\"],[\"star\",{\"sourceInterval\":[1290,1304]},[\"seq\",{\"sourceInterval\":[1291,1302]},[\"not\",{\"sourceInterval\":[1291,1296]},[\"terminal\",{\"sourceInterval\":[1292,1296]},\"\\n\"]],[\"app\",{\"sourceInterval\":[1297,1302]},\"space\",[]]]],[\"app\",{\"sourceInterval\":[1305,1309]},\"name\",[]],[\"star\",{\"sourceInterval\":[1310,1324]},[\"seq\",{\"sourceInterval\":[1311,1322]},[\"not\",{\"sourceInterval\":[1311,1316]},[\"terminal\",{\"sourceInterval\":[1312,1316]},\"\\n\"]],[\"app\",{\"sourceInterval\":[1317,1322]},\"space\",[]]]],[\"alt\",{\"sourceInterval\":[1326,1337]},[\"terminal\",{\"sourceInterval\":[1326,1330]},\"\\n\"],[\"lookahead\",{\"sourceInterval\":[1333,1337]},[\"terminal\",{\"sourceInterval\":[1334,1337]},\"}\"]]]]],\"name\":[\"define\",{\"sourceInterval\":[1342,1382]},\"a name\",[],[\"seq\",{\"sourceInterval\":[1363,1382]},[\"app\",{\"sourceInterval\":[1363,1372]},\"nameFirst\",[]],[\"star\",{\"sourceInterval\":[1373,1382]},[\"app\",{\"sourceInterval\":[1373,1381]},\"nameRest\",[]]]]],\"nameFirst\":[\"define\",{\"sourceInterval\":[1386,1418]},null,[],[\"alt\",{\"sourceInterval\":[1402,1418]},[\"terminal\",{\"sourceInterval\":[1402,1405]},\"_\"],[\"app\",{\"sourceInterval\":[1412,1418]},\"letter\",[]]]],\"nameRest\":[\"define\",{\"sourceInterval\":[1422,1452]},null,[],[\"alt\",{\"sourceInterval\":[1437,1452]},[\"terminal\",{\"sourceInterval\":[1437,1440]},\"_\"],[\"app\",{\"sourceInterval\":[1447,1452]},\"alnum\",[]]]],\"ident\":[\"define\",{\"sourceInterval\":[1456,1489]},\"an identifier\",[],[\"app\",{\"sourceInterval\":[1485,1489]},\"name\",[]]],\"terminal\":[\"define\",{\"sourceInterval\":[1493,1531]},null,[],[\"seq\",{\"sourceInterval\":[1508,1531]},[\"terminal\",{\"sourceInterval\":[1508,1512]},\"\\\"\"],[\"star\",{\"sourceInterval\":[1513,1526]},[\"app\",{\"sourceInterval\":[1513,1525]},\"terminalChar\",[]]],[\"terminal\",{\"sourceInterval\":[1527,1531]},\"\\\"\"]]],\"oneCharTerminal\":[\"define\",{\"sourceInterval\":[1535,1579]},null,[],[\"seq\",{\"sourceInterval\":[1557,1579]},[\"terminal\",{\"sourceInterval\":[1557,1561]},\"\\\"\"],[\"app\",{\"sourceInterval\":[1562,1574]},\"terminalChar\",[]],[\"terminal\",{\"sourceInterval\":[1575,1579]},\"\\\"\"]]],\"terminalChar\":[\"define\",{\"sourceInterval\":[1583,1660]},null,[],[\"alt\",{\"sourceInterval\":[1602,1660]},[\"app\",{\"sourceInterval\":[1602,1612]},\"escapeChar\",[]],[\"seq\",{\"sourceInterval\":[1621,1660]},[\"not\",{\"sourceInterval\":[1621,1626]},[\"terminal\",{\"sourceInterval\":[1622,1626]},\"\\\\\"]],[\"not\",{\"sourceInterval\":[1627,1632]},[\"terminal\",{\"sourceInterval\":[1628,1632]},\"\\\"\"]],[\"not\",{\"sourceInterval\":[1633,1638]},[\"terminal\",{\"sourceInterval\":[1634,1638]},\"\\n\"]],[\"range\",{\"sourceInterval\":[1639,1660]},\"\\u0000\",\"􏿿\"]]]],\"escapeChar_backslash\":[\"define\",{\"sourceInterval\":[1703,1758]},null,[],[\"terminal\",{\"sourceInterval\":[1703,1709]},\"\\\\\\\\\"]],\"escapeChar_doubleQuote\":[\"define\",{\"sourceInterval\":[1765,1822]},null,[],[\"terminal\",{\"sourceInterval\":[1765,1771]},\"\\\\\\\"\"]],\"escapeChar_singleQuote\":[\"define\",{\"sourceInterval\":[1829,1886]},null,[],[\"terminal\",{\"sourceInterval\":[1829,1835]},\"\\\\'\"]],\"escapeChar_backspace\":[\"define\",{\"sourceInterval\":[1893,1948]},null,[],[\"terminal\",{\"sourceInterval\":[1893,1898]},\"\\\\b\"]],\"escapeChar_lineFeed\":[\"define\",{\"sourceInterval\":[1955,2009]},null,[],[\"terminal\",{\"sourceInterval\":[1955,1960]},\"\\\\n\"]],\"escapeChar_carriageReturn\":[\"define\",{\"sourceInterval\":[2016,2076]},null,[],[\"terminal\",{\"sourceInterval\":[2016,2021]},\"\\\\r\"]],\"escapeChar_tab\":[\"define\",{\"sourceInterval\":[2083,2132]},null,[],[\"terminal\",{\"sourceInterval\":[2083,2088]},\"\\\\t\"]],\"escapeChar_unicodeCodePoint\":[\"define\",{\"sourceInterval\":[2139,2243]},null,[],[\"seq\",{\"sourceInterval\":[2139,2221]},[\"terminal\",{\"sourceInterval\":[2139,2145]},\"\\\\u{\"],[\"app\",{\"sourceInterval\":[2146,2154]},\"hexDigit\",[]],[\"opt\",{\"sourceInterval\":[2155,2164]},[\"app\",{\"sourceInterval\":[2155,2163]},\"hexDigit\",[]]],[\"opt\",{\"sourceInterval\":[2165,2174]},[\"app\",{\"sourceInterval\":[2165,2173]},\"hexDigit\",[]]],[\"opt\",{\"sourceInterval\":[2188,2197]},[\"app\",{\"sourceInterval\":[2188,2196]},\"hexDigit\",[]]],[\"opt\",{\"sourceInterval\":[2198,2207]},[\"app\",{\"sourceInterval\":[2198,2206]},\"hexDigit\",[]]],[\"opt\",{\"sourceInterval\":[2208,2217]},[\"app\",{\"sourceInterval\":[2208,2216]},\"hexDigit\",[]]],[\"terminal\",{\"sourceInterval\":[2218,2221]},\"}\"]]],\"escapeChar_unicodeEscape\":[\"define\",{\"sourceInterval\":[2250,2309]},null,[],[\"seq\",{\"sourceInterval\":[2250,2291]},[\"terminal\",{\"sourceInterval\":[2250,2255]},\"\\\\u\"],[\"app\",{\"sourceInterval\":[2256,2264]},\"hexDigit\",[]],[\"app\",{\"sourceInterval\":[2265,2273]},\"hexDigit\",[]],[\"app\",{\"sourceInterval\":[2274,2282]},\"hexDigit\",[]],[\"app\",{\"sourceInterval\":[2283,2291]},\"hexDigit\",[]]]],\"escapeChar_hexEscape\":[\"define\",{\"sourceInterval\":[2316,2371]},null,[],[\"seq\",{\"sourceInterval\":[2316,2339]},[\"terminal\",{\"sourceInterval\":[2316,2321]},\"\\\\x\"],[\"app\",{\"sourceInterval\":[2322,2330]},\"hexDigit\",[]],[\"app\",{\"sourceInterval\":[2331,2339]},\"hexDigit\",[]]]],\"escapeChar\":[\"define\",{\"sourceInterval\":[1664,2371]},\"an escape sequence\",[],[\"alt\",{\"sourceInterval\":[1703,2371]},[\"app\",{\"sourceInterval\":[1703,1709]},\"escapeChar_backslash\",[]],[\"app\",{\"sourceInterval\":[1765,1771]},\"escapeChar_doubleQuote\",[]],[\"app\",{\"sourceInterval\":[1829,1835]},\"escapeChar_singleQuote\",[]],[\"app\",{\"sourceInterval\":[1893,1898]},\"escapeChar_backspace\",[]],[\"app\",{\"sourceInterval\":[1955,1960]},\"escapeChar_lineFeed\",[]],[\"app\",{\"sourceInterval\":[2016,2021]},\"escapeChar_carriageReturn\",[]],[\"app\",{\"sourceInterval\":[2083,2088]},\"escapeChar_tab\",[]],[\"app\",{\"sourceInterval\":[2139,2221]},\"escapeChar_unicodeCodePoint\",[]],[\"app\",{\"sourceInterval\":[2250,2291]},\"escapeChar_unicodeEscape\",[]],[\"app\",{\"sourceInterval\":[2316,2339]},\"escapeChar_hexEscape\",[]]]],\"space\":[\"extend\",{\"sourceInterval\":[2375,2394]},null,[],[\"app\",{\"sourceInterval\":[2387,2394]},\"comment\",[]]],\"comment_singleLine\":[\"define\",{\"sourceInterval\":[2412,2458]},null,[],[\"seq\",{\"sourceInterval\":[2412,2443]},[\"terminal\",{\"sourceInterval\":[2412,2416]},\"//\"],[\"star\",{\"sourceInterval\":[2417,2429]},[\"seq\",{\"sourceInterval\":[2418,2427]},[\"not\",{\"sourceInterval\":[2418,2423]},[\"terminal\",{\"sourceInterval\":[2419,2423]},\"\\n\"]],[\"app\",{\"sourceInterval\":[2424,2427]},\"any\",[]]]],[\"lookahead\",{\"sourceInterval\":[2430,2443]},[\"alt\",{\"sourceInterval\":[2432,2442]},[\"terminal\",{\"sourceInterval\":[2432,2436]},\"\\n\"],[\"app\",{\"sourceInterval\":[2439,2442]},\"end\",[]]]]]],\"comment_multiLine\":[\"define\",{\"sourceInterval\":[2465,2501]},null,[],[\"seq\",{\"sourceInterval\":[2465,2487]},[\"terminal\",{\"sourceInterval\":[2465,2469]},\"/*\"],[\"star\",{\"sourceInterval\":[2470,2482]},[\"seq\",{\"sourceInterval\":[2471,2480]},[\"not\",{\"sourceInterval\":[2471,2476]},[\"terminal\",{\"sourceInterval\":[2472,2476]},\"*/\"]],[\"app\",{\"sourceInterval\":[2477,2480]},\"any\",[]]]],[\"terminal\",{\"sourceInterval\":[2483,2487]},\"*/\"]]],\"comment\":[\"define\",{\"sourceInterval\":[2398,2501]},null,[],[\"alt\",{\"sourceInterval\":[2412,2501]},[\"app\",{\"sourceInterval\":[2412,2443]},\"comment_singleLine\",[]],[\"app\",{\"sourceInterval\":[2465,2487]},\"comment_multiLine\",[]]]],\"tokens\":[\"define\",{\"sourceInterval\":[2505,2520]},null,[],[\"star\",{\"sourceInterval\":[2514,2520]},[\"app\",{\"sourceInterval\":[2514,2519]},\"token\",[]]]],\"token\":[\"define\",{\"sourceInterval\":[2524,2600]},null,[],[\"alt\",{\"sourceInterval\":[2532,2600]},[\"app\",{\"sourceInterval\":[2532,2540]},\"caseName\",[]],[\"app\",{\"sourceInterval\":[2543,2550]},\"comment\",[]],[\"app\",{\"sourceInterval\":[2553,2558]},\"ident\",[]],[\"app\",{\"sourceInterval\":[2561,2569]},\"operator\",[]],[\"app\",{\"sourceInterval\":[2572,2583]},\"punctuation\",[]],[\"app\",{\"sourceInterval\":[2586,2594]},\"terminal\",[]],[\"app\",{\"sourceInterval\":[2597,2600]},\"any\",[]]]],\"operator\":[\"define\",{\"sourceInterval\":[2604,2669]},null,[],[\"alt\",{\"sourceInterval\":[2615,2669]},[\"terminal\",{\"sourceInterval\":[2615,2619]},\"<:\"],[\"terminal\",{\"sourceInterval\":[2622,2625]},\"=\"],[\"terminal\",{\"sourceInterval\":[2628,2632]},\":=\"],[\"terminal\",{\"sourceInterval\":[2635,2639]},\"+=\"],[\"terminal\",{\"sourceInterval\":[2642,2645]},\"*\"],[\"terminal\",{\"sourceInterval\":[2648,2651]},\"+\"],[\"terminal\",{\"sourceInterval\":[2654,2657]},\"?\"],[\"terminal\",{\"sourceInterval\":[2660,2663]},\"~\"],[\"terminal\",{\"sourceInterval\":[2666,2669]},\"&\"]]],\"punctuation\":[\"define\",{\"sourceInterval\":[2673,2709]},null,[],[\"alt\",{\"sourceInterval\":[2687,2709]},[\"terminal\",{\"sourceInterval\":[2687,2690]},\"<\"],[\"terminal\",{\"sourceInterval\":[2693,2696]},\">\"],[\"terminal\",{\"sourceInterval\":[2699,2702]},\",\"],[\"terminal\",{\"sourceInterval\":[2705,2709]},\"--\"]]]}]));\n\n\n//# sourceURL=webpack://tatar-transliteratrr/./node_modules/ohm-js/dist/ohm-grammar.js?");

/***/ }),

/***/ "./node_modules/ohm-js/dist/operations-and-attributes.js":
/*!***************************************************************!*\
  !*** ./node_modules/ohm-js/dist/operations-and-attributes.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _src_main_kernel_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../src/main-kernel.js */ \"./node_modules/ohm-js/src/main-kernel.js\");\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_src_main_kernel_js__WEBPACK_IMPORTED_MODULE_0__.makeRecipe)([\"grammar\",{\"source\":\"OperationsAndAttributes {\\n\\n  AttributeSignature =\\n    name\\n\\n  OperationSignature =\\n    name Formals?\\n\\n  Formals\\n    = \\\"(\\\" ListOf<name, \\\",\\\"> \\\")\\\"\\n\\n  name  (a name)\\n    = nameFirst nameRest*\\n\\n  nameFirst\\n    = \\\"_\\\"\\n    | letter\\n\\n  nameRest\\n    = \\\"_\\\"\\n    | alnum\\n\\n}\"},\"OperationsAndAttributes\",null,\"AttributeSignature\",{\"AttributeSignature\":[\"define\",{\"sourceInterval\":[29,58]},null,[],[\"app\",{\"sourceInterval\":[54,58]},\"name\",[]]],\"OperationSignature\":[\"define\",{\"sourceInterval\":[62,100]},null,[],[\"seq\",{\"sourceInterval\":[87,100]},[\"app\",{\"sourceInterval\":[87,91]},\"name\",[]],[\"opt\",{\"sourceInterval\":[92,100]},[\"app\",{\"sourceInterval\":[92,99]},\"Formals\",[]]]]],\"Formals\":[\"define\",{\"sourceInterval\":[104,143]},null,[],[\"seq\",{\"sourceInterval\":[118,143]},[\"terminal\",{\"sourceInterval\":[118,121]},\"(\"],[\"app\",{\"sourceInterval\":[122,139]},\"ListOf\",[[\"app\",{\"sourceInterval\":[129,133]},\"name\",[]],[\"terminal\",{\"sourceInterval\":[135,138]},\",\"]]],[\"terminal\",{\"sourceInterval\":[140,143]},\")\"]]],\"name\":[\"define\",{\"sourceInterval\":[147,187]},\"a name\",[],[\"seq\",{\"sourceInterval\":[168,187]},[\"app\",{\"sourceInterval\":[168,177]},\"nameFirst\",[]],[\"star\",{\"sourceInterval\":[178,187]},[\"app\",{\"sourceInterval\":[178,186]},\"nameRest\",[]]]]],\"nameFirst\":[\"define\",{\"sourceInterval\":[191,223]},null,[],[\"alt\",{\"sourceInterval\":[207,223]},[\"terminal\",{\"sourceInterval\":[207,210]},\"_\"],[\"app\",{\"sourceInterval\":[217,223]},\"letter\",[]]]],\"nameRest\":[\"define\",{\"sourceInterval\":[227,257]},null,[],[\"alt\",{\"sourceInterval\":[242,257]},[\"terminal\",{\"sourceInterval\":[242,245]},\"_\"],[\"app\",{\"sourceInterval\":[252,257]},\"alnum\",[]]]]}]));\n\n\n//# sourceURL=webpack://tatar-transliteratrr/./node_modules/ohm-js/dist/operations-and-attributes.js?");

/***/ }),

/***/ "./node_modules/ohm-js/index.mjs":
/*!***************************************!*\
  !*** ./node_modules/ohm-js/index.mjs ***!
  \***************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ExperimentalIndentationSensitive: () => (/* reexport safe */ _src_main_js__WEBPACK_IMPORTED_MODULE_0__.ExperimentalIndentationSensitive),\n/* harmony export */   _buildGrammar: () => (/* reexport safe */ _src_main_js__WEBPACK_IMPORTED_MODULE_0__._buildGrammar),\n/* harmony export */   grammar: () => (/* reexport safe */ _src_main_js__WEBPACK_IMPORTED_MODULE_0__.grammar),\n/* harmony export */   grammars: () => (/* reexport safe */ _src_main_js__WEBPACK_IMPORTED_MODULE_0__.grammars),\n/* harmony export */   makeRecipe: () => (/* reexport safe */ _src_main_js__WEBPACK_IMPORTED_MODULE_0__.makeRecipe),\n/* harmony export */   ohmGrammar: () => (/* reexport safe */ _src_main_js__WEBPACK_IMPORTED_MODULE_0__.ohmGrammar),\n/* harmony export */   pexprs: () => (/* reexport safe */ _src_main_js__WEBPACK_IMPORTED_MODULE_0__.pexprs),\n/* harmony export */   version: () => (/* reexport safe */ _src_main_js__WEBPACK_IMPORTED_MODULE_0__.version)\n/* harmony export */ });\n/* harmony import */ var _src_main_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./src/main.js */ \"./node_modules/ohm-js/src/main.js\");\n\n\n\n//# sourceURL=webpack://tatar-transliteratrr/./node_modules/ohm-js/index.mjs?");

/***/ }),

/***/ "./node_modules/ohm-js/src/Builder.js":
/*!********************************************!*\
  !*** ./node_modules/ohm-js/src/Builder.js ***!
  \********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Builder: () => (/* binding */ Builder)\n/* harmony export */ });\n/* harmony import */ var _Grammar_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Grammar.js */ \"./node_modules/ohm-js/src/Grammar.js\");\n/* harmony import */ var _GrammarDecl_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./GrammarDecl.js */ \"./node_modules/ohm-js/src/GrammarDecl.js\");\n/* harmony import */ var _pexprs_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./pexprs.js */ \"./node_modules/ohm-js/src/pexprs.js\");\n\n\n\n\n// --------------------------------------------------------------------\n// Private stuff\n// --------------------------------------------------------------------\n\nclass Builder {\n  constructor() {\n    this.currentDecl = null;\n    this.currentRuleName = null;\n  }\n\n  newGrammar(name) {\n    return new _GrammarDecl_js__WEBPACK_IMPORTED_MODULE_1__.GrammarDecl(name);\n  }\n\n  grammar(metaInfo, name, superGrammar, defaultStartRule, rules) {\n    const gDecl = new _GrammarDecl_js__WEBPACK_IMPORTED_MODULE_1__.GrammarDecl(name);\n    if (superGrammar) {\n      // `superGrammar` may be a recipe (i.e. an Array), or an actual grammar instance.\n      gDecl.withSuperGrammar(\n        superGrammar instanceof _Grammar_js__WEBPACK_IMPORTED_MODULE_0__.Grammar ? superGrammar : this.fromRecipe(superGrammar),\n      );\n    }\n    if (defaultStartRule) {\n      gDecl.withDefaultStartRule(defaultStartRule);\n    }\n    if (metaInfo && metaInfo.source) {\n      gDecl.withSource(metaInfo.source);\n    }\n\n    this.currentDecl = gDecl;\n    Object.keys(rules).forEach(ruleName => {\n      this.currentRuleName = ruleName;\n      const ruleRecipe = rules[ruleName];\n\n      const action = ruleRecipe[0]; // define/extend/override\n      const metaInfo = ruleRecipe[1];\n      const description = ruleRecipe[2];\n      const formals = ruleRecipe[3];\n      const body = this.fromRecipe(ruleRecipe[4]);\n\n      let source;\n      if (gDecl.source && metaInfo && metaInfo.sourceInterval) {\n        source = gDecl.source.subInterval(\n            metaInfo.sourceInterval[0],\n            metaInfo.sourceInterval[1] - metaInfo.sourceInterval[0],\n        );\n      }\n      gDecl[action](ruleName, formals, body, description, source);\n    });\n    this.currentRuleName = this.currentDecl = null;\n    return gDecl.build();\n  }\n\n  terminal(x) {\n    return new _pexprs_js__WEBPACK_IMPORTED_MODULE_2__.Terminal(x);\n  }\n\n  range(from, to) {\n    return new _pexprs_js__WEBPACK_IMPORTED_MODULE_2__.Range(from, to);\n  }\n\n  param(index) {\n    return new _pexprs_js__WEBPACK_IMPORTED_MODULE_2__.Param(index);\n  }\n\n  alt(...termArgs) {\n    let terms = [];\n    for (let arg of termArgs) {\n      if (!(arg instanceof _pexprs_js__WEBPACK_IMPORTED_MODULE_2__.PExpr)) {\n        arg = this.fromRecipe(arg);\n      }\n      if (arg instanceof _pexprs_js__WEBPACK_IMPORTED_MODULE_2__.Alt) {\n        terms = terms.concat(arg.terms);\n      } else {\n        terms.push(arg);\n      }\n    }\n    return terms.length === 1 ? terms[0] : new _pexprs_js__WEBPACK_IMPORTED_MODULE_2__.Alt(terms);\n  }\n\n  seq(...factorArgs) {\n    let factors = [];\n    for (let arg of factorArgs) {\n      if (!(arg instanceof _pexprs_js__WEBPACK_IMPORTED_MODULE_2__.PExpr)) {\n        arg = this.fromRecipe(arg);\n      }\n      if (arg instanceof _pexprs_js__WEBPACK_IMPORTED_MODULE_2__.Seq) {\n        factors = factors.concat(arg.factors);\n      } else {\n        factors.push(arg);\n      }\n    }\n    return factors.length === 1 ? factors[0] : new _pexprs_js__WEBPACK_IMPORTED_MODULE_2__.Seq(factors);\n  }\n\n  star(expr) {\n    if (!(expr instanceof _pexprs_js__WEBPACK_IMPORTED_MODULE_2__.PExpr)) {\n      expr = this.fromRecipe(expr);\n    }\n    return new _pexprs_js__WEBPACK_IMPORTED_MODULE_2__.Star(expr);\n  }\n\n  plus(expr) {\n    if (!(expr instanceof _pexprs_js__WEBPACK_IMPORTED_MODULE_2__.PExpr)) {\n      expr = this.fromRecipe(expr);\n    }\n    return new _pexprs_js__WEBPACK_IMPORTED_MODULE_2__.Plus(expr);\n  }\n\n  opt(expr) {\n    if (!(expr instanceof _pexprs_js__WEBPACK_IMPORTED_MODULE_2__.PExpr)) {\n      expr = this.fromRecipe(expr);\n    }\n    return new _pexprs_js__WEBPACK_IMPORTED_MODULE_2__.Opt(expr);\n  }\n\n  not(expr) {\n    if (!(expr instanceof _pexprs_js__WEBPACK_IMPORTED_MODULE_2__.PExpr)) {\n      expr = this.fromRecipe(expr);\n    }\n    return new _pexprs_js__WEBPACK_IMPORTED_MODULE_2__.Not(expr);\n  }\n\n  lookahead(expr) {\n    if (!(expr instanceof _pexprs_js__WEBPACK_IMPORTED_MODULE_2__.PExpr)) {\n      expr = this.fromRecipe(expr);\n    }\n    return new _pexprs_js__WEBPACK_IMPORTED_MODULE_2__.Lookahead(expr);\n  }\n\n  lex(expr) {\n    if (!(expr instanceof _pexprs_js__WEBPACK_IMPORTED_MODULE_2__.PExpr)) {\n      expr = this.fromRecipe(expr);\n    }\n    return new _pexprs_js__WEBPACK_IMPORTED_MODULE_2__.Lex(expr);\n  }\n\n  app(ruleName, optParams) {\n    if (optParams && optParams.length > 0) {\n      optParams = optParams.map(function(param) {\n        return param instanceof _pexprs_js__WEBPACK_IMPORTED_MODULE_2__.PExpr ? param : this.fromRecipe(param);\n      }, this);\n    }\n    return new _pexprs_js__WEBPACK_IMPORTED_MODULE_2__.Apply(ruleName, optParams);\n  }\n\n  // Note that unlike other methods in this class, this method cannot be used as a\n  // convenience constructor. It only works with recipes, because it relies on\n  // `this.currentDecl` and `this.currentRuleName` being set.\n  splice(beforeTerms, afterTerms) {\n    return new _pexprs_js__WEBPACK_IMPORTED_MODULE_2__.Splice(\n        this.currentDecl.superGrammar,\n        this.currentRuleName,\n        beforeTerms.map(term => this.fromRecipe(term)),\n        afterTerms.map(term => this.fromRecipe(term)),\n    );\n  }\n\n  fromRecipe(recipe) {\n    // the meta-info of 'grammar' is processed in Builder.grammar\n    const args = recipe[0] === 'grammar' ? recipe.slice(1) : recipe.slice(2);\n    const result = this[recipe[0]](...args);\n\n    const metaInfo = recipe[1];\n    if (metaInfo) {\n      if (metaInfo.sourceInterval && this.currentDecl) {\n        result.withSource(this.currentDecl.sourceInterval(...metaInfo.sourceInterval));\n      }\n    }\n    return result;\n  }\n}\n\n\n//# sourceURL=webpack://tatar-transliteratrr/./node_modules/ohm-js/src/Builder.js?");

/***/ }),

/***/ "./node_modules/ohm-js/src/CaseInsensitiveTerminal.js":
/*!************************************************************!*\
  !*** ./node_modules/ohm-js/src/CaseInsensitiveTerminal.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CaseInsensitiveTerminal: () => (/* binding */ CaseInsensitiveTerminal)\n/* harmony export */ });\n/* harmony import */ var _Failure_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Failure.js */ \"./node_modules/ohm-js/src/Failure.js\");\n/* harmony import */ var _nodes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./nodes.js */ \"./node_modules/ohm-js/src/nodes.js\");\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./common.js */ \"./node_modules/ohm-js/src/common.js\");\n/* harmony import */ var _pexprs_main_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pexprs-main.js */ \"./node_modules/ohm-js/src/pexprs-main.js\");\n\n\n\n\n\nclass CaseInsensitiveTerminal extends _pexprs_main_js__WEBPACK_IMPORTED_MODULE_3__.PExpr {\n  constructor(param) {\n    super();\n    this.obj = param;\n  }\n\n  _getString(state) {\n    const terminal = state.currentApplication().args[this.obj.index];\n    (0,_common_js__WEBPACK_IMPORTED_MODULE_2__.assert)(terminal instanceof _pexprs_main_js__WEBPACK_IMPORTED_MODULE_3__.Terminal, 'expected a Terminal expression');\n    return terminal.obj;\n  }\n\n  // Implementation of the PExpr API\n\n  allowsSkippingPrecedingSpace() {\n    return true;\n  }\n\n  eval(state) {\n    const {inputStream} = state;\n    const origPos = inputStream.pos;\n    const matchStr = this._getString(state);\n    if (!inputStream.matchString(matchStr, true)) {\n      state.processFailure(origPos, this);\n      return false;\n    } else {\n      state.pushBinding(new _nodes_js__WEBPACK_IMPORTED_MODULE_1__.TerminalNode(matchStr.length), origPos);\n      return true;\n    }\n  }\n\n  getArity() {\n    return 1;\n  }\n\n  substituteParams(actuals) {\n    return new CaseInsensitiveTerminal(this.obj.substituteParams(actuals));\n  }\n\n  toDisplayString() {\n    return this.obj.toDisplayString() + ' (case-insensitive)';\n  }\n\n  toFailure(grammar) {\n    return new _Failure_js__WEBPACK_IMPORTED_MODULE_0__.Failure(\n        this,\n        this.obj.toFailure(grammar) + ' (case-insensitive)',\n        'description',\n    );\n  }\n\n  _isNullable(grammar, memo) {\n    return this.obj._isNullable(grammar, memo);\n  }\n}\n\n\n//# sourceURL=webpack://tatar-transliteratrr/./node_modules/ohm-js/src/CaseInsensitiveTerminal.js?");

/***/ }),

/***/ "./node_modules/ohm-js/src/Failure.js":
/*!********************************************!*\
  !*** ./node_modules/ohm-js/src/Failure.js ***!
  \********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Failure: () => (/* binding */ Failure)\n/* harmony export */ });\n// --------------------------------------------------------------------\n// Private stuff\n// --------------------------------------------------------------------\n\n/*\n  `Failure`s represent expressions that weren't matched while parsing. They are used to generate\n  error messages automatically. The interface of `Failure`s includes the collowing methods:\n\n  - getText() : String\n  - getType() : String  (one of {\"description\", \"string\", \"code\"})\n  - isDescription() : bool\n  - isStringTerminal() : bool\n  - isCode() : bool\n  - isFluffy() : bool\n  - makeFluffy() : void\n  - subsumes(Failure) : bool\n*/\n\nfunction isValidType(type) {\n  return type === 'description' || type === 'string' || type === 'code';\n}\n\nclass Failure {\n  constructor(pexpr, text, type) {\n    if (!isValidType(type)) {\n      throw new Error('invalid Failure type: ' + type);\n    }\n    this.pexpr = pexpr;\n    this.text = text;\n    this.type = type;\n    this.fluffy = false;\n  }\n\n  getPExpr() {\n    return this.pexpr;\n  }\n\n  getText() {\n    return this.text;\n  }\n\n  getType() {\n    return this.type;\n  }\n\n  isDescription() {\n    return this.type === 'description';\n  }\n\n  isStringTerminal() {\n    return this.type === 'string';\n  }\n\n  isCode() {\n    return this.type === 'code';\n  }\n\n  isFluffy() {\n    return this.fluffy;\n  }\n\n  makeFluffy() {\n    this.fluffy = true;\n  }\n\n  clearFluffy() {\n    this.fluffy = false;\n  }\n\n  subsumes(that) {\n    return (\n      this.getText() === that.getText() &&\n      this.type === that.type &&\n      (!this.isFluffy() || (this.isFluffy() && that.isFluffy()))\n    );\n  }\n\n  toString() {\n    return this.type === 'string' ? JSON.stringify(this.getText()) : this.getText();\n  }\n\n  clone() {\n    const failure = new Failure(this.pexpr, this.text, this.type);\n    if (this.isFluffy()) {\n      failure.makeFluffy();\n    }\n    return failure;\n  }\n\n  toKey() {\n    return this.toString() + '#' + this.type;\n  }\n}\n\n\n//# sourceURL=webpack://tatar-transliteratrr/./node_modules/ohm-js/src/Failure.js?");

/***/ }),

/***/ "./node_modules/ohm-js/src/Grammar.js":
/*!********************************************!*\
  !*** ./node_modules/ohm-js/src/Grammar.js ***!
  \********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Grammar: () => (/* binding */ Grammar)\n/* harmony export */ });\n/* harmony import */ var _Matcher_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Matcher.js */ \"./node_modules/ohm-js/src/Matcher.js\");\n/* harmony import */ var _Semantics_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Semantics.js */ \"./node_modules/ohm-js/src/Semantics.js\");\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./common.js */ \"./node_modules/ohm-js/src/common.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./errors.js */ \"./node_modules/ohm-js/src/errors.js\");\n/* harmony import */ var _pexprs_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./pexprs.js */ \"./node_modules/ohm-js/src/pexprs.js\");\n\n\n\n\n\n\n// --------------------------------------------------------------------\n// Private stuff\n// --------------------------------------------------------------------\n\nconst SPECIAL_ACTION_NAMES = ['_iter', '_terminal', '_nonterminal', '_default'];\n\nfunction getSortedRuleValues(grammar) {\n  return Object.keys(grammar.rules)\n      .sort()\n      .map(name => grammar.rules[name]);\n}\n\n// Until ES2019, JSON was not a valid subset of JavaScript because U+2028 (line separator)\n// and U+2029 (paragraph separator) are allowed in JSON string literals, but not in JS.\n// This function properly encodes those two characters so that the resulting string is\n// represents both valid JSON, and valid JavaScript (for ES2018 and below).\n// See https://v8.dev/features/subsume-json for more details.\nconst jsonToJS = str => str.replace(/\\u2028/g, '\\\\u2028').replace(/\\u2029/g, '\\\\u2029');\n\nlet ohmGrammar;\nlet buildGrammar;\n\nclass Grammar {\n  constructor(name, superGrammar, rules, optDefaultStartRule) {\n    this.name = name;\n    this.superGrammar = superGrammar;\n    this.rules = rules;\n    if (optDefaultStartRule) {\n      if (!(optDefaultStartRule in rules)) {\n        throw new Error(\n            \"Invalid start rule: '\" +\n            optDefaultStartRule +\n            \"' is not a rule in grammar '\" +\n            name +\n            \"'\",\n        );\n      }\n      this.defaultStartRule = optDefaultStartRule;\n    }\n    this._matchStateInitializer = undefined;\n    this.supportsIncrementalParsing = true;\n  }\n\n  matcher() {\n    return new _Matcher_js__WEBPACK_IMPORTED_MODULE_0__.Matcher(this);\n  }\n\n  // Return true if the grammar is a built-in grammar, otherwise false.\n  // NOTE: This might give an unexpected result if called before BuiltInRules is defined!\n  isBuiltIn() {\n    return this === Grammar.ProtoBuiltInRules || this === Grammar.BuiltInRules;\n  }\n\n  equals(g) {\n    if (this === g) {\n      return true;\n    }\n    // Do the cheapest comparisons first.\n    if (\n      g == null ||\n      this.name !== g.name ||\n      this.defaultStartRule !== g.defaultStartRule ||\n      !(this.superGrammar === g.superGrammar || this.superGrammar.equals(g.superGrammar))\n    ) {\n      return false;\n    }\n    const myRules = getSortedRuleValues(this);\n    const otherRules = getSortedRuleValues(g);\n    return (\n      myRules.length === otherRules.length &&\n      myRules.every((rule, i) => {\n        return (\n          rule.description === otherRules[i].description &&\n          rule.formals.join(',') === otherRules[i].formals.join(',') &&\n          rule.body.toString() === otherRules[i].body.toString()\n        );\n      })\n    );\n  }\n\n  match(input, optStartApplication) {\n    const m = this.matcher();\n    m.replaceInputRange(0, 0, input);\n    return m.match(optStartApplication);\n  }\n\n  trace(input, optStartApplication) {\n    const m = this.matcher();\n    m.replaceInputRange(0, 0, input);\n    return m.trace(optStartApplication);\n  }\n\n  createSemantics() {\n    return _Semantics_js__WEBPACK_IMPORTED_MODULE_1__.Semantics.createSemantics(this);\n  }\n\n  extendSemantics(superSemantics) {\n    return _Semantics_js__WEBPACK_IMPORTED_MODULE_1__.Semantics.createSemantics(this, superSemantics._getSemantics());\n  }\n\n  // Check that every key in `actionDict` corresponds to a semantic action, and that it maps to\n  // a function of the correct arity. If not, throw an exception.\n  _checkTopDownActionDict(what, name, actionDict) {\n    const problems = [];\n\n    // eslint-disable-next-line guard-for-in\n    for (const k in actionDict) {\n      const v = actionDict[k];\n      const isSpecialAction = SPECIAL_ACTION_NAMES.includes(k);\n\n      if (!isSpecialAction && !(k in this.rules)) {\n        problems.push(`'${k}' is not a valid semantic action for '${this.name}'`);\n        continue;\n      }\n      if (typeof v !== 'function') {\n        problems.push(`'${k}' must be a function in an action dictionary for '${this.name}'`);\n        continue;\n      }\n      const actual = v.length;\n      const expected = this._topDownActionArity(k);\n      if (actual !== expected) {\n        let details;\n        if (k === '_iter' || k === '_nonterminal') {\n          details =\n            `it should use a rest parameter, e.g. \\`${k}(...children) {}\\`. ` +\n            'NOTE: this is new in Ohm v16 — see https://ohmjs.org/d/ati for details.';\n        } else {\n          details = `expected ${expected}, got ${actual}`;\n        }\n        problems.push(`Semantic action '${k}' has the wrong arity: ${details}`);\n      }\n    }\n    if (problems.length > 0) {\n      const prettyProblems = problems.map(problem => '- ' + problem);\n      const error = new Error(\n          [\n            `Found errors in the action dictionary of the '${name}' ${what}:`,\n            ...prettyProblems,\n          ].join('\\n'),\n      );\n      error.problems = problems;\n      throw error;\n    }\n  }\n\n  // Return the expected arity for a semantic action named `actionName`, which\n  // is either a rule name or a special action name like '_nonterminal'.\n  _topDownActionArity(actionName) {\n    // All special actions have an expected arity of 0, though all but _terminal\n    // are expected to use the rest parameter syntax (e.g. `_iter(...children)`).\n    // This is considered to have arity 0, i.e. `((...args) => {}).length` is 0.\n    return SPECIAL_ACTION_NAMES.includes(actionName) ?\n      0 :\n      this.rules[actionName].body.getArity();\n  }\n\n  _inheritsFrom(grammar) {\n    let g = this.superGrammar;\n    while (g) {\n      if (g.equals(grammar, true)) {\n        return true;\n      }\n      g = g.superGrammar;\n    }\n    return false;\n  }\n\n  toRecipe(superGrammarExpr = undefined) {\n    const metaInfo = {};\n    // Include the grammar source if it is available.\n    if (this.source) {\n      metaInfo.source = this.source.contents;\n    }\n\n    let startRule = null;\n    if (this.defaultStartRule) {\n      startRule = this.defaultStartRule;\n    }\n\n    const rules = {};\n    Object.keys(this.rules).forEach(ruleName => {\n      const ruleInfo = this.rules[ruleName];\n      const {body} = ruleInfo;\n      const isDefinition = !this.superGrammar || !this.superGrammar.rules[ruleName];\n\n      let operation;\n      if (isDefinition) {\n        operation = 'define';\n      } else {\n        operation = body instanceof _pexprs_js__WEBPACK_IMPORTED_MODULE_4__.Extend ? 'extend' : 'override';\n      }\n\n      const metaInfo = {};\n      if (ruleInfo.source && this.source) {\n        const adjusted = ruleInfo.source.relativeTo(this.source);\n        metaInfo.sourceInterval = [adjusted.startIdx, adjusted.endIdx];\n      }\n\n      const description = isDefinition ? ruleInfo.description : null;\n      const bodyRecipe = body.outputRecipe(ruleInfo.formals, this.source);\n\n      rules[ruleName] = [\n        operation, // \"define\"/\"extend\"/\"override\"\n        metaInfo,\n        description,\n        ruleInfo.formals,\n        bodyRecipe,\n      ];\n    });\n\n    // If the caller provided an expression to use for the supergrammar, use that.\n    // Otherwise, if the supergrammar is a user grammar, use its recipe inline.\n    let superGrammarOutput = 'null';\n    if (superGrammarExpr) {\n      superGrammarOutput = superGrammarExpr;\n    } else if (this.superGrammar && !this.superGrammar.isBuiltIn()) {\n      superGrammarOutput = this.superGrammar.toRecipe();\n    }\n\n    const recipeElements = [\n      ...['grammar', metaInfo, this.name].map(JSON.stringify),\n      superGrammarOutput,\n      ...[startRule, rules].map(JSON.stringify),\n    ];\n    return jsonToJS(`[${recipeElements.join(',')}]`);\n  }\n\n  // TODO: Come up with better names for these methods.\n  // TODO: Write the analog of these methods for inherited attributes.\n  toOperationActionDictionaryTemplate() {\n    return this._toOperationOrAttributeActionDictionaryTemplate();\n  }\n  toAttributeActionDictionaryTemplate() {\n    return this._toOperationOrAttributeActionDictionaryTemplate();\n  }\n\n  _toOperationOrAttributeActionDictionaryTemplate() {\n    // TODO: add the super-grammar's templates at the right place, e.g., a case for AddExpr_plus\n    // should appear next to other cases of AddExpr.\n\n    const sb = new _common_js__WEBPACK_IMPORTED_MODULE_2__.StringBuffer();\n    sb.append('{');\n\n    let first = true;\n    // eslint-disable-next-line guard-for-in\n    for (const ruleName in this.rules) {\n      const {body} = this.rules[ruleName];\n      if (first) {\n        first = false;\n      } else {\n        sb.append(',');\n      }\n      sb.append('\\n');\n      sb.append('  ');\n      this.addSemanticActionTemplate(ruleName, body, sb);\n    }\n\n    sb.append('\\n}');\n    return sb.contents();\n  }\n\n  addSemanticActionTemplate(ruleName, body, sb) {\n    sb.append(ruleName);\n    sb.append(': function(');\n    const arity = this._topDownActionArity(ruleName);\n    sb.append(_common_js__WEBPACK_IMPORTED_MODULE_2__.repeat('_', arity).join(', '));\n    sb.append(') {\\n');\n    sb.append('  }');\n  }\n\n  // Parse a string which expresses a rule application in this grammar, and return the\n  // resulting Apply node.\n  parseApplication(str) {\n    let app;\n    if (str.indexOf('<') === -1) {\n      // simple application\n      app = new _pexprs_js__WEBPACK_IMPORTED_MODULE_4__.Apply(str);\n    } else {\n      // parameterized application\n      const cst = ohmGrammar.match(str, 'Base_application');\n      app = buildGrammar(cst, {});\n    }\n\n    // Ensure that the application is valid.\n    if (!(app.ruleName in this.rules)) {\n      throw _errors_js__WEBPACK_IMPORTED_MODULE_3__.undeclaredRule(app.ruleName, this.name);\n    }\n    const {formals} = this.rules[app.ruleName];\n    if (formals.length !== app.args.length) {\n      const {source} = this.rules[app.ruleName];\n      throw _errors_js__WEBPACK_IMPORTED_MODULE_3__.wrongNumberOfParameters(\n          app.ruleName,\n          formals.length,\n          app.args.length,\n          source,\n      );\n    }\n    return app;\n  }\n\n  _setUpMatchState(state) {\n    if (this._matchStateInitializer) {\n      this._matchStateInitializer(state);\n    }\n  }\n}\n\n// The following grammar contains a few rules that couldn't be written  in \"userland\".\n// At the bottom of src/main.js, we create a sub-grammar of this grammar that's called\n// `BuiltInRules`. That grammar contains several convenience rules, e.g., `letter` and\n// `digit`, and is implicitly the super-grammar of any grammar whose super-grammar\n// isn't specified.\nGrammar.ProtoBuiltInRules = new Grammar(\n    'ProtoBuiltInRules', // name\n    undefined, // supergrammar\n    {\n      any: {\n        body: _pexprs_js__WEBPACK_IMPORTED_MODULE_4__.any,\n        formals: [],\n        description: 'any character',\n        primitive: true,\n      },\n      end: {\n        body: _pexprs_js__WEBPACK_IMPORTED_MODULE_4__.end,\n        formals: [],\n        description: 'end of input',\n        primitive: true,\n      },\n\n      caseInsensitive: {\n        body: new _pexprs_js__WEBPACK_IMPORTED_MODULE_4__.CaseInsensitiveTerminal(new _pexprs_js__WEBPACK_IMPORTED_MODULE_4__.Param(0)),\n        formals: ['str'],\n        primitive: true,\n      },\n      lower: {\n        body: new _pexprs_js__WEBPACK_IMPORTED_MODULE_4__.UnicodeChar('Ll'),\n        formals: [],\n        description: 'a lowercase letter',\n        primitive: true,\n      },\n      upper: {\n        body: new _pexprs_js__WEBPACK_IMPORTED_MODULE_4__.UnicodeChar('Lu'),\n        formals: [],\n        description: 'an uppercase letter',\n        primitive: true,\n      },\n      // Union of Lt (titlecase), Lm (modifier), and Lo (other), i.e. any letter not in Ll or Lu.\n      unicodeLtmo: {\n        body: new _pexprs_js__WEBPACK_IMPORTED_MODULE_4__.UnicodeChar('Ltmo'),\n        formals: [],\n        description: 'a Unicode character in Lt, Lm, or Lo',\n        primitive: true,\n      },\n\n      // These rules are not truly primitive (they could be written in userland) but are defined\n      // here for bootstrapping purposes.\n      spaces: {\n        body: new _pexprs_js__WEBPACK_IMPORTED_MODULE_4__.Star(new _pexprs_js__WEBPACK_IMPORTED_MODULE_4__.Apply('space')),\n        formals: [],\n      },\n      space: {\n        body: new _pexprs_js__WEBPACK_IMPORTED_MODULE_4__.Range('\\x00', ' '),\n        formals: [],\n        description: 'a space',\n      },\n    },\n);\n\n// This method is called from main.js once Ohm has loaded.\nGrammar.initApplicationParser = function(grammar, builderFn) {\n  ohmGrammar = grammar;\n  buildGrammar = builderFn;\n};\n\n\n//# sourceURL=webpack://tatar-transliteratrr/./node_modules/ohm-js/src/Grammar.js?");

/***/ }),

/***/ "./node_modules/ohm-js/src/GrammarDecl.js":
/*!************************************************!*\
  !*** ./node_modules/ohm-js/src/GrammarDecl.js ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GrammarDecl: () => (/* binding */ GrammarDecl)\n/* harmony export */ });\n/* harmony import */ var _Grammar_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Grammar.js */ \"./node_modules/ohm-js/src/Grammar.js\");\n/* harmony import */ var _InputStream_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./InputStream.js */ \"./node_modules/ohm-js/src/InputStream.js\");\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./common.js */ \"./node_modules/ohm-js/src/common.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./errors.js */ \"./node_modules/ohm-js/src/errors.js\");\n/* harmony import */ var _pexprs_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./pexprs.js */ \"./node_modules/ohm-js/src/pexprs.js\");\n\n\n\n\n\n\n// --------------------------------------------------------------------\n// Private Stuff\n// --------------------------------------------------------------------\n\n// Constructors\n\nclass GrammarDecl {\n  constructor(name) {\n    this.name = name;\n  }\n\n  // Helpers\n\n  sourceInterval(startIdx, endIdx) {\n    return this.source.subInterval(startIdx, endIdx - startIdx);\n  }\n\n  ensureSuperGrammar() {\n    if (!this.superGrammar) {\n      this.withSuperGrammar(\n        // TODO: The conditional expression below is an ugly hack. It's kind of ok because\n        // I doubt anyone will ever try to declare a grammar called `BuiltInRules`. Still,\n        // we should try to find a better way to do this.\n        this.name === 'BuiltInRules' ? _Grammar_js__WEBPACK_IMPORTED_MODULE_0__.Grammar.ProtoBuiltInRules : _Grammar_js__WEBPACK_IMPORTED_MODULE_0__.Grammar.BuiltInRules,\n      );\n    }\n    return this.superGrammar;\n  }\n\n  ensureSuperGrammarRuleForOverriding(name, source) {\n    const ruleInfo = this.ensureSuperGrammar().rules[name];\n    if (!ruleInfo) {\n      throw _errors_js__WEBPACK_IMPORTED_MODULE_3__.cannotOverrideUndeclaredRule(name, this.superGrammar.name, source);\n    }\n    return ruleInfo;\n  }\n\n  installOverriddenOrExtendedRule(name, formals, body, source) {\n    const duplicateParameterNames = (0,_common_js__WEBPACK_IMPORTED_MODULE_2__.getDuplicates)(formals);\n    if (duplicateParameterNames.length > 0) {\n      throw _errors_js__WEBPACK_IMPORTED_MODULE_3__.duplicateParameterNames(name, duplicateParameterNames, source);\n    }\n    const ruleInfo = this.ensureSuperGrammar().rules[name];\n    const expectedFormals = ruleInfo.formals;\n    const expectedNumFormals = expectedFormals ? expectedFormals.length : 0;\n    if (formals.length !== expectedNumFormals) {\n      throw _errors_js__WEBPACK_IMPORTED_MODULE_3__.wrongNumberOfParameters(name, expectedNumFormals, formals.length, source);\n    }\n    return this.install(name, formals, body, ruleInfo.description, source);\n  }\n\n  install(name, formals, body, description, source, primitive = false) {\n    this.rules[name] = {\n      body: body.introduceParams(formals),\n      formals,\n      description,\n      source,\n      primitive,\n    };\n    return this;\n  }\n\n  // Stuff that you should only do once\n\n  withSuperGrammar(superGrammar) {\n    if (this.superGrammar) {\n      throw new Error('the super grammar of a GrammarDecl cannot be set more than once');\n    }\n    this.superGrammar = superGrammar;\n    this.rules = Object.create(superGrammar.rules);\n\n    // Grammars with an explicit supergrammar inherit a default start rule.\n    if (!superGrammar.isBuiltIn()) {\n      this.defaultStartRule = superGrammar.defaultStartRule;\n    }\n    return this;\n  }\n\n  withDefaultStartRule(ruleName) {\n    this.defaultStartRule = ruleName;\n    return this;\n  }\n\n  withSource(source) {\n    this.source = new _InputStream_js__WEBPACK_IMPORTED_MODULE_1__.InputStream(source).interval(0, source.length);\n    return this;\n  }\n\n  // Creates a Grammar instance, and if it passes the sanity checks, returns it.\n  build() {\n    const grammar = new _Grammar_js__WEBPACK_IMPORTED_MODULE_0__.Grammar(\n        this.name,\n        this.ensureSuperGrammar(),\n        this.rules,\n        this.defaultStartRule,\n    );\n    // Initialize internal props that are inherited from the super grammar.\n    grammar._matchStateInitializer = grammar.superGrammar._matchStateInitializer;\n    grammar.supportsIncrementalParsing = grammar.superGrammar.supportsIncrementalParsing;\n\n    // TODO: change the pexpr.prototype.assert... methods to make them add\n    // exceptions to an array that's provided as an arg. Then we'll be able to\n    // show more than one error of the same type at a time.\n    // TODO: include the offending pexpr in the errors, that way we can show\n    // the part of the source that caused it.\n    const grammarErrors = [];\n    let grammarHasInvalidApplications = false;\n    Object.keys(grammar.rules).forEach(ruleName => {\n      const {body} = grammar.rules[ruleName];\n      try {\n        body.assertChoicesHaveUniformArity(ruleName);\n      } catch (e) {\n        grammarErrors.push(e);\n      }\n      try {\n        body.assertAllApplicationsAreValid(ruleName, grammar);\n      } catch (e) {\n        grammarErrors.push(e);\n        grammarHasInvalidApplications = true;\n      }\n    });\n    if (!grammarHasInvalidApplications) {\n      // The following check can only be done if the grammar has no invalid applications.\n      Object.keys(grammar.rules).forEach(ruleName => {\n        const {body} = grammar.rules[ruleName];\n        try {\n          body.assertIteratedExprsAreNotNullable(grammar, []);\n        } catch (e) {\n          grammarErrors.push(e);\n        }\n      });\n    }\n    if (grammarErrors.length > 0) {\n      _errors_js__WEBPACK_IMPORTED_MODULE_3__.throwErrors(grammarErrors);\n    }\n    if (this.source) {\n      grammar.source = this.source;\n    }\n\n    return grammar;\n  }\n\n  // Rule declarations\n\n  define(name, formals, body, description, source, primitive) {\n    this.ensureSuperGrammar();\n    if (this.superGrammar.rules[name]) {\n      throw _errors_js__WEBPACK_IMPORTED_MODULE_3__.duplicateRuleDeclaration(name, this.name, this.superGrammar.name, source);\n    } else if (this.rules[name]) {\n      throw _errors_js__WEBPACK_IMPORTED_MODULE_3__.duplicateRuleDeclaration(name, this.name, this.name, source);\n    }\n    const duplicateParameterNames = (0,_common_js__WEBPACK_IMPORTED_MODULE_2__.getDuplicates)(formals);\n    if (duplicateParameterNames.length > 0) {\n      throw _errors_js__WEBPACK_IMPORTED_MODULE_3__.duplicateParameterNames(name, duplicateParameterNames, source);\n    }\n    return this.install(name, formals, body, description, source, primitive);\n  }\n\n  override(name, formals, body, descIgnored, source) {\n    this.ensureSuperGrammarRuleForOverriding(name, source);\n    this.installOverriddenOrExtendedRule(name, formals, body, source);\n    return this;\n  }\n\n  extend(name, formals, fragment, descIgnored, source) {\n    const ruleInfo = this.ensureSuperGrammar().rules[name];\n    if (!ruleInfo) {\n      throw _errors_js__WEBPACK_IMPORTED_MODULE_3__.cannotExtendUndeclaredRule(name, this.superGrammar.name, source);\n    }\n    const body = new _pexprs_js__WEBPACK_IMPORTED_MODULE_4__.Extend(this.superGrammar, name, fragment);\n    body.source = fragment.source;\n    this.installOverriddenOrExtendedRule(name, formals, body, source);\n    return this;\n  }\n}\n\n\n//# sourceURL=webpack://tatar-transliteratrr/./node_modules/ohm-js/src/GrammarDecl.js?");

/***/ }),

/***/ "./node_modules/ohm-js/src/IndentationSensitive.js":
/*!*********************************************************!*\
  !*** ./node_modules/ohm-js/src/IndentationSensitive.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   IndentationSensitive: () => (/* binding */ IndentationSensitive)\n/* harmony export */ });\n/* harmony import */ var _dist_built_in_rules_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../dist/built-in-rules.js */ \"./node_modules/ohm-js/dist/built-in-rules.js\");\n/* harmony import */ var _src_Builder_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../src/Builder.js */ \"./node_modules/ohm-js/src/Builder.js\");\n/* harmony import */ var _src_Failure_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../src/Failure.js */ \"./node_modules/ohm-js/src/Failure.js\");\n/* harmony import */ var _src_nodes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../src/nodes.js */ \"./node_modules/ohm-js/src/nodes.js\");\n/* harmony import */ var _src_pexprs_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../src/pexprs.js */ \"./node_modules/ohm-js/src/pexprs.js\");\n/* harmony import */ var _findIndentation_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./findIndentation.js */ \"./node_modules/ohm-js/src/findIndentation.js\");\n/* harmony import */ var _InputStream_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./InputStream.js */ \"./node_modules/ohm-js/src/InputStream.js\");\n\n\n\n\n\n\n\n\nconst INDENT_DESCRIPTION = 'an indented block';\nconst DEDENT_DESCRIPTION = 'a dedent';\n\n// A sentinel value that is out of range for both charCodeAt() and codePointAt().\nconst INVALID_CODE_POINT = 0x10ffff + 1;\n\nclass InputStreamWithIndentation extends _InputStream_js__WEBPACK_IMPORTED_MODULE_6__.InputStream {\n  constructor(state) {\n    super(state.input);\n    this.state = state;\n  }\n\n  _indentationAt(pos) {\n    return this.state.userData[pos] || 0;\n  }\n\n  atEnd() {\n    return super.atEnd() && this._indentationAt(this.pos) === 0;\n  }\n\n  next() {\n    if (this._indentationAt(this.pos) !== 0) {\n      this.examinedLength = Math.max(this.examinedLength, this.pos);\n      return undefined;\n    }\n    return super.next();\n  }\n\n  nextCharCode() {\n    if (this._indentationAt(this.pos) !== 0) {\n      this.examinedLength = Math.max(this.examinedLength, this.pos);\n      return INVALID_CODE_POINT;\n    }\n    return super.nextCharCode();\n  }\n\n  nextCodePoint() {\n    if (this._indentationAt(this.pos) !== 0) {\n      this.examinedLength = Math.max(this.examinedLength, this.pos);\n      return INVALID_CODE_POINT;\n    }\n    return super.nextCodePoint();\n  }\n}\n\nclass Indentation extends _src_pexprs_js__WEBPACK_IMPORTED_MODULE_4__.PExpr {\n  constructor(isIndent = true) {\n    super();\n    this.isIndent = isIndent;\n  }\n\n  allowsSkippingPrecedingSpace() {\n    return true;\n  }\n\n  eval(state) {\n    const {inputStream} = state;\n    const pseudoTokens = state.userData;\n    state.doNotMemoize = true;\n\n    const origPos = inputStream.pos;\n\n    const sign = this.isIndent ? 1 : -1;\n    const count = (pseudoTokens[origPos] || 0) * sign;\n    if (count > 0) {\n      // Update the count to consume the pseudotoken.\n      state.userData = Object.create(pseudoTokens);\n      state.userData[origPos] -= sign;\n\n      state.pushBinding(new _src_nodes_js__WEBPACK_IMPORTED_MODULE_3__.TerminalNode(0), origPos);\n      return true;\n    } else {\n      state.processFailure(origPos, this);\n      return false;\n    }\n  }\n\n  getArity() {\n    return 1;\n  }\n\n  _assertAllApplicationsAreValid(ruleName, grammar) {}\n\n  _isNullable(grammar, memo) {\n    return false;\n  }\n\n  assertChoicesHaveUniformArity(ruleName) {}\n\n  assertIteratedExprsAreNotNullable(grammar) {}\n\n  introduceParams(formals) {\n    return this;\n  }\n\n  substituteParams(actuals) {\n    return this;\n  }\n\n  toString() {\n    return this.isIndent ? 'indent' : 'dedent';\n  }\n\n  toDisplayString() {\n    return this.toString();\n  }\n\n  toFailure(grammar) {\n    const description = this.isIndent ? INDENT_DESCRIPTION : DEDENT_DESCRIPTION;\n    return new _src_Failure_js__WEBPACK_IMPORTED_MODULE_2__.Failure(this, description, 'description');\n  }\n}\n\n// Create a new definition for `any` that can consume indent & dedent.\nconst applyIndent = new _src_pexprs_js__WEBPACK_IMPORTED_MODULE_4__.Apply('indent');\nconst applyDedent = new _src_pexprs_js__WEBPACK_IMPORTED_MODULE_4__.Apply('dedent');\nconst newAnyBody = new _src_pexprs_js__WEBPACK_IMPORTED_MODULE_4__.Splice(_dist_built_in_rules_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"], 'any', [applyIndent, applyDedent], []);\n\nconst IndentationSensitive = new _src_Builder_js__WEBPACK_IMPORTED_MODULE_1__.Builder()\n    .newGrammar('IndentationSensitive')\n    .withSuperGrammar(_dist_built_in_rules_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])\n    .define('indent', [], new Indentation(true), INDENT_DESCRIPTION, undefined, true)\n    .define('dedent', [], new Indentation(false), DEDENT_DESCRIPTION, undefined, true)\n    .extend('any', [], newAnyBody, 'any character', undefined)\n    .build();\n\nObject.assign(IndentationSensitive, {\n  _matchStateInitializer(state) {\n    state.userData = (0,_findIndentation_js__WEBPACK_IMPORTED_MODULE_5__.findIndentation)(state.input);\n    state.inputStream = new InputStreamWithIndentation(state);\n  },\n  supportsIncrementalParsing: false,\n});\n\n\n//# sourceURL=webpack://tatar-transliteratrr/./node_modules/ohm-js/src/IndentationSensitive.js?");

/***/ }),

/***/ "./node_modules/ohm-js/src/InputStream.js":
/*!************************************************!*\
  !*** ./node_modules/ohm-js/src/InputStream.js ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   InputStream: () => (/* binding */ InputStream)\n/* harmony export */ });\n/* harmony import */ var _Interval_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Interval.js */ \"./node_modules/ohm-js/src/Interval.js\");\n\n\nconst MAX_CHAR_CODE = 0xffff;\n\nclass InputStream {\n  constructor(source) {\n    this.source = source;\n    this.pos = 0;\n    this.examinedLength = 0;\n  }\n\n  atEnd() {\n    const ans = this.pos >= this.source.length;\n    this.examinedLength = Math.max(this.examinedLength, this.pos + 1);\n    return ans;\n  }\n\n  next() {\n    const ans = this.source[this.pos++];\n    this.examinedLength = Math.max(this.examinedLength, this.pos);\n    return ans;\n  }\n\n  nextCharCode() {\n    const nextChar = this.next();\n    return nextChar && nextChar.charCodeAt(0);\n  }\n\n  nextCodePoint() {\n    const cp = this.source.slice(this.pos++).codePointAt(0);\n    // If the code point is beyond plane 0, it takes up two characters.\n    if (cp > MAX_CHAR_CODE) {\n      this.pos += 1;\n    }\n    this.examinedLength = Math.max(this.examinedLength, this.pos);\n    return cp;\n  }\n\n  matchString(s, optIgnoreCase) {\n    let idx;\n    if (optIgnoreCase) {\n      /*\n        Case-insensitive comparison is a tricky business. Some notable gotchas include the\n        \"Turkish I\" problem (http://www.i18nguy.com/unicode/turkish-i18n.html) and the fact\n        that the German Esszet (ß) turns into \"SS\" in upper case.\n\n        This is intended to be a locale-invariant comparison, which means it may not obey\n        locale-specific expectations (e.g. \"i\" => \"İ\").\n       */\n      for (idx = 0; idx < s.length; idx++) {\n        const actual = this.next();\n        const expected = s[idx];\n        if (actual == null || actual.toUpperCase() !== expected.toUpperCase()) {\n          return false;\n        }\n      }\n      return true;\n    }\n    // Default is case-sensitive comparison.\n    for (idx = 0; idx < s.length; idx++) {\n      if (this.next() !== s[idx]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  sourceSlice(startIdx, endIdx) {\n    return this.source.slice(startIdx, endIdx);\n  }\n\n  interval(startIdx, optEndIdx) {\n    return new _Interval_js__WEBPACK_IMPORTED_MODULE_0__.Interval(this.source, startIdx, optEndIdx ? optEndIdx : this.pos);\n  }\n}\n\n\n//# sourceURL=webpack://tatar-transliteratrr/./node_modules/ohm-js/src/InputStream.js?");

/***/ }),

/***/ "./node_modules/ohm-js/src/Interval.js":
/*!*********************************************!*\
  !*** ./node_modules/ohm-js/src/Interval.js ***!
  \*********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Interval: () => (/* binding */ Interval)\n/* harmony export */ });\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common.js */ \"./node_modules/ohm-js/src/common.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./errors.js */ \"./node_modules/ohm-js/src/errors.js\");\n/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./util.js */ \"./node_modules/ohm-js/src/util.js\");\n\n\n\n\n// --------------------------------------------------------------------\n// Private stuff\n// --------------------------------------------------------------------\n\nclass Interval {\n  constructor(sourceString, startIdx, endIdx) {\n    this.sourceString = sourceString;\n    this.startIdx = startIdx;\n    this.endIdx = endIdx;\n  }\n\n  get contents() {\n    if (this._contents === undefined) {\n      this._contents = this.sourceString.slice(this.startIdx, this.endIdx);\n    }\n    return this._contents;\n  }\n\n  get length() {\n    return this.endIdx - this.startIdx;\n  }\n\n  coverageWith(...intervals) {\n    return Interval.coverage(...intervals, this);\n  }\n\n  collapsedLeft() {\n    return new Interval(this.sourceString, this.startIdx, this.startIdx);\n  }\n\n  collapsedRight() {\n    return new Interval(this.sourceString, this.endIdx, this.endIdx);\n  }\n\n  getLineAndColumn() {\n    return _util_js__WEBPACK_IMPORTED_MODULE_2__.getLineAndColumn(this.sourceString, this.startIdx);\n  }\n\n  getLineAndColumnMessage() {\n    const range = [this.startIdx, this.endIdx];\n    return _util_js__WEBPACK_IMPORTED_MODULE_2__.getLineAndColumnMessage(this.sourceString, this.startIdx, range);\n  }\n\n  // Returns an array of 0, 1, or 2 intervals that represents the result of the\n  // interval difference operation.\n  minus(that) {\n    if (this.sourceString !== that.sourceString) {\n      throw _errors_js__WEBPACK_IMPORTED_MODULE_1__.intervalSourcesDontMatch();\n    } else if (this.startIdx === that.startIdx && this.endIdx === that.endIdx) {\n      // `this` and `that` are the same interval!\n      return [];\n    } else if (this.startIdx < that.startIdx && that.endIdx < this.endIdx) {\n      // `that` splits `this` into two intervals\n      return [\n        new Interval(this.sourceString, this.startIdx, that.startIdx),\n        new Interval(this.sourceString, that.endIdx, this.endIdx),\n      ];\n    } else if (this.startIdx < that.endIdx && that.endIdx < this.endIdx) {\n      // `that` contains a prefix of `this`\n      return [new Interval(this.sourceString, that.endIdx, this.endIdx)];\n    } else if (this.startIdx < that.startIdx && that.startIdx < this.endIdx) {\n      // `that` contains a suffix of `this`\n      return [new Interval(this.sourceString, this.startIdx, that.startIdx)];\n    } else {\n      // `that` and `this` do not overlap\n      return [this];\n    }\n  }\n\n  // Returns a new Interval that has the same extent as this one, but which is relative\n  // to `that`, an Interval that fully covers this one.\n  relativeTo(that) {\n    if (this.sourceString !== that.sourceString) {\n      throw _errors_js__WEBPACK_IMPORTED_MODULE_1__.intervalSourcesDontMatch();\n    }\n    (0,_common_js__WEBPACK_IMPORTED_MODULE_0__.assert)(\n        this.startIdx >= that.startIdx && this.endIdx <= that.endIdx,\n        'other interval does not cover this one',\n    );\n    return new Interval(\n        this.sourceString,\n        this.startIdx - that.startIdx,\n        this.endIdx - that.startIdx,\n    );\n  }\n\n  // Returns a new Interval which contains the same contents as this one,\n  // but with whitespace trimmed from both ends.\n  trimmed() {\n    const {contents} = this;\n    const startIdx = this.startIdx + contents.match(/^\\s*/)[0].length;\n    const endIdx = this.endIdx - contents.match(/\\s*$/)[0].length;\n    return new Interval(this.sourceString, startIdx, endIdx);\n  }\n\n  subInterval(offset, len) {\n    const newStartIdx = this.startIdx + offset;\n    return new Interval(this.sourceString, newStartIdx, newStartIdx + len);\n  }\n}\n\nInterval.coverage = function(firstInterval, ...intervals) {\n  let {startIdx, endIdx} = firstInterval;\n  for (const interval of intervals) {\n    if (interval.sourceString !== firstInterval.sourceString) {\n      throw _errors_js__WEBPACK_IMPORTED_MODULE_1__.intervalSourcesDontMatch();\n    } else {\n      startIdx = Math.min(startIdx, interval.startIdx);\n      endIdx = Math.max(endIdx, interval.endIdx);\n    }\n  }\n  return new Interval(firstInterval.sourceString, startIdx, endIdx);\n};\n\n\n//# sourceURL=webpack://tatar-transliteratrr/./node_modules/ohm-js/src/Interval.js?");

/***/ }),

/***/ "./node_modules/ohm-js/src/MatchResult.js":
/*!************************************************!*\
  !*** ./node_modules/ohm-js/src/MatchResult.js ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MatchResult: () => (/* binding */ MatchResult)\n/* harmony export */ });\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common.js */ \"./node_modules/ohm-js/src/common.js\");\n/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util.js */ \"./node_modules/ohm-js/src/util.js\");\n/* harmony import */ var _Interval_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Interval.js */ \"./node_modules/ohm-js/src/Interval.js\");\n\n\n\n\n// --------------------------------------------------------------------\n// Private stuff\n// --------------------------------------------------------------------\n\nclass MatchResult {\n  constructor(\n      matcher,\n      input,\n      startExpr,\n      cst,\n      cstOffset,\n      rightmostFailurePosition,\n      optRecordedFailures,\n  ) {\n    this.matcher = matcher;\n    this.input = input;\n    this.startExpr = startExpr;\n    this._cst = cst;\n    this._cstOffset = cstOffset;\n    this._rightmostFailurePosition = rightmostFailurePosition;\n    this._rightmostFailures = optRecordedFailures;\n\n    if (this.failed()) {\n      /* eslint-disable no-invalid-this */\n      _common_js__WEBPACK_IMPORTED_MODULE_0__.defineLazyProperty(this, 'message', function() {\n        const detail = 'Expected ' + this.getExpectedText();\n        return (\n          _util_js__WEBPACK_IMPORTED_MODULE_1__.getLineAndColumnMessage(this.input, this.getRightmostFailurePosition()) + detail\n        );\n      });\n      _common_js__WEBPACK_IMPORTED_MODULE_0__.defineLazyProperty(this, 'shortMessage', function() {\n        const detail = 'expected ' + this.getExpectedText();\n        const errorInfo = _util_js__WEBPACK_IMPORTED_MODULE_1__.getLineAndColumn(\n            this.input,\n            this.getRightmostFailurePosition(),\n        );\n        return 'Line ' + errorInfo.lineNum + ', col ' + errorInfo.colNum + ': ' + detail;\n      });\n      /* eslint-enable no-invalid-this */\n    }\n  }\n\n  succeeded() {\n    return !!this._cst;\n  }\n\n  failed() {\n    return !this.succeeded();\n  }\n\n  getRightmostFailurePosition() {\n    return this._rightmostFailurePosition;\n  }\n\n  getRightmostFailures() {\n    if (!this._rightmostFailures) {\n      this.matcher.setInput(this.input);\n      const matchResultWithFailures = this.matcher._match(this.startExpr, {\n        tracing: false,\n        positionToRecordFailures: this.getRightmostFailurePosition(),\n      });\n      this._rightmostFailures = matchResultWithFailures.getRightmostFailures();\n    }\n    return this._rightmostFailures;\n  }\n\n  toString() {\n    return this.succeeded() ?\n      '[match succeeded]' :\n      '[match failed at position ' + this.getRightmostFailurePosition() + ']';\n  }\n\n  // Return a string summarizing the expected contents of the input stream when\n  // the match failure occurred.\n  getExpectedText() {\n    if (this.succeeded()) {\n      throw new Error('cannot get expected text of a successful MatchResult');\n    }\n\n    const sb = new _common_js__WEBPACK_IMPORTED_MODULE_0__.StringBuffer();\n    let failures = this.getRightmostFailures();\n\n    // Filter out the fluffy failures to make the default error messages more useful\n    failures = failures.filter(failure => !failure.isFluffy());\n\n    for (let idx = 0; idx < failures.length; idx++) {\n      if (idx > 0) {\n        if (idx === failures.length - 1) {\n          sb.append(failures.length > 2 ? ', or ' : ' or ');\n        } else {\n          sb.append(', ');\n        }\n      }\n      sb.append(failures[idx].toString());\n    }\n    return sb.contents();\n  }\n\n  getInterval() {\n    const pos = this.getRightmostFailurePosition();\n    return new _Interval_js__WEBPACK_IMPORTED_MODULE_2__.Interval(this.input, pos, pos);\n  }\n}\n\n\n//# sourceURL=webpack://tatar-transliteratrr/./node_modules/ohm-js/src/MatchResult.js?");

/***/ }),

/***/ "./node_modules/ohm-js/src/MatchState.js":
/*!***********************************************!*\
  !*** ./node_modules/ohm-js/src/MatchState.js ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MatchState: () => (/* binding */ MatchState)\n/* harmony export */ });\n/* harmony import */ var _InputStream_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./InputStream.js */ \"./node_modules/ohm-js/src/InputStream.js\");\n/* harmony import */ var _MatchResult_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./MatchResult.js */ \"./node_modules/ohm-js/src/MatchResult.js\");\n/* harmony import */ var _PosInfo_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./PosInfo.js */ \"./node_modules/ohm-js/src/PosInfo.js\");\n/* harmony import */ var _Trace_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Trace.js */ \"./node_modules/ohm-js/src/Trace.js\");\n/* harmony import */ var _pexprs_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./pexprs.js */ \"./node_modules/ohm-js/src/pexprs.js\");\n/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./util.js */ \"./node_modules/ohm-js/src/util.js\");\n\n\n\n\n\n\n\n// --------------------------------------------------------------------\n// Private stuff\n// --------------------------------------------------------------------\n\nlet builtInApplySyntacticBody;\n\n_util_js__WEBPACK_IMPORTED_MODULE_5__.awaitBuiltInRules(builtInRules => {\n  builtInApplySyntacticBody = builtInRules.rules.applySyntactic.body;\n});\n\nconst applySpaces = new _pexprs_js__WEBPACK_IMPORTED_MODULE_4__.Apply('spaces');\n\nclass MatchState {\n  constructor(matcher, startExpr, optPositionToRecordFailures) {\n    this.matcher = matcher;\n    this.startExpr = startExpr;\n\n    this.grammar = matcher.grammar;\n    this.input = matcher.getInput();\n    this.inputStream = new _InputStream_js__WEBPACK_IMPORTED_MODULE_0__.InputStream(this.input);\n    this.memoTable = matcher._memoTable;\n\n    this.userData = undefined;\n    this.doNotMemoize = false;\n\n    this._bindings = [];\n    this._bindingOffsets = [];\n    this._applicationStack = [];\n    this._posStack = [0];\n    this.inLexifiedContextStack = [false];\n\n    this.rightmostFailurePosition = -1;\n    this._rightmostFailurePositionStack = [];\n    this._recordedFailuresStack = [];\n\n    if (optPositionToRecordFailures !== undefined) {\n      this.positionToRecordFailures = optPositionToRecordFailures;\n      this.recordedFailures = Object.create(null);\n    }\n  }\n\n  posToOffset(pos) {\n    return pos - this._posStack[this._posStack.length - 1];\n  }\n\n  enterApplication(posInfo, app) {\n    this._posStack.push(this.inputStream.pos);\n    this._applicationStack.push(app);\n    this.inLexifiedContextStack.push(false);\n    posInfo.enter(app);\n    this._rightmostFailurePositionStack.push(this.rightmostFailurePosition);\n    this.rightmostFailurePosition = -1;\n  }\n\n  exitApplication(posInfo, optNode) {\n    const origPos = this._posStack.pop();\n    this._applicationStack.pop();\n    this.inLexifiedContextStack.pop();\n    posInfo.exit();\n\n    this.rightmostFailurePosition = Math.max(\n        this.rightmostFailurePosition,\n        this._rightmostFailurePositionStack.pop(),\n    );\n\n    if (optNode) {\n      this.pushBinding(optNode, origPos);\n    }\n  }\n\n  enterLexifiedContext() {\n    this.inLexifiedContextStack.push(true);\n  }\n\n  exitLexifiedContext() {\n    this.inLexifiedContextStack.pop();\n  }\n\n  currentApplication() {\n    return this._applicationStack[this._applicationStack.length - 1];\n  }\n\n  inSyntacticContext() {\n    const currentApplication = this.currentApplication();\n    if (currentApplication) {\n      return currentApplication.isSyntactic() && !this.inLexifiedContext();\n    } else {\n      // The top-level context is syntactic if the start application is.\n      return this.startExpr.factors[0].isSyntactic();\n    }\n  }\n\n  inLexifiedContext() {\n    return this.inLexifiedContextStack[this.inLexifiedContextStack.length - 1];\n  }\n\n  skipSpaces() {\n    this.pushFailuresInfo();\n    this.eval(applySpaces);\n    this.popBinding();\n    this.popFailuresInfo();\n    return this.inputStream.pos;\n  }\n\n  skipSpacesIfInSyntacticContext() {\n    return this.inSyntacticContext() ? this.skipSpaces() : this.inputStream.pos;\n  }\n\n  maybeSkipSpacesBefore(expr) {\n    if (expr.allowsSkippingPrecedingSpace() && expr !== applySpaces) {\n      return this.skipSpacesIfInSyntacticContext();\n    } else {\n      return this.inputStream.pos;\n    }\n  }\n\n  pushBinding(node, origPos) {\n    this._bindings.push(node);\n    this._bindingOffsets.push(this.posToOffset(origPos));\n  }\n\n  popBinding() {\n    this._bindings.pop();\n    this._bindingOffsets.pop();\n  }\n\n  numBindings() {\n    return this._bindings.length;\n  }\n\n  truncateBindings(newLength) {\n    // Yes, this is this really faster than setting the `length` property (tested with\n    // bin/es5bench on Node v6.1.0).\n    // Update 2021-10-25: still true on v14.15.5 — it's ~20% speedup on es5bench.\n    while (this._bindings.length > newLength) {\n      this.popBinding();\n    }\n  }\n\n  getCurrentPosInfo() {\n    return this.getPosInfo(this.inputStream.pos);\n  }\n\n  getPosInfo(pos) {\n    let posInfo = this.memoTable[pos];\n    if (!posInfo) {\n      posInfo = this.memoTable[pos] = new _PosInfo_js__WEBPACK_IMPORTED_MODULE_2__.PosInfo();\n    }\n    return posInfo;\n  }\n\n  processFailure(pos, expr) {\n    this.rightmostFailurePosition = Math.max(this.rightmostFailurePosition, pos);\n\n    if (this.recordedFailures && pos === this.positionToRecordFailures) {\n      const app = this.currentApplication();\n      if (app) {\n        // Substitute parameters with the actual pexprs that were passed to\n        // the current rule.\n        expr = expr.substituteParams(app.args);\n      } else {\n        // This branch is only reached for the \"end-check\" that is\n        // performed after the top-level application. In that case,\n        // expr === pexprs.end so there is no need to substitute\n        // parameters.\n      }\n\n      this.recordFailure(expr.toFailure(this.grammar), false);\n    }\n  }\n\n  recordFailure(failure, shouldCloneIfNew) {\n    const key = failure.toKey();\n    if (!this.recordedFailures[key]) {\n      this.recordedFailures[key] = shouldCloneIfNew ? failure.clone() : failure;\n    } else if (this.recordedFailures[key].isFluffy() && !failure.isFluffy()) {\n      this.recordedFailures[key].clearFluffy();\n    }\n  }\n\n  recordFailures(failures, shouldCloneIfNew) {\n    Object.keys(failures).forEach(key => {\n      this.recordFailure(failures[key], shouldCloneIfNew);\n    });\n  }\n\n  cloneRecordedFailures() {\n    if (!this.recordedFailures) {\n      return undefined;\n    }\n\n    const ans = Object.create(null);\n    Object.keys(this.recordedFailures).forEach(key => {\n      ans[key] = this.recordedFailures[key].clone();\n    });\n    return ans;\n  }\n\n  getRightmostFailurePosition() {\n    return this.rightmostFailurePosition;\n  }\n\n  _getRightmostFailureOffset() {\n    return this.rightmostFailurePosition >= 0 ?\n      this.posToOffset(this.rightmostFailurePosition) :\n      -1;\n  }\n\n  // Returns the memoized trace entry for `expr` at `pos`, if one exists, `null` otherwise.\n  getMemoizedTraceEntry(pos, expr) {\n    const posInfo = this.memoTable[pos];\n    if (posInfo && expr instanceof _pexprs_js__WEBPACK_IMPORTED_MODULE_4__.Apply) {\n      const memoRec = posInfo.memo[expr.toMemoKey()];\n      if (memoRec && memoRec.traceEntry) {\n        const entry = memoRec.traceEntry.cloneWithExpr(expr);\n        entry.isMemoized = true;\n        return entry;\n      }\n    }\n    return null;\n  }\n\n  // Returns a new trace entry, with the currently active trace array as its children.\n  getTraceEntry(pos, expr, succeeded, bindings) {\n    if (expr instanceof _pexprs_js__WEBPACK_IMPORTED_MODULE_4__.Apply) {\n      const app = this.currentApplication();\n      const actuals = app ? app.args : [];\n      expr = expr.substituteParams(actuals);\n    }\n    return (\n      this.getMemoizedTraceEntry(pos, expr) ||\n      new _Trace_js__WEBPACK_IMPORTED_MODULE_3__.Trace(this.input, pos, this.inputStream.pos, expr, succeeded, bindings, this.trace)\n    );\n  }\n\n  isTracing() {\n    return !!this.trace;\n  }\n\n  hasNecessaryInfo(memoRec) {\n    if (this.trace && !memoRec.traceEntry) {\n      return false;\n    }\n\n    if (\n      this.recordedFailures &&\n      this.inputStream.pos + memoRec.rightmostFailureOffset === this.positionToRecordFailures\n    ) {\n      return !!memoRec.failuresAtRightmostPosition;\n    }\n\n    return true;\n  }\n\n  useMemoizedResult(origPos, memoRec) {\n    if (this.trace) {\n      this.trace.push(memoRec.traceEntry);\n    }\n\n    const memoRecRightmostFailurePosition =\n      this.inputStream.pos + memoRec.rightmostFailureOffset;\n    this.rightmostFailurePosition = Math.max(\n        this.rightmostFailurePosition,\n        memoRecRightmostFailurePosition,\n    );\n    if (\n      this.recordedFailures &&\n      this.positionToRecordFailures === memoRecRightmostFailurePosition &&\n      memoRec.failuresAtRightmostPosition\n    ) {\n      this.recordFailures(memoRec.failuresAtRightmostPosition, true);\n    }\n\n    this.inputStream.examinedLength = Math.max(\n        this.inputStream.examinedLength,\n        memoRec.examinedLength + origPos,\n    );\n\n    if (memoRec.value) {\n      this.inputStream.pos += memoRec.matchLength;\n      this.pushBinding(memoRec.value, origPos);\n      return true;\n    }\n    return false;\n  }\n\n  // Evaluate `expr` and return `true` if it succeeded, `false` otherwise. On success, `bindings`\n  // will have `expr.getArity()` more elements than before, and the input stream's position may\n  // have increased. On failure, `bindings` and position will be unchanged.\n  eval(expr) {\n    const {inputStream} = this;\n    const origNumBindings = this._bindings.length;\n    const origUserData = this.userData;\n\n    let origRecordedFailures;\n    if (this.recordedFailures) {\n      origRecordedFailures = this.recordedFailures;\n      this.recordedFailures = Object.create(null);\n    }\n\n    const origPos = inputStream.pos;\n    const memoPos = this.maybeSkipSpacesBefore(expr);\n\n    let origTrace;\n    if (this.trace) {\n      origTrace = this.trace;\n      this.trace = [];\n    }\n\n    // Do the actual evaluation.\n    const ans = expr.eval(this);\n\n    if (this.trace) {\n      const bindings = this._bindings.slice(origNumBindings);\n      const traceEntry = this.getTraceEntry(memoPos, expr, ans, bindings);\n      traceEntry.isImplicitSpaces = expr === applySpaces;\n      traceEntry.isRootNode = expr === this.startExpr;\n      origTrace.push(traceEntry);\n      this.trace = origTrace;\n    }\n\n    if (ans) {\n      if (this.recordedFailures && inputStream.pos === this.positionToRecordFailures) {\n        Object.keys(this.recordedFailures).forEach(key => {\n          this.recordedFailures[key].makeFluffy();\n        });\n      }\n    } else {\n      // Reset the position, bindings, and userData.\n      inputStream.pos = origPos;\n      this.truncateBindings(origNumBindings);\n      this.userData = origUserData;\n    }\n\n    if (this.recordedFailures) {\n      this.recordFailures(origRecordedFailures, false);\n    }\n\n    // The built-in applySyntactic rule needs special handling: we want to skip\n    // trailing spaces, just as with the top-level application of a syntactic rule.\n    if (expr === builtInApplySyntacticBody) {\n      this.skipSpaces();\n    }\n\n    return ans;\n  }\n\n  getMatchResult() {\n    this.grammar._setUpMatchState(this);\n    this.eval(this.startExpr);\n    let rightmostFailures;\n    if (this.recordedFailures) {\n      rightmostFailures = Object.keys(this.recordedFailures).map(\n          key => this.recordedFailures[key],\n      );\n    }\n    const cst = this._bindings[0];\n    if (cst) {\n      cst.grammar = this.grammar;\n    }\n    return new _MatchResult_js__WEBPACK_IMPORTED_MODULE_1__.MatchResult(\n        this.matcher,\n        this.input,\n        this.startExpr,\n        cst,\n        this._bindingOffsets[0],\n        this.rightmostFailurePosition,\n        rightmostFailures,\n    );\n  }\n\n  getTrace() {\n    this.trace = [];\n    const matchResult = this.getMatchResult();\n\n    // The trace node for the start rule is always the last entry. If it is a syntactic rule,\n    // the first entry is for an application of 'spaces'.\n    // TODO(pdubroy): Clean this up by introducing a special `Match<startAppl>` rule, which will\n    // ensure that there is always a single root trace node.\n    const rootTrace = this.trace[this.trace.length - 1];\n    rootTrace.result = matchResult;\n    return rootTrace;\n  }\n\n  pushFailuresInfo() {\n    this._rightmostFailurePositionStack.push(this.rightmostFailurePosition);\n    this._recordedFailuresStack.push(this.recordedFailures);\n  }\n\n  popFailuresInfo() {\n    this.rightmostFailurePosition = this._rightmostFailurePositionStack.pop();\n    this.recordedFailures = this._recordedFailuresStack.pop();\n  }\n}\n\n\n//# sourceURL=webpack://tatar-transliteratrr/./node_modules/ohm-js/src/MatchState.js?");

/***/ }),

/***/ "./node_modules/ohm-js/src/Matcher.js":
/*!********************************************!*\
  !*** ./node_modules/ohm-js/src/Matcher.js ***!
  \********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Matcher: () => (/* binding */ Matcher)\n/* harmony export */ });\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./errors.js */ \"./node_modules/ohm-js/src/errors.js\");\n/* harmony import */ var _MatchState_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./MatchState.js */ \"./node_modules/ohm-js/src/MatchState.js\");\n/* harmony import */ var _pexprs_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./pexprs.js */ \"./node_modules/ohm-js/src/pexprs.js\");\n\n\n\n\nclass Matcher {\n  constructor(grammar) {\n    this.grammar = grammar;\n    this._memoTable = [];\n    this._input = '';\n    this._isMemoTableStale = false;\n  }\n\n  _resetMemoTable() {\n    this._memoTable = [];\n    this._isMemoTableStale = false;\n  }\n\n  getInput() {\n    return this._input;\n  }\n\n  setInput(str) {\n    if (this._input !== str) {\n      this.replaceInputRange(0, this._input.length, str);\n    }\n    return this;\n  }\n\n  replaceInputRange(startIdx, endIdx, str) {\n    const prevInput = this._input;\n    const memoTable = this._memoTable;\n    if (\n      startIdx < 0 ||\n      startIdx > prevInput.length ||\n      endIdx < 0 ||\n      endIdx > prevInput.length ||\n      startIdx > endIdx\n    ) {\n      throw new Error('Invalid indices: ' + startIdx + ' and ' + endIdx);\n    }\n\n    // update input\n    this._input = prevInput.slice(0, startIdx) + str + prevInput.slice(endIdx);\n    if (this._input !== prevInput && memoTable.length > 0) {\n      this._isMemoTableStale = true;\n    }\n\n    // update memo table (similar to the above)\n    const restOfMemoTable = memoTable.slice(endIdx);\n    memoTable.length = startIdx;\n    for (let idx = 0; idx < str.length; idx++) {\n      memoTable.push(undefined);\n    }\n    for (const posInfo of restOfMemoTable) {\n      memoTable.push(posInfo);\n    }\n\n    // Invalidate memoRecs\n    for (let pos = 0; pos < startIdx; pos++) {\n      const posInfo = memoTable[pos];\n      if (posInfo) {\n        posInfo.clearObsoleteEntries(pos, startIdx);\n      }\n    }\n\n    return this;\n  }\n\n  match(optStartApplicationStr, options = {incremental: true}) {\n    return this._match(this._getStartExpr(optStartApplicationStr), {\n      incremental: options.incremental,\n      tracing: false,\n    });\n  }\n\n  trace(optStartApplicationStr, options = {incremental: true}) {\n    return this._match(this._getStartExpr(optStartApplicationStr), {\n      incremental: options.incremental,\n      tracing: true,\n    });\n  }\n\n  _match(startExpr, options = {}) {\n    const opts = {\n      tracing: false,\n      incremental: true,\n      positionToRecordFailures: undefined,\n      ...options,\n    };\n    if (!opts.incremental) {\n      this._resetMemoTable();\n    } else if (this._isMemoTableStale && !this.grammar.supportsIncrementalParsing) {\n      throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_0__.grammarDoesNotSupportIncrementalParsing)(this.grammar);\n    }\n\n    const state = new _MatchState_js__WEBPACK_IMPORTED_MODULE_1__.MatchState(this, startExpr, opts.positionToRecordFailures);\n    return opts.tracing ? state.getTrace() : state.getMatchResult();\n  }\n\n  /*\n    Returns the starting expression for this Matcher's associated grammar. If\n    `optStartApplicationStr` is specified, it is a string expressing a rule application in the\n    grammar. If not specified, the grammar's default start rule will be used.\n  */\n  _getStartExpr(optStartApplicationStr) {\n    const applicationStr = optStartApplicationStr || this.grammar.defaultStartRule;\n    if (!applicationStr) {\n      throw new Error('Missing start rule argument -- the grammar has no default start rule.');\n    }\n\n    const startApp = this.grammar.parseApplication(applicationStr);\n    return new _pexprs_js__WEBPACK_IMPORTED_MODULE_2__.Seq([startApp, _pexprs_js__WEBPACK_IMPORTED_MODULE_2__.end]);\n  }\n}\n\n\n//# sourceURL=webpack://tatar-transliteratrr/./node_modules/ohm-js/src/Matcher.js?");

/***/ }),

/***/ "./node_modules/ohm-js/src/PosInfo.js":
/*!********************************************!*\
  !*** ./node_modules/ohm-js/src/PosInfo.js ***!
  \********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PosInfo: () => (/* binding */ PosInfo)\n/* harmony export */ });\nclass PosInfo {\n  constructor() {\n    this.applicationMemoKeyStack = []; // active applications at this position\n    this.memo = {};\n    this.maxExaminedLength = 0;\n    this.maxRightmostFailureOffset = -1;\n    this.currentLeftRecursion = undefined;\n  }\n\n  isActive(application) {\n    return this.applicationMemoKeyStack.indexOf(application.toMemoKey()) >= 0;\n  }\n\n  enter(application) {\n    this.applicationMemoKeyStack.push(application.toMemoKey());\n  }\n\n  exit() {\n    this.applicationMemoKeyStack.pop();\n  }\n\n  startLeftRecursion(headApplication, memoRec) {\n    memoRec.isLeftRecursion = true;\n    memoRec.headApplication = headApplication;\n    memoRec.nextLeftRecursion = this.currentLeftRecursion;\n    this.currentLeftRecursion = memoRec;\n\n    const {applicationMemoKeyStack} = this;\n    const indexOfFirstInvolvedRule =\n      applicationMemoKeyStack.indexOf(headApplication.toMemoKey()) + 1;\n    const involvedApplicationMemoKeys = applicationMemoKeyStack.slice(\n        indexOfFirstInvolvedRule,\n    );\n\n    memoRec.isInvolved = function(applicationMemoKey) {\n      return involvedApplicationMemoKeys.indexOf(applicationMemoKey) >= 0;\n    };\n\n    memoRec.updateInvolvedApplicationMemoKeys = function() {\n      for (let idx = indexOfFirstInvolvedRule; idx < applicationMemoKeyStack.length; idx++) {\n        const applicationMemoKey = applicationMemoKeyStack[idx];\n        if (!this.isInvolved(applicationMemoKey)) {\n          involvedApplicationMemoKeys.push(applicationMemoKey);\n        }\n      }\n    };\n  }\n\n  endLeftRecursion() {\n    this.currentLeftRecursion = this.currentLeftRecursion.nextLeftRecursion;\n  }\n\n  // Note: this method doesn't get called for the \"head\" of a left recursion -- for LR heads,\n  // the memoized result (which starts out being a failure) is always used.\n  shouldUseMemoizedResult(memoRec) {\n    if (!memoRec.isLeftRecursion) {\n      return true;\n    }\n    const {applicationMemoKeyStack} = this;\n    for (let idx = 0; idx < applicationMemoKeyStack.length; idx++) {\n      const applicationMemoKey = applicationMemoKeyStack[idx];\n      if (memoRec.isInvolved(applicationMemoKey)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  memoize(memoKey, memoRec) {\n    this.memo[memoKey] = memoRec;\n    this.maxExaminedLength = Math.max(this.maxExaminedLength, memoRec.examinedLength);\n    this.maxRightmostFailureOffset = Math.max(\n        this.maxRightmostFailureOffset,\n        memoRec.rightmostFailureOffset,\n    );\n    return memoRec;\n  }\n\n  clearObsoleteEntries(pos, invalidatedIdx) {\n    if (pos + this.maxExaminedLength <= invalidatedIdx) {\n      // Optimization: none of the rule applications that were memoized here examined the\n      // interval of the input that changed, so nothing has to be invalidated.\n      return;\n    }\n\n    const {memo} = this;\n    this.maxExaminedLength = 0;\n    this.maxRightmostFailureOffset = -1;\n    Object.keys(memo).forEach(k => {\n      const memoRec = memo[k];\n      if (pos + memoRec.examinedLength > invalidatedIdx) {\n        delete memo[k];\n      } else {\n        this.maxExaminedLength = Math.max(this.maxExaminedLength, memoRec.examinedLength);\n        this.maxRightmostFailureOffset = Math.max(\n            this.maxRightmostFailureOffset,\n            memoRec.rightmostFailureOffset,\n        );\n      }\n    });\n  }\n}\n\n\n//# sourceURL=webpack://tatar-transliteratrr/./node_modules/ohm-js/src/PosInfo.js?");

/***/ }),

/***/ "./node_modules/ohm-js/src/Semantics.js":
/*!**********************************************!*\
  !*** ./node_modules/ohm-js/src/Semantics.js ***!
  \**********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Semantics: () => (/* binding */ Semantics)\n/* harmony export */ });\n/* harmony import */ var _InputStream_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./InputStream.js */ \"./node_modules/ohm-js/src/InputStream.js\");\n/* harmony import */ var _nodes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./nodes.js */ \"./node_modules/ohm-js/src/nodes.js\");\n/* harmony import */ var _MatchResult_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./MatchResult.js */ \"./node_modules/ohm-js/src/MatchResult.js\");\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./common.js */ \"./node_modules/ohm-js/src/common.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./errors.js */ \"./node_modules/ohm-js/src/errors.js\");\n/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./util.js */ \"./node_modules/ohm-js/src/util.js\");\n\n\n\n\n\n\n\n// --------------------------------------------------------------------\n// Private stuff\n// --------------------------------------------------------------------\n\nconst globalActionStack = [];\n\nconst hasOwnProperty = (x, prop) => Object.prototype.hasOwnProperty.call(x, prop);\n\n// ----------------- Wrappers -----------------\n\n// Wrappers decorate CST nodes with all of the functionality (i.e., operations and attributes)\n// provided by a Semantics (see below). `Wrapper` is the abstract superclass of all wrappers. A\n// `Wrapper` must have `_node` and `_semantics` instance variables, which refer to the CST node and\n// Semantics (resp.) for which it was created, and a `_childWrappers` instance variable which is\n// used to cache the wrapper instances that are created for its child nodes. Setting these instance\n// variables is the responsibility of the constructor of each Semantics-specific subclass of\n// `Wrapper`.\nclass Wrapper {\n  constructor(node, sourceInterval, baseInterval) {\n    this._node = node;\n    this.source = sourceInterval;\n\n    // The interval that the childOffsets of `node` are relative to. It should be the source\n    // of the closest Nonterminal node.\n    this._baseInterval = baseInterval;\n\n    if (node.isNonterminal()) {\n      _common_js__WEBPACK_IMPORTED_MODULE_3__.assert(sourceInterval === baseInterval);\n    }\n    this._childWrappers = [];\n  }\n\n  _forgetMemoizedResultFor(attributeName) {\n    // Remove the memoized attribute from the cstNode and all its children.\n    delete this._node[this._semantics.attributeKeys[attributeName]];\n    this.children.forEach(child => {\n      child._forgetMemoizedResultFor(attributeName);\n    });\n  }\n\n  // Returns the wrapper of the specified child node. Child wrappers are created lazily and\n  // cached in the parent wrapper's `_childWrappers` instance variable.\n  child(idx) {\n    if (!(0 <= idx && idx < this._node.numChildren())) {\n      // TODO: Consider throwing an exception here.\n      return undefined;\n    }\n    let childWrapper = this._childWrappers[idx];\n    if (!childWrapper) {\n      const childNode = this._node.childAt(idx);\n      const offset = this._node.childOffsets[idx];\n\n      const source = this._baseInterval.subInterval(offset, childNode.matchLength);\n      const base = childNode.isNonterminal() ? source : this._baseInterval;\n      childWrapper = this._childWrappers[idx] = this._semantics.wrap(childNode, source, base);\n    }\n    return childWrapper;\n  }\n\n  // Returns an array containing the wrappers of all of the children of the node associated\n  // with this wrapper.\n  _children() {\n    // Force the creation of all child wrappers\n    for (let idx = 0; idx < this._node.numChildren(); idx++) {\n      this.child(idx);\n    }\n    return this._childWrappers;\n  }\n\n  // Returns `true` if the CST node associated with this wrapper corresponds to an iteration\n  // expression, i.e., a Kleene-*, Kleene-+, or an optional. Returns `false` otherwise.\n  isIteration() {\n    return this._node.isIteration();\n  }\n\n  // Returns `true` if the CST node associated with this wrapper is a terminal node, `false`\n  // otherwise.\n  isTerminal() {\n    return this._node.isTerminal();\n  }\n\n  // Returns `true` if the CST node associated with this wrapper is a nonterminal node, `false`\n  // otherwise.\n  isNonterminal() {\n    return this._node.isNonterminal();\n  }\n\n  // Returns `true` if the CST node associated with this wrapper is a nonterminal node\n  // corresponding to a syntactic rule, `false` otherwise.\n  isSyntactic() {\n    return this.isNonterminal() && this._node.isSyntactic();\n  }\n\n  // Returns `true` if the CST node associated with this wrapper is a nonterminal node\n  // corresponding to a lexical rule, `false` otherwise.\n  isLexical() {\n    return this.isNonterminal() && this._node.isLexical();\n  }\n\n  // Returns `true` if the CST node associated with this wrapper is an iterator node\n  // having either one or no child (? operator), `false` otherwise.\n  // Otherwise, throws an exception.\n  isOptional() {\n    return this._node.isOptional();\n  }\n\n  // Create a new _iter wrapper in the same semantics as this wrapper.\n  iteration(optChildWrappers) {\n    const childWrappers = optChildWrappers || [];\n\n    const childNodes = childWrappers.map(c => c._node);\n    const iter = new _nodes_js__WEBPACK_IMPORTED_MODULE_1__.IterationNode(childNodes, [], -1, false);\n\n    const wrapper = this._semantics.wrap(iter, null, null);\n    wrapper._childWrappers = childWrappers;\n    return wrapper;\n  }\n\n  // Returns an array containing the children of this CST node.\n  get children() {\n    return this._children();\n  }\n\n  // Returns the name of grammar rule that created this CST node.\n  get ctorName() {\n    return this._node.ctorName;\n  }\n\n  // Returns the number of children of this CST node.\n  get numChildren() {\n    return this._node.numChildren();\n  }\n\n  // Returns the contents of the input stream consumed by this CST node.\n  get sourceString() {\n    return this.source.contents;\n  }\n}\n\n// ----------------- Semantics -----------------\n\n// A Semantics is a container for a family of Operations and Attributes for a given grammar.\n// Semantics enable modularity (different clients of a grammar can create their set of operations\n// and attributes in isolation) and extensibility even when operations and attributes are mutually-\n// recursive. This constructor should not be called directly except from\n// `Semantics.createSemantics`. The normal ways to create a Semantics, given a grammar 'g', are\n// `g.createSemantics()` and `g.extendSemantics(parentSemantics)`.\nclass Semantics {\n  constructor(grammar, superSemantics) {\n    const self = this;\n    this.grammar = grammar;\n    this.checkedActionDicts = false;\n\n    // Constructor for wrapper instances, which are passed as the arguments to the semantic actions\n    // of an operation or attribute. Operations and attributes require double dispatch: the semantic\n    // action is chosen based on both the node's type and the semantics. Wrappers ensure that\n    // the `execute` method is called with the correct (most specific) semantics object as an\n    // argument.\n    this.Wrapper = class extends (superSemantics ? superSemantics.Wrapper : Wrapper) {\n      constructor(node, sourceInterval, baseInterval) {\n        super(node, sourceInterval, baseInterval);\n        self.checkActionDictsIfHaventAlready();\n        this._semantics = self;\n      }\n\n      toString() {\n        return '[semantics wrapper for ' + self.grammar.name + ']';\n      }\n    };\n\n    this.super = superSemantics;\n    if (superSemantics) {\n      if (!(grammar.equals(this.super.grammar) || grammar._inheritsFrom(this.super.grammar))) {\n        throw new Error(\n            \"Cannot extend a semantics for grammar '\" +\n            this.super.grammar.name +\n            \"' for use with grammar '\" +\n            grammar.name +\n            \"' (not a sub-grammar)\",\n        );\n      }\n      this.operations = Object.create(this.super.operations);\n      this.attributes = Object.create(this.super.attributes);\n      this.attributeKeys = Object.create(null);\n\n      // Assign unique symbols for each of the attributes inherited from the super-semantics so that\n      // they are memoized independently.\n      // eslint-disable-next-line guard-for-in\n      for (const attributeName in this.attributes) {\n        Object.defineProperty(this.attributeKeys, attributeName, {\n          value: _util_js__WEBPACK_IMPORTED_MODULE_5__.uniqueId(attributeName),\n        });\n      }\n    } else {\n      this.operations = Object.create(null);\n      this.attributes = Object.create(null);\n      this.attributeKeys = Object.create(null);\n    }\n  }\n\n  toString() {\n    return '[semantics for ' + this.grammar.name + ']';\n  }\n\n  checkActionDictsIfHaventAlready() {\n    if (!this.checkedActionDicts) {\n      this.checkActionDicts();\n      this.checkedActionDicts = true;\n    }\n  }\n\n  // Checks that the action dictionaries for all operations and attributes in this semantics,\n  // including the ones that were inherited from the super-semantics, agree with the grammar.\n  // Throws an exception if one or more of them doesn't.\n  checkActionDicts() {\n    let name;\n    // eslint-disable-next-line guard-for-in\n    for (name in this.operations) {\n      this.operations[name].checkActionDict(this.grammar);\n    }\n    // eslint-disable-next-line guard-for-in\n    for (name in this.attributes) {\n      this.attributes[name].checkActionDict(this.grammar);\n    }\n  }\n\n  toRecipe(semanticsOnly) {\n    function hasSuperSemantics(s) {\n      return s.super !== Semantics.BuiltInSemantics._getSemantics();\n    }\n\n    let str = '(function(g) {\\n';\n    if (hasSuperSemantics(this)) {\n      str += '  var semantics = ' + this.super.toRecipe(true) + '(g';\n\n      const superSemanticsGrammar = this.super.grammar;\n      let relatedGrammar = this.grammar;\n      while (relatedGrammar !== superSemanticsGrammar) {\n        str += '.superGrammar';\n        relatedGrammar = relatedGrammar.superGrammar;\n      }\n\n      str += ');\\n';\n      str += '  return g.extendSemantics(semantics)';\n    } else {\n      str += '  return g.createSemantics()';\n    }\n    ['Operation', 'Attribute'].forEach(type => {\n      const semanticOperations = this[type.toLowerCase() + 's'];\n      Object.keys(semanticOperations).forEach(name => {\n        const {actionDict, formals, builtInDefault} = semanticOperations[name];\n\n        let signature = name;\n        if (formals.length > 0) {\n          signature += '(' + formals.join(', ') + ')';\n        }\n\n        let method;\n        if (hasSuperSemantics(this) && this.super[type.toLowerCase() + 's'][name]) {\n          method = 'extend' + type;\n        } else {\n          method = 'add' + type;\n        }\n        str += '\\n    .' + method + '(' + JSON.stringify(signature) + ', {';\n\n        const srcArray = [];\n        Object.keys(actionDict).forEach(actionName => {\n          if (actionDict[actionName] !== builtInDefault) {\n            let source = actionDict[actionName].toString().trim();\n\n            // Convert method shorthand to plain old function syntax.\n            // https://github.com/ohmjs/ohm/issues/263\n            source = source.replace(/^.*\\(/, 'function(');\n\n            srcArray.push('\\n      ' + JSON.stringify(actionName) + ': ' + source);\n          }\n        });\n        str += srcArray.join(',') + '\\n    })';\n      });\n    });\n    str += ';\\n  })';\n\n    if (!semanticsOnly) {\n      str =\n        '(function() {\\n' +\n        '  var grammar = this.fromRecipe(' +\n        this.grammar.toRecipe() +\n        ');\\n' +\n        '  var semantics = ' +\n        str +\n        '(grammar);\\n' +\n        '  return semantics;\\n' +\n        '});\\n';\n    }\n\n    return str;\n  }\n\n  addOperationOrAttribute(type, signature, actionDict) {\n    const typePlural = type + 's';\n\n    const parsedNameAndFormalArgs = parseSignature(signature, type);\n    const {name} = parsedNameAndFormalArgs;\n    const {formals} = parsedNameAndFormalArgs;\n\n    // TODO: check that there are no duplicate formal arguments\n\n    this.assertNewName(name, type);\n\n    // Create the action dictionary for this operation / attribute that contains a `_default` action\n    // which defines the default behavior of iteration, terminal, and non-terminal nodes...\n    const builtInDefault = newDefaultAction(type, name, doIt);\n    const realActionDict = {_default: builtInDefault};\n    // ... and add in the actions supplied by the programmer, which may override some or all of the\n    // default ones.\n    Object.keys(actionDict).forEach(name => {\n      realActionDict[name] = actionDict[name];\n    });\n\n    const entry =\n      type === 'operation' ?\n        new Operation(name, formals, realActionDict, builtInDefault) :\n        new Attribute(name, realActionDict, builtInDefault);\n\n    // The following check is not strictly necessary (it will happen later anyway) but it's better\n    // to catch errors early.\n    entry.checkActionDict(this.grammar);\n\n    this[typePlural][name] = entry;\n\n    function doIt(...args) {\n      // Dispatch to most specific version of this operation / attribute -- it may have been\n      // overridden by a sub-semantics.\n      const thisThing = this._semantics[typePlural][name];\n\n      // Check that the caller passed the correct number of arguments.\n      if (arguments.length !== thisThing.formals.length) {\n        throw new Error(\n            'Invalid number of arguments passed to ' +\n            name +\n            ' ' +\n            type +\n            ' (expected ' +\n            thisThing.formals.length +\n            ', got ' +\n            arguments.length +\n            ')',\n        );\n      }\n\n      // Create an \"arguments object\" from the arguments that were passed to this\n      // operation / attribute.\n      const argsObj = Object.create(null);\n      for (const [idx, val] of Object.entries(args)) {\n        const formal = thisThing.formals[idx];\n        argsObj[formal] = val;\n      }\n\n      const oldArgs = this.args;\n      this.args = argsObj;\n      const ans = thisThing.execute(this._semantics, this);\n      this.args = oldArgs;\n      return ans;\n    }\n\n    if (type === 'operation') {\n      this.Wrapper.prototype[name] = doIt;\n      this.Wrapper.prototype[name].toString = function() {\n        return '[' + name + ' operation]';\n      };\n    } else {\n      Object.defineProperty(this.Wrapper.prototype, name, {\n        get: doIt,\n        configurable: true, // So the property can be deleted.\n      });\n      Object.defineProperty(this.attributeKeys, name, {\n        value: _util_js__WEBPACK_IMPORTED_MODULE_5__.uniqueId(name),\n      });\n    }\n  }\n\n  extendOperationOrAttribute(type, name, actionDict) {\n    const typePlural = type + 's';\n\n    // Make sure that `name` really is just a name, i.e., that it doesn't also contain formals.\n    parseSignature(name, 'attribute');\n\n    if (!(this.super && name in this.super[typePlural])) {\n      throw new Error(\n          'Cannot extend ' +\n          type +\n          \" '\" +\n          name +\n          \"': did not inherit an \" +\n          type +\n          ' with that name',\n      );\n    }\n    if (hasOwnProperty(this[typePlural], name)) {\n      throw new Error('Cannot extend ' + type + \" '\" + name + \"' again\");\n    }\n\n    // Create a new operation / attribute whose actionDict delegates to the super operation /\n    // attribute's actionDict, and which has all the keys from `inheritedActionDict`.\n    const inheritedFormals = this[typePlural][name].formals;\n    const inheritedActionDict = this[typePlural][name].actionDict;\n    const newActionDict = Object.create(inheritedActionDict);\n    Object.keys(actionDict).forEach(name => {\n      newActionDict[name] = actionDict[name];\n    });\n\n    this[typePlural][name] =\n      type === 'operation' ?\n        new Operation(name, inheritedFormals, newActionDict) :\n        new Attribute(name, newActionDict);\n\n    // The following check is not strictly necessary (it will happen later anyway) but it's better\n    // to catch errors early.\n    this[typePlural][name].checkActionDict(this.grammar);\n  }\n\n  assertNewName(name, type) {\n    if (hasOwnProperty(Wrapper.prototype, name)) {\n      throw new Error('Cannot add ' + type + \" '\" + name + \"': that's a reserved name\");\n    }\n    if (name in this.operations) {\n      throw new Error(\n          'Cannot add ' + type + \" '\" + name + \"': an operation with that name already exists\",\n      );\n    }\n    if (name in this.attributes) {\n      throw new Error(\n          'Cannot add ' + type + \" '\" + name + \"': an attribute with that name already exists\",\n      );\n    }\n  }\n\n  // Returns a wrapper for the given CST `node` in this semantics.\n  // If `node` is already a wrapper, returns `node` itself.  // TODO: why is this needed?\n  wrap(node, source, optBaseInterval) {\n    const baseInterval = optBaseInterval || source;\n    return node instanceof this.Wrapper ? node : new this.Wrapper(node, source, baseInterval);\n  }\n}\n\nfunction parseSignature(signature, type) {\n  if (!Semantics.prototypeGrammar) {\n    // The Operations and Attributes grammar won't be available while Ohm is loading,\n    // but we can get away the following simplification b/c none of the operations\n    // that are used while loading take arguments.\n    _common_js__WEBPACK_IMPORTED_MODULE_3__.assert(signature.indexOf('(') === -1);\n    return {\n      name: signature,\n      formals: [],\n    };\n  }\n\n  const r = Semantics.prototypeGrammar.match(\n      signature,\n    type === 'operation' ? 'OperationSignature' : 'AttributeSignature',\n  );\n  if (r.failed()) {\n    throw new Error(r.message);\n  }\n\n  return Semantics.prototypeGrammarSemantics(r).parse();\n}\n\nfunction newDefaultAction(type, name, doIt) {\n  return function(...children) {\n    const thisThing = this._semantics.operations[name] || this._semantics.attributes[name];\n    const args = thisThing.formals.map(formal => this.args[formal]);\n\n    if (!this.isIteration() && children.length === 1) {\n      // This CST node corresponds to a non-terminal in the grammar (e.g., AddExpr). The fact that\n      // we got here means that this action dictionary doesn't have an action for this particular\n      // non-terminal or a generic `_nonterminal` action.\n      // As a convenience, if this node only has one child, we just return the result of applying\n      // this operation / attribute to the child node.\n      return doIt.apply(children[0], args);\n    } else {\n      // Otherwise, we throw an exception to let the programmer know that we don't know what\n      // to do with this node.\n      throw _errors_js__WEBPACK_IMPORTED_MODULE_4__.missingSemanticAction(this.ctorName, name, type, globalActionStack);\n    }\n  };\n}\n\n// Creates a new Semantics instance for `grammar`, inheriting operations and attributes from\n// `optSuperSemantics`, if it is specified. Returns a function that acts as a proxy for the new\n// Semantics instance. When that function is invoked with a CST node as an argument, it returns\n// a wrapper for that node which gives access to the operations and attributes provided by this\n// semantics.\nSemantics.createSemantics = function(grammar, optSuperSemantics) {\n  const s = new Semantics(\n      grammar,\n    optSuperSemantics !== undefined ?\n      optSuperSemantics :\n      Semantics.BuiltInSemantics._getSemantics(),\n  );\n\n  // To enable clients to invoke a semantics like a function, return a function that acts as a proxy\n  // for `s`, which is the real `Semantics` instance.\n  const proxy = function ASemantics(matchResult) {\n    if (!(matchResult instanceof _MatchResult_js__WEBPACK_IMPORTED_MODULE_2__.MatchResult)) {\n      throw new TypeError(\n          'Semantics expected a MatchResult, but got ' +\n          _common_js__WEBPACK_IMPORTED_MODULE_3__.unexpectedObjToString(matchResult),\n      );\n    }\n    if (matchResult.failed()) {\n      throw new TypeError('cannot apply Semantics to ' + matchResult.toString());\n    }\n\n    const cst = matchResult._cst;\n    if (cst.grammar !== grammar) {\n      throw new Error(\n          \"Cannot use a MatchResult from grammar '\" +\n          cst.grammar.name +\n          \"' with a semantics for '\" +\n          grammar.name +\n          \"'\",\n      );\n    }\n    const inputStream = new _InputStream_js__WEBPACK_IMPORTED_MODULE_0__.InputStream(matchResult.input);\n    return s.wrap(cst, inputStream.interval(matchResult._cstOffset, matchResult.input.length));\n  };\n\n  // Forward public methods from the proxy to the semantics instance.\n  proxy.addOperation = function(signature, actionDict) {\n    s.addOperationOrAttribute('operation', signature, actionDict);\n    return proxy;\n  };\n  proxy.extendOperation = function(name, actionDict) {\n    s.extendOperationOrAttribute('operation', name, actionDict);\n    return proxy;\n  };\n  proxy.addAttribute = function(name, actionDict) {\n    s.addOperationOrAttribute('attribute', name, actionDict);\n    return proxy;\n  };\n  proxy.extendAttribute = function(name, actionDict) {\n    s.extendOperationOrAttribute('attribute', name, actionDict);\n    return proxy;\n  };\n  proxy._getActionDict = function(operationOrAttributeName) {\n    const action =\n      s.operations[operationOrAttributeName] || s.attributes[operationOrAttributeName];\n    if (!action) {\n      throw new Error(\n          '\"' +\n          operationOrAttributeName +\n          '\" is not a valid operation or attribute ' +\n          'name in this semantics for \"' +\n          grammar.name +\n          '\"',\n      );\n    }\n    return action.actionDict;\n  };\n  proxy._remove = function(operationOrAttributeName) {\n    let semantic;\n    if (operationOrAttributeName in s.operations) {\n      semantic = s.operations[operationOrAttributeName];\n      delete s.operations[operationOrAttributeName];\n    } else if (operationOrAttributeName in s.attributes) {\n      semantic = s.attributes[operationOrAttributeName];\n      delete s.attributes[operationOrAttributeName];\n    }\n    delete s.Wrapper.prototype[operationOrAttributeName];\n    return semantic;\n  };\n  proxy.getOperationNames = function() {\n    return Object.keys(s.operations);\n  };\n  proxy.getAttributeNames = function() {\n    return Object.keys(s.attributes);\n  };\n  proxy.getGrammar = function() {\n    return s.grammar;\n  };\n  proxy.toRecipe = function(semanticsOnly) {\n    return s.toRecipe(semanticsOnly);\n  };\n\n  // Make the proxy's toString() work.\n  proxy.toString = s.toString.bind(s);\n\n  // Returns the semantics for the proxy.\n  proxy._getSemantics = function() {\n    return s;\n  };\n\n  return proxy;\n};\n\n// ----------------- Operation -----------------\n\n// An Operation represents a function to be applied to a concrete syntax tree (CST) -- it's very\n// similar to a Visitor (http://en.wikipedia.org/wiki/Visitor_pattern). An operation is executed by\n// recursively walking the CST, and at each node, invoking the matching semantic action from\n// `actionDict`. See `Operation.prototype.execute` for details of how a CST node's matching semantic\n// action is found.\nclass Operation {\n  constructor(name, formals, actionDict, builtInDefault) {\n    this.name = name;\n    this.formals = formals;\n    this.actionDict = actionDict;\n    this.builtInDefault = builtInDefault;\n  }\n\n  checkActionDict(grammar) {\n    grammar._checkTopDownActionDict(this.typeName, this.name, this.actionDict);\n  }\n\n  // Execute this operation on the CST node associated with `nodeWrapper` in the context of the\n  // given Semantics instance.\n  execute(semantics, nodeWrapper) {\n    try {\n      // Look for a semantic action whose name matches the node's constructor name, which is either\n      // the name of a rule in the grammar, or '_terminal' (for a terminal node), or '_iter' (for an\n      // iteration node).\n      const {ctorName} = nodeWrapper._node;\n      let actionFn = this.actionDict[ctorName];\n      if (actionFn) {\n        globalActionStack.push([this, ctorName]);\n        return actionFn.apply(nodeWrapper, nodeWrapper._children());\n      }\n\n      // The action dictionary does not contain a semantic action for this specific type of node.\n      // If this is a nonterminal node and the programmer has provided a `_nonterminal` semantic\n      // action, we invoke it:\n      if (nodeWrapper.isNonterminal()) {\n        actionFn = this.actionDict._nonterminal;\n        if (actionFn) {\n          globalActionStack.push([this, '_nonterminal', ctorName]);\n          return actionFn.apply(nodeWrapper, nodeWrapper._children());\n        }\n      }\n\n      // Otherwise, we invoke the '_default' semantic action.\n      globalActionStack.push([this, 'default action', ctorName]);\n      return this.actionDict._default.apply(nodeWrapper, nodeWrapper._children());\n    } finally {\n      globalActionStack.pop();\n    }\n  }\n}\n\nOperation.prototype.typeName = 'operation';\n\n// ----------------- Attribute -----------------\n\n// Attributes are Operations whose results are memoized. This means that, for any given semantics,\n// the semantic action for a CST node will be invoked no more than once.\nclass Attribute extends Operation {\n  constructor(name, actionDict, builtInDefault) {\n    super(name, [], actionDict, builtInDefault);\n  }\n\n  execute(semantics, nodeWrapper) {\n    const node = nodeWrapper._node;\n    const key = semantics.attributeKeys[this.name];\n    if (!hasOwnProperty(node, key)) {\n      // The following is a super-send -- isn't JS beautiful? :/\n      node[key] = Operation.prototype.execute.call(this, semantics, nodeWrapper);\n    }\n    return node[key];\n  }\n}\n\nAttribute.prototype.typeName = 'attribute';\n\n\n//# sourceURL=webpack://tatar-transliteratrr/./node_modules/ohm-js/src/Semantics.js?");

/***/ }),

/***/ "./node_modules/ohm-js/src/Trace.js":
/*!******************************************!*\
  !*** ./node_modules/ohm-js/src/Trace.js ***!
  \******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Trace: () => (/* binding */ Trace)\n/* harmony export */ });\n/* harmony import */ var _Interval_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Interval.js */ \"./node_modules/ohm-js/src/Interval.js\");\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./common.js */ \"./node_modules/ohm-js/src/common.js\");\n\n\n\n// --------------------------------------------------------------------\n// Private stuff\n// --------------------------------------------------------------------\n\n// Unicode characters that are used in the `toString` output.\nconst BALLOT_X = '\\u2717';\nconst CHECK_MARK = '\\u2713';\nconst DOT_OPERATOR = '\\u22C5';\nconst RIGHTWARDS_DOUBLE_ARROW = '\\u21D2';\nconst SYMBOL_FOR_HORIZONTAL_TABULATION = '\\u2409';\nconst SYMBOL_FOR_LINE_FEED = '\\u240A';\nconst SYMBOL_FOR_CARRIAGE_RETURN = '\\u240D';\n\nconst Flags = {\n  succeeded: 1 << 0,\n  isRootNode: 1 << 1,\n  isImplicitSpaces: 1 << 2,\n  isMemoized: 1 << 3,\n  isHeadOfLeftRecursion: 1 << 4,\n  terminatesLR: 1 << 5,\n};\n\nfunction spaces(n) {\n  return _common_js__WEBPACK_IMPORTED_MODULE_1__.repeat(' ', n).join('');\n}\n\n// Return a string representation of a portion of `input` at offset `pos`.\n// The result will contain exactly `len` characters.\nfunction getInputExcerpt(input, pos, len) {\n  const excerpt = asEscapedString(input.slice(pos, pos + len));\n\n  // Pad the output if necessary.\n  if (excerpt.length < len) {\n    return excerpt + _common_js__WEBPACK_IMPORTED_MODULE_1__.repeat(' ', len - excerpt.length).join('');\n  }\n  return excerpt;\n}\n\nfunction asEscapedString(obj) {\n  if (typeof obj === 'string') {\n    // Replace non-printable characters with visible symbols.\n    return obj\n        .replace(/ /g, DOT_OPERATOR)\n        .replace(/\\t/g, SYMBOL_FOR_HORIZONTAL_TABULATION)\n        .replace(/\\n/g, SYMBOL_FOR_LINE_FEED)\n        .replace(/\\r/g, SYMBOL_FOR_CARRIAGE_RETURN);\n  }\n  return String(obj);\n}\n\n// ----------------- Trace -----------------\n\nclass Trace {\n  constructor(input, pos1, pos2, expr, succeeded, bindings, optChildren) {\n    this.input = input;\n    this.pos = this.pos1 = pos1;\n    this.pos2 = pos2;\n    this.source = new _Interval_js__WEBPACK_IMPORTED_MODULE_0__.Interval(input, pos1, pos2);\n    this.expr = expr;\n    this.bindings = bindings;\n    this.children = optChildren || [];\n    this.terminatingLREntry = null;\n\n    this._flags = succeeded ? Flags.succeeded : 0;\n  }\n\n  get displayString() {\n    return this.expr.toDisplayString();\n  }\n\n  clone() {\n    return this.cloneWithExpr(this.expr);\n  }\n\n  cloneWithExpr(expr) {\n    const ans = new Trace(\n        this.input,\n        this.pos,\n        this.pos2,\n        expr,\n        this.succeeded,\n        this.bindings,\n        this.children,\n    );\n\n    ans.isHeadOfLeftRecursion = this.isHeadOfLeftRecursion;\n    ans.isImplicitSpaces = this.isImplicitSpaces;\n    ans.isMemoized = this.isMemoized;\n    ans.isRootNode = this.isRootNode;\n    ans.terminatesLR = this.terminatesLR;\n    ans.terminatingLREntry = this.terminatingLREntry;\n    return ans;\n  }\n\n  // Record the trace information for the terminating condition of the LR loop.\n  recordLRTermination(ruleBodyTrace, value) {\n    this.terminatingLREntry = new Trace(\n        this.input,\n        this.pos,\n        this.pos2,\n        this.expr,\n        false,\n        [value],\n        [ruleBodyTrace],\n    );\n    this.terminatingLREntry.terminatesLR = true;\n  }\n\n  // Recursively traverse this trace node and all its descendents, calling a visitor function\n  // for each node that is visited. If `vistorObjOrFn` is an object, then its 'enter' property\n  // is a function to call before visiting the children of a node, and its 'exit' property is\n  // a function to call afterwards. If `visitorObjOrFn` is a function, it represents the 'enter'\n  // function.\n  //\n  // The functions are called with three arguments: the Trace node, its parent Trace, and a number\n  // representing the depth of the node in the tree. (The root node has depth 0.) `optThisArg`, if\n  // specified, is the value to use for `this` when executing the visitor functions.\n  walk(visitorObjOrFn, optThisArg) {\n    let visitor = visitorObjOrFn;\n    if (typeof visitor === 'function') {\n      visitor = {enter: visitor};\n    }\n\n    function _walk(node, parent, depth) {\n      let recurse = true;\n      if (visitor.enter) {\n        if (visitor.enter.call(optThisArg, node, parent, depth) === Trace.prototype.SKIP) {\n          recurse = false;\n        }\n      }\n      if (recurse) {\n        node.children.forEach(child => {\n          _walk(child, node, depth + 1);\n        });\n        if (visitor.exit) {\n          visitor.exit.call(optThisArg, node, parent, depth);\n        }\n      }\n    }\n    if (this.isRootNode) {\n      // Don't visit the root node itself, only its children.\n      this.children.forEach(c => {\n        _walk(c, null, 0);\n      });\n    } else {\n      _walk(this, null, 0);\n    }\n  }\n\n  // Return a string representation of the trace.\n  // Sample:\n  //     12⋅+⋅2⋅*⋅3 ✓ exp ⇒  \"12\"\n  //     12⋅+⋅2⋅*⋅3   ✓ addExp (LR) ⇒  \"12\"\n  //     12⋅+⋅2⋅*⋅3       ✗ addExp_plus\n  toString() {\n    const sb = new _common_js__WEBPACK_IMPORTED_MODULE_1__.StringBuffer();\n    this.walk((node, parent, depth) => {\n      if (!node) {\n        return this.SKIP;\n      }\n      const ctorName = node.expr.constructor.name;\n      // Don't print anything for Alt nodes.\n      if (ctorName === 'Alt') {\n        return; // eslint-disable-line consistent-return\n      }\n      sb.append(getInputExcerpt(node.input, node.pos, 10) + spaces(depth * 2 + 1));\n      sb.append((node.succeeded ? CHECK_MARK : BALLOT_X) + ' ' + node.displayString);\n      if (node.isHeadOfLeftRecursion) {\n        sb.append(' (LR)');\n      }\n      if (node.succeeded) {\n        const contents = asEscapedString(node.source.contents);\n        sb.append(' ' + RIGHTWARDS_DOUBLE_ARROW + '  ');\n        sb.append(typeof contents === 'string' ? '\"' + contents + '\"' : contents);\n      }\n      sb.append('\\n');\n    });\n    return sb.contents();\n  }\n}\n\n// A value that can be returned from visitor functions to indicate that a\n// node should not be recursed into.\nTrace.prototype.SKIP = {};\n\n// For convenience, create a getter and setter for the boolean flags in `Flags`.\nObject.keys(Flags).forEach(name => {\n  const mask = Flags[name];\n  Object.defineProperty(Trace.prototype, name, {\n    get() {\n      return (this._flags & mask) !== 0;\n    },\n    set(val) {\n      if (val) {\n        this._flags |= mask;\n      } else {\n        this._flags &= ~mask;\n      }\n    },\n  });\n});\n\n\n//# sourceURL=webpack://tatar-transliteratrr/./node_modules/ohm-js/src/Trace.js?");

/***/ }),

/***/ "./node_modules/ohm-js/src/UnicodeCategories.js":
/*!******************************************************!*\
  !*** ./node_modules/ohm-js/src/UnicodeCategories.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   UnicodeCategories: () => (/* binding */ UnicodeCategories)\n/* harmony export */ });\n// These are just categories that are used in ES5/ES2015.\n// The full list of Unicode categories is here: http://www.fileformat.info/info/unicode/category/index.htm.\nconst UnicodeCategories = {\n  // Letters\n  Lu: /\\p{Lu}/u,\n  Ll: /\\p{Ll}/u,\n  Lt: /\\p{Lt}/u,\n  Lm: /\\p{Lm}/u,\n  Lo: /\\p{Lo}/u,\n\n  // Numbers\n  Nl: /\\p{Nl}/u,\n  Nd: /\\p{Nd}/u,\n\n  // Marks\n  Mn: /\\p{Mn}/u,\n  Mc: /\\p{Mc}/u,\n\n  // Punctuation, Connector\n  Pc: /\\p{Pc}/u,\n\n  // Separator, Space\n  Zs: /\\p{Zs}/u,\n\n  // These two are not real Unicode categories, but our useful for Ohm.\n  // L is a combination of all the letter categories.\n  // Ltmo is a combination of Lt, Lm, and Lo.\n  L: /\\p{Letter}/u,\n  Ltmo: /\\p{Lt}|\\p{Lm}|\\p{Lo}/u,\n};\n\n\n//# sourceURL=webpack://tatar-transliteratrr/./node_modules/ohm-js/src/UnicodeCategories.js?");

/***/ }),

/***/ "./node_modules/ohm-js/src/buildGrammar.js":
/*!*************************************************!*\
  !*** ./node_modules/ohm-js/src/buildGrammar.js ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   buildGrammar: () => (/* binding */ buildGrammar)\n/* harmony export */ });\n/* harmony import */ var _dist_ohm_grammar_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../dist/ohm-grammar.js */ \"./node_modules/ohm-js/dist/ohm-grammar.js\");\n/* harmony import */ var _Builder_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Builder.js */ \"./node_modules/ohm-js/src/Builder.js\");\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./common.js */ \"./node_modules/ohm-js/src/common.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./errors.js */ \"./node_modules/ohm-js/src/errors.js\");\n/* harmony import */ var _Grammar_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Grammar.js */ \"./node_modules/ohm-js/src/Grammar.js\");\n/* harmony import */ var _pexprs_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./pexprs.js */ \"./node_modules/ohm-js/src/pexprs.js\");\n\n\n\n\n\n\n\nconst superSplicePlaceholder = Object.create(_pexprs_js__WEBPACK_IMPORTED_MODULE_5__.PExpr.prototype);\n\nfunction namespaceHas(ns, name) {\n  // Look for an enumerable property, anywhere in the prototype chain.\n  for (const prop in ns) {\n    if (prop === name) return true;\n  }\n  return false;\n}\n\n// Returns a Grammar instance (i.e., an object with a `match` method) for\n// `tree`, which is the concrete syntax tree of a user-written grammar.\n// The grammar will be assigned into `namespace` under the name of the grammar\n// as specified in the source.\nfunction buildGrammar(match, namespace, optOhmGrammarForTesting) {\n  const builder = new _Builder_js__WEBPACK_IMPORTED_MODULE_1__.Builder();\n  let decl;\n  let currentRuleName;\n  let currentRuleFormals;\n  let overriding = false;\n  const metaGrammar = optOhmGrammarForTesting || _dist_ohm_grammar_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"];\n\n  // A visitor that produces a Grammar instance from the CST.\n  const helpers = metaGrammar.createSemantics().addOperation('visit', {\n    Grammars(grammarIter) {\n      return grammarIter.children.map(c => c.visit());\n    },\n    Grammar(id, s, _open, rules, _close) {\n      const grammarName = id.visit();\n      decl = builder.newGrammar(grammarName);\n      s.child(0) && s.child(0).visit();\n      rules.children.map(c => c.visit());\n      const g = decl.build();\n      g.source = this.source.trimmed();\n      if (namespaceHas(namespace, grammarName)) {\n        throw _errors_js__WEBPACK_IMPORTED_MODULE_3__.duplicateGrammarDeclaration(g, namespace);\n      }\n      namespace[grammarName] = g;\n      return g;\n    },\n\n    SuperGrammar(_, n) {\n      const superGrammarName = n.visit();\n      if (superGrammarName === 'null') {\n        decl.withSuperGrammar(null);\n      } else {\n        if (!namespace || !namespaceHas(namespace, superGrammarName)) {\n          throw _errors_js__WEBPACK_IMPORTED_MODULE_3__.undeclaredGrammar(superGrammarName, namespace, n.source);\n        }\n        decl.withSuperGrammar(namespace[superGrammarName]);\n      }\n    },\n\n    Rule_define(n, fs, d, _, b) {\n      currentRuleName = n.visit();\n      currentRuleFormals = fs.children.map(c => c.visit())[0] || [];\n      // If there is no default start rule yet, set it now. This must be done before visiting\n      // the body, because it might contain an inline rule definition.\n      if (!decl.defaultStartRule && decl.ensureSuperGrammar() !== _Grammar_js__WEBPACK_IMPORTED_MODULE_4__.Grammar.ProtoBuiltInRules) {\n        decl.withDefaultStartRule(currentRuleName);\n      }\n      const body = b.visit();\n      const description = d.children.map(c => c.visit())[0];\n      const source = this.source.trimmed();\n      return decl.define(currentRuleName, currentRuleFormals, body, description, source);\n    },\n    Rule_override(n, fs, _, b) {\n      currentRuleName = n.visit();\n      currentRuleFormals = fs.children.map(c => c.visit())[0] || [];\n\n      const source = this.source.trimmed();\n      decl.ensureSuperGrammarRuleForOverriding(currentRuleName, source);\n\n      overriding = true;\n      const body = b.visit();\n      overriding = false;\n      return decl.override(currentRuleName, currentRuleFormals, body, null, source);\n    },\n    Rule_extend(n, fs, _, b) {\n      currentRuleName = n.visit();\n      currentRuleFormals = fs.children.map(c => c.visit())[0] || [];\n      const body = b.visit();\n      const source = this.source.trimmed();\n      return decl.extend(currentRuleName, currentRuleFormals, body, null, source);\n    },\n    RuleBody(_, terms) {\n      return builder.alt(...terms.visit()).withSource(this.source);\n    },\n    OverrideRuleBody(_, terms) {\n      const args = terms.visit();\n\n      // Check if the super-splice operator (`...`) appears in the terms.\n      const expansionPos = args.indexOf(superSplicePlaceholder);\n      if (expansionPos >= 0) {\n        const beforeTerms = args.slice(0, expansionPos);\n        const afterTerms = args.slice(expansionPos + 1);\n\n        // Ensure it appears no more than once.\n        afterTerms.forEach(t => {\n          if (t === superSplicePlaceholder) throw _errors_js__WEBPACK_IMPORTED_MODULE_3__.multipleSuperSplices(t);\n        });\n\n        return new _pexprs_js__WEBPACK_IMPORTED_MODULE_5__.Splice(\n            decl.superGrammar,\n            currentRuleName,\n            beforeTerms,\n            afterTerms,\n        ).withSource(this.source);\n      } else {\n        return builder.alt(...args).withSource(this.source);\n      }\n    },\n    Formals(opointy, fs, cpointy) {\n      return fs.visit();\n    },\n\n    Params(opointy, ps, cpointy) {\n      return ps.visit();\n    },\n\n    Alt(seqs) {\n      return builder.alt(...seqs.visit()).withSource(this.source);\n    },\n\n    TopLevelTerm_inline(b, n) {\n      const inlineRuleName = currentRuleName + '_' + n.visit();\n      const body = b.visit();\n      const source = this.source.trimmed();\n      const isNewRuleDeclaration = !(\n        decl.superGrammar && decl.superGrammar.rules[inlineRuleName]\n      );\n      if (overriding && !isNewRuleDeclaration) {\n        decl.override(inlineRuleName, currentRuleFormals, body, null, source);\n      } else {\n        decl.define(inlineRuleName, currentRuleFormals, body, null, source);\n      }\n      const params = currentRuleFormals.map(formal => builder.app(formal));\n      return builder.app(inlineRuleName, params).withSource(body.source);\n    },\n    OverrideTopLevelTerm_superSplice(_) {\n      return superSplicePlaceholder;\n    },\n\n    Seq(expr) {\n      return builder.seq(...expr.children.map(c => c.visit())).withSource(this.source);\n    },\n\n    Iter_star(x, _) {\n      return builder.star(x.visit()).withSource(this.source);\n    },\n    Iter_plus(x, _) {\n      return builder.plus(x.visit()).withSource(this.source);\n    },\n    Iter_opt(x, _) {\n      return builder.opt(x.visit()).withSource(this.source);\n    },\n\n    Pred_not(_, x) {\n      return builder.not(x.visit()).withSource(this.source);\n    },\n    Pred_lookahead(_, x) {\n      return builder.lookahead(x.visit()).withSource(this.source);\n    },\n\n    Lex_lex(_, x) {\n      return builder.lex(x.visit()).withSource(this.source);\n    },\n\n    Base_application(rule, ps) {\n      const params = ps.children.map(c => c.visit())[0] || [];\n      return builder.app(rule.visit(), params).withSource(this.source);\n    },\n    Base_range(from, _, to) {\n      return builder.range(from.visit(), to.visit()).withSource(this.source);\n    },\n    Base_terminal(expr) {\n      return builder.terminal(expr.visit()).withSource(this.source);\n    },\n    Base_paren(open, x, close) {\n      return x.visit();\n    },\n\n    ruleDescr(open, t, close) {\n      return t.visit();\n    },\n    ruleDescrText(_) {\n      return this.sourceString.trim();\n    },\n\n    caseName(_, space1, n, space2, end) {\n      return n.visit();\n    },\n\n    name(first, rest) {\n      return this.sourceString;\n    },\n    nameFirst(expr) {},\n    nameRest(expr) {},\n\n    terminal(open, cs, close) {\n      return cs.children.map(c => c.visit()).join('');\n    },\n\n    oneCharTerminal(open, c, close) {\n      return c.visit();\n    },\n\n    escapeChar(c) {\n      try {\n        return _common_js__WEBPACK_IMPORTED_MODULE_2__.unescapeCodePoint(this.sourceString);\n      } catch (err) {\n        if (err instanceof RangeError && err.message.startsWith('Invalid code point ')) {\n          throw _errors_js__WEBPACK_IMPORTED_MODULE_3__.invalidCodePoint(c);\n        }\n        throw err; // Rethrow\n      }\n    },\n\n    NonemptyListOf(x, _, xs) {\n      return [x.visit()].concat(xs.children.map(c => c.visit()));\n    },\n    EmptyListOf() {\n      return [];\n    },\n\n    _terminal() {\n      return this.sourceString;\n    },\n  });\n  return helpers(match).visit();\n}\n\n\n//# sourceURL=webpack://tatar-transliteratrr/./node_modules/ohm-js/src/buildGrammar.js?");

/***/ }),

/***/ "./node_modules/ohm-js/src/common.js":
/*!*******************************************!*\
  !*** ./node_modules/ohm-js/src/common.js ***!
  \*******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   StringBuffer: () => (/* binding */ StringBuffer),\n/* harmony export */   abstract: () => (/* binding */ abstract),\n/* harmony export */   assert: () => (/* binding */ assert),\n/* harmony export */   clone: () => (/* binding */ clone),\n/* harmony export */   copyWithoutDuplicates: () => (/* binding */ copyWithoutDuplicates),\n/* harmony export */   defineLazyProperty: () => (/* binding */ defineLazyProperty),\n/* harmony export */   getDuplicates: () => (/* binding */ getDuplicates),\n/* harmony export */   isLexical: () => (/* binding */ isLexical),\n/* harmony export */   isSyntactic: () => (/* binding */ isSyntactic),\n/* harmony export */   padLeft: () => (/* binding */ padLeft),\n/* harmony export */   repeat: () => (/* binding */ repeat),\n/* harmony export */   repeatFn: () => (/* binding */ repeatFn),\n/* harmony export */   repeatStr: () => (/* binding */ repeatStr),\n/* harmony export */   unescapeCodePoint: () => (/* binding */ unescapeCodePoint),\n/* harmony export */   unexpectedObjToString: () => (/* binding */ unexpectedObjToString)\n/* harmony export */ });\n// --------------------------------------------------------------------\n// Private Stuff\n// --------------------------------------------------------------------\n\n// Helpers\n\nconst escapeStringFor = {};\nfor (let c = 0; c < 128; c++) {\n  escapeStringFor[c] = String.fromCharCode(c);\n}\nescapeStringFor[\"'\".charCodeAt(0)] = \"\\\\'\";\nescapeStringFor['\"'.charCodeAt(0)] = '\\\\\"';\nescapeStringFor['\\\\'.charCodeAt(0)] = '\\\\\\\\';\nescapeStringFor['\\b'.charCodeAt(0)] = '\\\\b';\nescapeStringFor['\\f'.charCodeAt(0)] = '\\\\f';\nescapeStringFor['\\n'.charCodeAt(0)] = '\\\\n';\nescapeStringFor['\\r'.charCodeAt(0)] = '\\\\r';\nescapeStringFor['\\t'.charCodeAt(0)] = '\\\\t';\nescapeStringFor['\\u000b'.charCodeAt(0)] = '\\\\v';\n\n// --------------------------------------------------------------------\n// Exports\n// --------------------------------------------------------------------\n\nfunction abstract(optMethodName) {\n  const methodName = optMethodName || '';\n  return function() {\n    throw new Error(\n        'this method ' +\n        methodName +\n        ' is abstract! ' +\n        '(it has no implementation in class ' +\n        this.constructor.name +\n        ')',\n    );\n  };\n}\n\nfunction assert(cond, message) {\n  if (!cond) {\n    throw new Error(message || 'Assertion failed');\n  }\n}\n\n// Define a lazily-computed, non-enumerable property named `propName`\n// on the object `obj`. `getterFn` will be called to compute the value the\n// first time the property is accessed.\nfunction defineLazyProperty(obj, propName, getterFn) {\n  let memo;\n  Object.defineProperty(obj, propName, {\n    get() {\n      if (!memo) {\n        memo = getterFn.call(this);\n      }\n      return memo;\n    },\n  });\n}\n\nfunction clone(obj) {\n  if (obj) {\n    return Object.assign({}, obj);\n  }\n  return obj;\n}\n\nfunction repeatFn(fn, n) {\n  const arr = [];\n  while (n-- > 0) {\n    arr.push(fn());\n  }\n  return arr;\n}\n\nfunction repeatStr(str, n) {\n  return new Array(n + 1).join(str);\n}\n\nfunction repeat(x, n) {\n  return repeatFn(() => x, n);\n}\n\nfunction getDuplicates(array) {\n  const duplicates = [];\n  for (let idx = 0; idx < array.length; idx++) {\n    const x = array[idx];\n    if (array.lastIndexOf(x) !== idx && duplicates.indexOf(x) < 0) {\n      duplicates.push(x);\n    }\n  }\n  return duplicates;\n}\n\nfunction copyWithoutDuplicates(array) {\n  const noDuplicates = [];\n  array.forEach(entry => {\n    if (noDuplicates.indexOf(entry) < 0) {\n      noDuplicates.push(entry);\n    }\n  });\n  return noDuplicates;\n}\n\nfunction isSyntactic(ruleName) {\n  const firstChar = ruleName[0];\n  return firstChar === firstChar.toUpperCase();\n}\n\nfunction isLexical(ruleName) {\n  return !isSyntactic(ruleName);\n}\n\nfunction padLeft(str, len, optChar) {\n  const ch = optChar || ' ';\n  if (str.length < len) {\n    return repeatStr(ch, len - str.length) + str;\n  }\n  return str;\n}\n\n// StringBuffer\n\nfunction StringBuffer() {\n  this.strings = [];\n}\n\nStringBuffer.prototype.append = function(str) {\n  this.strings.push(str);\n};\n\nStringBuffer.prototype.contents = function() {\n  return this.strings.join('');\n};\n\nconst escapeUnicode = str => String.fromCodePoint(parseInt(str, 16));\n\nfunction unescapeCodePoint(s) {\n  if (s.charAt(0) === '\\\\') {\n    switch (s.charAt(1)) {\n      case 'b':\n        return '\\b';\n      case 'f':\n        return '\\f';\n      case 'n':\n        return '\\n';\n      case 'r':\n        return '\\r';\n      case 't':\n        return '\\t';\n      case 'v':\n        return '\\v';\n      case 'x':\n        return escapeUnicode(s.slice(2, 4));\n      case 'u':\n        return s.charAt(2) === '{' ?\n          escapeUnicode(s.slice(3, -1)) :\n          escapeUnicode(s.slice(2, 6));\n      default:\n        return s.charAt(1);\n    }\n  } else {\n    return s;\n  }\n}\n\n// Helper for producing a description of an unknown object in a safe way.\n// Especially useful for error messages where an unexpected type of object was encountered.\nfunction unexpectedObjToString(obj) {\n  if (obj == null) {\n    return String(obj);\n  }\n  const baseToString = Object.prototype.toString.call(obj);\n  try {\n    let typeName;\n    if (obj.constructor && obj.constructor.name) {\n      typeName = obj.constructor.name;\n    } else if (baseToString.indexOf('[object ') === 0) {\n      typeName = baseToString.slice(8, -1); // Extract e.g. \"Array\" from \"[object Array]\".\n    } else {\n      typeName = typeof obj;\n    }\n    return typeName + ': ' + JSON.stringify(String(obj));\n  } catch (e) {\n    return baseToString;\n  }\n}\n\n\n//# sourceURL=webpack://tatar-transliteratrr/./node_modules/ohm-js/src/common.js?");

/***/ }),

/***/ "./node_modules/ohm-js/src/errors.js":
/*!*******************************************!*\
  !*** ./node_modules/ohm-js/src/errors.js ***!
  \*******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   applicationOfSyntacticRuleFromLexicalContext: () => (/* binding */ applicationOfSyntacticRuleFromLexicalContext),\n/* harmony export */   applySyntacticWithLexicalRuleApplication: () => (/* binding */ applySyntacticWithLexicalRuleApplication),\n/* harmony export */   cannotExtendUndeclaredRule: () => (/* binding */ cannotExtendUndeclaredRule),\n/* harmony export */   cannotOverrideUndeclaredRule: () => (/* binding */ cannotOverrideUndeclaredRule),\n/* harmony export */   createError: () => (/* binding */ createError),\n/* harmony export */   duplicateGrammarDeclaration: () => (/* binding */ duplicateGrammarDeclaration),\n/* harmony export */   duplicateParameterNames: () => (/* binding */ duplicateParameterNames),\n/* harmony export */   duplicatePropertyNames: () => (/* binding */ duplicatePropertyNames),\n/* harmony export */   duplicateRuleDeclaration: () => (/* binding */ duplicateRuleDeclaration),\n/* harmony export */   grammarDoesNotSupportIncrementalParsing: () => (/* binding */ grammarDoesNotSupportIncrementalParsing),\n/* harmony export */   grammarSyntaxError: () => (/* binding */ grammarSyntaxError),\n/* harmony export */   inconsistentArity: () => (/* binding */ inconsistentArity),\n/* harmony export */   incorrectArgumentType: () => (/* binding */ incorrectArgumentType),\n/* harmony export */   intervalSourcesDontMatch: () => (/* binding */ intervalSourcesDontMatch),\n/* harmony export */   invalidCodePoint: () => (/* binding */ invalidCodePoint),\n/* harmony export */   invalidConstructorCall: () => (/* binding */ invalidConstructorCall),\n/* harmony export */   invalidParameter: () => (/* binding */ invalidParameter),\n/* harmony export */   kleeneExprHasNullableOperand: () => (/* binding */ kleeneExprHasNullableOperand),\n/* harmony export */   missingSemanticAction: () => (/* binding */ missingSemanticAction),\n/* harmony export */   multipleErrors: () => (/* binding */ multipleErrors),\n/* harmony export */   multipleSuperSplices: () => (/* binding */ multipleSuperSplices),\n/* harmony export */   throwErrors: () => (/* binding */ throwErrors),\n/* harmony export */   undeclaredGrammar: () => (/* binding */ undeclaredGrammar),\n/* harmony export */   undeclaredRule: () => (/* binding */ undeclaredRule),\n/* harmony export */   unnecessaryExperimentalApplySyntactic: () => (/* binding */ unnecessaryExperimentalApplySyntactic),\n/* harmony export */   wrongNumberOfArguments: () => (/* binding */ wrongNumberOfArguments),\n/* harmony export */   wrongNumberOfParameters: () => (/* binding */ wrongNumberOfParameters)\n/* harmony export */ });\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common.js */ \"./node_modules/ohm-js/src/common.js\");\n/* harmony import */ var _pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./pexprs-main.js */ \"./node_modules/ohm-js/src/pexprs-main.js\");\n\n\n\n// --------------------------------------------------------------------\n// Private stuff\n// --------------------------------------------------------------------\n\nfunction createError(message, optInterval) {\n  let e;\n  if (optInterval) {\n    e = new Error(optInterval.getLineAndColumnMessage() + message);\n    e.shortMessage = message;\n    e.interval = optInterval;\n  } else {\n    e = new Error(message);\n  }\n  return e;\n}\n\n// ----------------- errors about intervals -----------------\n\nfunction intervalSourcesDontMatch() {\n  return createError(\"Interval sources don't match\");\n}\n\n// ----------------- errors about grammars -----------------\n\n// Grammar syntax error\n\nfunction grammarSyntaxError(matchFailure) {\n  const e = new Error();\n  Object.defineProperty(e, 'message', {\n    enumerable: true,\n    get() {\n      return matchFailure.message;\n    },\n  });\n  Object.defineProperty(e, 'shortMessage', {\n    enumerable: true,\n    get() {\n      return 'Expected ' + matchFailure.getExpectedText();\n    },\n  });\n  e.interval = matchFailure.getInterval();\n  return e;\n}\n\n// Undeclared grammar\n\nfunction undeclaredGrammar(grammarName, namespace, interval) {\n  const message = namespace ?\n    `Grammar ${grammarName} is not declared in namespace '${namespace}'` :\n    'Undeclared grammar ' + grammarName;\n  return createError(message, interval);\n}\n\n// Duplicate grammar declaration\n\nfunction duplicateGrammarDeclaration(grammar, namespace) {\n  return createError('Grammar ' + grammar.name + ' is already declared in this namespace');\n}\n\nfunction grammarDoesNotSupportIncrementalParsing(grammar) {\n  return createError(`Grammar '${grammar.name}' does not support incremental parsing`);\n}\n\n// ----------------- rules -----------------\n\n// Undeclared rule\n\nfunction undeclaredRule(ruleName, grammarName, optInterval) {\n  return createError(\n      'Rule ' + ruleName + ' is not declared in grammar ' + grammarName,\n      optInterval,\n  );\n}\n\n// Cannot override undeclared rule\n\nfunction cannotOverrideUndeclaredRule(ruleName, grammarName, optSource) {\n  return createError(\n      'Cannot override rule ' + ruleName + ' because it is not declared in ' + grammarName,\n      optSource,\n  );\n}\n\n// Cannot extend undeclared rule\n\nfunction cannotExtendUndeclaredRule(ruleName, grammarName, optSource) {\n  return createError(\n      'Cannot extend rule ' + ruleName + ' because it is not declared in ' + grammarName,\n      optSource,\n  );\n}\n\n// Duplicate rule declaration\n\nfunction duplicateRuleDeclaration(ruleName, grammarName, declGrammarName, optSource) {\n  let message =\n    \"Duplicate declaration for rule '\" + ruleName + \"' in grammar '\" + grammarName + \"'\";\n  if (grammarName !== declGrammarName) {\n    message += \" (originally declared in '\" + declGrammarName + \"')\";\n  }\n  return createError(message, optSource);\n}\n\n// Wrong number of parameters\n\nfunction wrongNumberOfParameters(ruleName, expected, actual, source) {\n  return createError(\n      'Wrong number of parameters for rule ' +\n      ruleName +\n      ' (expected ' +\n      expected +\n      ', got ' +\n      actual +\n      ')',\n      source,\n  );\n}\n\n// Wrong number of arguments\n\nfunction wrongNumberOfArguments(ruleName, expected, actual, expr) {\n  return createError(\n      'Wrong number of arguments for rule ' +\n      ruleName +\n      ' (expected ' +\n      expected +\n      ', got ' +\n      actual +\n      ')',\n      expr,\n  );\n}\n\n// Duplicate parameter names\n\nfunction duplicateParameterNames(ruleName, duplicates, source) {\n  return createError(\n      'Duplicate parameter names in rule ' + ruleName + ': ' + duplicates.join(', '),\n      source,\n  );\n}\n\n// Invalid parameter expression\n\nfunction invalidParameter(ruleName, expr) {\n  return createError(\n      'Invalid parameter to rule ' +\n      ruleName +\n      ': ' +\n      expr +\n      ' has arity ' +\n      expr.getArity() +\n      ', but parameter expressions must have arity 1',\n      expr.source,\n  );\n}\n\n// Application of syntactic rule from lexical rule\n\nconst syntacticVsLexicalNote =\n  'NOTE: A _syntactic rule_ is a rule whose name begins with a capital letter. ' +\n  'See https://ohmjs.org/d/svl for more details.';\n\nfunction applicationOfSyntacticRuleFromLexicalContext(ruleName, applyExpr) {\n  return createError(\n      'Cannot apply syntactic rule ' + ruleName + ' from here (inside a lexical context)',\n      applyExpr.source,\n  );\n}\n\n// Lexical rule application used with applySyntactic\n\nfunction applySyntacticWithLexicalRuleApplication(applyExpr) {\n  const {ruleName} = applyExpr;\n  return createError(\n      `applySyntactic is for syntactic rules, but '${ruleName}' is a lexical rule. ` +\n      syntacticVsLexicalNote,\n      applyExpr.source,\n  );\n}\n\n// Application of applySyntactic in a syntactic context\n\nfunction unnecessaryExperimentalApplySyntactic(applyExpr) {\n  return createError(\n      'applySyntactic is not required here (in a syntactic context)',\n      applyExpr.source,\n  );\n}\n\n// Incorrect argument type\n\nfunction incorrectArgumentType(expectedType, expr) {\n  return createError('Incorrect argument type: expected ' + expectedType, expr.source);\n}\n\n// Multiple instances of the super-splice operator (`...`) in the rule body.\n\nfunction multipleSuperSplices(expr) {\n  return createError(\"'...' can appear at most once in a rule body\", expr.source);\n}\n\n// Unicode code point escapes\n\nfunction invalidCodePoint(applyWrapper) {\n  const node = applyWrapper._node;\n  (0,_common_js__WEBPACK_IMPORTED_MODULE_0__.assert)(node && node.isNonterminal() && node.ctorName === 'escapeChar_unicodeCodePoint');\n\n  // Get an interval that covers all of the hex digits.\n  const digitIntervals = applyWrapper.children.slice(1, -1).map(d => d.source);\n  const fullInterval = digitIntervals[0].coverageWith(...digitIntervals.slice(1));\n  return createError(\n      `U+${fullInterval.contents} is not a valid Unicode code point`,\n      fullInterval,\n  );\n}\n\n// ----------------- Kleene operators -----------------\n\nfunction kleeneExprHasNullableOperand(kleeneExpr, applicationStack) {\n  const actuals =\n    applicationStack.length > 0 ? applicationStack[applicationStack.length - 1].args : [];\n  const expr = kleeneExpr.expr.substituteParams(actuals);\n  let message =\n    'Nullable expression ' +\n    expr +\n    \" is not allowed inside '\" +\n    kleeneExpr.operator +\n    \"' (possible infinite loop)\";\n  if (applicationStack.length > 0) {\n    const stackTrace = applicationStack\n        .map(app => new _pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.Apply(app.ruleName, app.args))\n        .join('\\n');\n    message += '\\nApplication stack (most recent application last):\\n' + stackTrace;\n  }\n  return createError(message, kleeneExpr.expr.source);\n}\n\n// ----------------- arity -----------------\n\nfunction inconsistentArity(ruleName, expected, actual, expr) {\n  return createError(\n      'Rule ' +\n      ruleName +\n      ' involves an alternation which has inconsistent arity ' +\n      '(expected ' +\n      expected +\n      ', got ' +\n      actual +\n      ')',\n      expr.source,\n  );\n}\n\n// ----------------- properties -----------------\n\nfunction duplicatePropertyNames(duplicates) {\n  return createError('Object pattern has duplicate property names: ' + duplicates.join(', '));\n}\n\n// ----------------- constructors -----------------\n\nfunction invalidConstructorCall(grammar, ctorName, children) {\n  return createError(\n      'Attempt to invoke constructor ' + ctorName + ' with invalid or unexpected arguments',\n  );\n}\n\n// ----------------- convenience -----------------\n\nfunction multipleErrors(errors) {\n  const messages = errors.map(e => e.message);\n  return createError(['Errors:'].concat(messages).join('\\n- '), errors[0].interval);\n}\n\n// ----------------- semantic -----------------\n\nfunction missingSemanticAction(ctorName, name, type, stack) {\n  let stackTrace = stack\n      .slice(0, -1)\n      .map(info => {\n        const ans = '  ' + info[0].name + ' > ' + info[1];\n        return info.length === 3 ? ans + \" for '\" + info[2] + \"'\" : ans;\n      })\n      .join('\\n');\n  stackTrace += '\\n  ' + name + ' > ' + ctorName;\n\n  let moreInfo = '';\n  if (ctorName === '_iter') {\n    moreInfo = [\n      '\\nNOTE: as of Ohm v16, there is no default action for iteration nodes — see ',\n      '  https://ohmjs.org/d/dsa for details.',\n    ].join('\\n');\n  }\n\n  const message = [\n    `Missing semantic action for '${ctorName}' in ${type} '${name}'.${moreInfo}`,\n    'Action stack (most recent call last):',\n    stackTrace,\n  ].join('\\n');\n\n  const e = createError(message);\n  e.name = 'missingSemanticAction';\n  return e;\n}\n\nfunction throwErrors(errors) {\n  if (errors.length === 1) {\n    throw errors[0];\n  }\n  if (errors.length > 1) {\n    throw multipleErrors(errors);\n  }\n}\n\n\n//# sourceURL=webpack://tatar-transliteratrr/./node_modules/ohm-js/src/errors.js?");

/***/ }),

/***/ "./node_modules/ohm-js/src/findIndentation.js":
/*!****************************************************!*\
  !*** ./node_modules/ohm-js/src/findIndentation.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   findIndentation: () => (/* binding */ findIndentation)\n/* harmony export */ });\nfunction findIndentation(input) {\n  let pos = 0;\n  const stack = [0];\n  const topOfStack = () => stack[stack.length - 1];\n\n  const result = {};\n\n  const regex = /( *).*(?:$|\\r?\\n|\\r)/g;\n  let match;\n  while ((match = regex.exec(input)) != null) {\n    const [line, indent] = match;\n\n    // The last match will always have length 0. In every other case, some\n    // characters will be matched (possibly only the end of line chars).\n    if (line.length === 0) break;\n\n    const indentSize = indent.length;\n    const prevSize = topOfStack();\n\n    const indentPos = pos + indentSize;\n\n    if (indentSize > prevSize) {\n      // Indent -- always only 1.\n      stack.push(indentSize);\n      result[indentPos] = 1;\n    } else if (indentSize < prevSize) {\n      // Dedent -- can be multiple levels.\n      const prevLength = stack.length;\n      while (topOfStack() !== indentSize) {\n        stack.pop();\n      }\n      result[indentPos] = -1 * (prevLength - stack.length);\n    }\n    pos += line.length;\n  }\n  // Ensure that there is a matching DEDENT for every remaining INDENT.\n  if (stack.length > 1) {\n    result[pos] = 1 - stack.length;\n  }\n  return result;\n}\n\n\n//# sourceURL=webpack://tatar-transliteratrr/./node_modules/ohm-js/src/findIndentation.js?");

/***/ }),

/***/ "./node_modules/ohm-js/src/main-kernel.js":
/*!************************************************!*\
  !*** ./node_modules/ohm-js/src/main-kernel.js ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   makeRecipe: () => (/* reexport safe */ _makeRecipe_js__WEBPACK_IMPORTED_MODULE_3__.makeRecipe)\n/* harmony export */ });\n/* harmony import */ var _dist_built_in_rules_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../dist/built-in-rules.js */ \"./node_modules/ohm-js/dist/built-in-rules.js\");\n/* harmony import */ var _Grammar_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Grammar.js */ \"./node_modules/ohm-js/src/Grammar.js\");\n/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./util.js */ \"./node_modules/ohm-js/src/util.js\");\n/* harmony import */ var _makeRecipe_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./makeRecipe.js */ \"./node_modules/ohm-js/src/makeRecipe.js\");\n\n\n\n\n_Grammar_js__WEBPACK_IMPORTED_MODULE_1__.Grammar.BuiltInRules = _dist_built_in_rules_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"];\n(0,_util_js__WEBPACK_IMPORTED_MODULE_2__.announceBuiltInRules)(_Grammar_js__WEBPACK_IMPORTED_MODULE_1__.Grammar.BuiltInRules);\n\n// During the bootstrap process, we instantiate some grammars that require\n// the built-in rules to be loaded first (e.g., ohm-grammar.ohm). By\n// exporting `makeRecipe` here, the recipes for those grammars can encode\n// that dependency by importing it from this module.\n\n\n\n//# sourceURL=webpack://tatar-transliteratrr/./node_modules/ohm-js/src/main-kernel.js?");

/***/ }),

/***/ "./node_modules/ohm-js/src/main.js":
/*!*****************************************!*\
  !*** ./node_modules/ohm-js/src/main.js ***!
  \*****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ExperimentalIndentationSensitive: () => (/* reexport safe */ _IndentationSensitive_js__WEBPACK_IMPORTED_MODULE_9__.IndentationSensitive),\n/* harmony export */   _buildGrammar: () => (/* reexport safe */ _buildGrammar_js__WEBPACK_IMPORTED_MODULE_1__.buildGrammar),\n/* harmony export */   grammar: () => (/* binding */ grammar),\n/* harmony export */   grammars: () => (/* binding */ grammars),\n/* harmony export */   makeRecipe: () => (/* reexport safe */ _main_kernel_js__WEBPACK_IMPORTED_MODULE_8__.makeRecipe),\n/* harmony export */   ohmGrammar: () => (/* reexport safe */ _dist_ohm_grammar_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]),\n/* harmony export */   pexprs: () => (/* reexport module object */ _pexprs_js__WEBPACK_IMPORTED_MODULE_5__),\n/* harmony export */   version: () => (/* reexport safe */ _version_js__WEBPACK_IMPORTED_MODULE_10__.version)\n/* harmony export */ });\n/* harmony import */ var _dist_ohm_grammar_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../dist/ohm-grammar.js */ \"./node_modules/ohm-js/dist/ohm-grammar.js\");\n/* harmony import */ var _buildGrammar_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./buildGrammar.js */ \"./node_modules/ohm-js/src/buildGrammar.js\");\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./common.js */ \"./node_modules/ohm-js/src/common.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./errors.js */ \"./node_modules/ohm-js/src/errors.js\");\n/* harmony import */ var _Grammar_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Grammar.js */ \"./node_modules/ohm-js/src/Grammar.js\");\n/* harmony import */ var _pexprs_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./pexprs.js */ \"./node_modules/ohm-js/src/pexprs.js\");\n/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./util.js */ \"./node_modules/ohm-js/src/util.js\");\n/* harmony import */ var _semanticsDeferredInit_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./semanticsDeferredInit.js */ \"./node_modules/ohm-js/src/semanticsDeferredInit.js\");\n/* harmony import */ var _main_kernel_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./main-kernel.js */ \"./node_modules/ohm-js/src/main-kernel.js\");\n/* harmony import */ var _IndentationSensitive_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./IndentationSensitive.js */ \"./node_modules/ohm-js/src/IndentationSensitive.js\");\n/* harmony import */ var _version_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./version.js */ \"./node_modules/ohm-js/src/version.js\");\n\n\n\n\n\n\n\n\n// Late initialization for stuff that is bootstrapped.\n\n // TODO: Clean this up.\n_Grammar_js__WEBPACK_IMPORTED_MODULE_4__.Grammar.initApplicationParser(_dist_ohm_grammar_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"], _buildGrammar_js__WEBPACK_IMPORTED_MODULE_1__.buildGrammar);\n\nconst isBuffer = obj =>\n  !!obj.constructor &&\n  typeof obj.constructor.isBuffer === 'function' &&\n  obj.constructor.isBuffer(obj);\n\nfunction compileAndLoad(source, namespace) {\n  const m = _dist_ohm_grammar_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].match(source, 'Grammars');\n  if (m.failed()) {\n    throw _errors_js__WEBPACK_IMPORTED_MODULE_3__.grammarSyntaxError(m);\n  }\n  return (0,_buildGrammar_js__WEBPACK_IMPORTED_MODULE_1__.buildGrammar)(m, namespace);\n}\n\nfunction grammar(source, optNamespace) {\n  const ns = grammars(source, optNamespace);\n\n  // Ensure that the source contained no more than one grammar definition.\n  const grammarNames = Object.keys(ns);\n  if (grammarNames.length === 0) {\n    throw new Error('Missing grammar definition');\n  } else if (grammarNames.length > 1) {\n    const secondGrammar = ns[grammarNames[1]];\n    const interval = secondGrammar.source;\n    throw new Error(\n        _util_js__WEBPACK_IMPORTED_MODULE_6__.getLineAndColumnMessage(interval.sourceString, interval.startIdx) +\n        'Found more than one grammar definition -- use ohm.grammars() instead.',\n    );\n  }\n  return ns[grammarNames[0]]; // Return the one and only grammar.\n}\n\nfunction grammars(source, optNamespace) {\n  const ns = Object.create(optNamespace || {});\n  if (typeof source !== 'string') {\n    // For convenience, detect Node.js Buffer objects and automatically call toString().\n    if (isBuffer(source)) {\n      source = source.toString();\n    } else {\n      throw new TypeError(\n          'Expected string as first argument, got ' + _common_js__WEBPACK_IMPORTED_MODULE_2__.unexpectedObjToString(source),\n      );\n    }\n  }\n  compileAndLoad(source, ns);\n  return ns;\n}\n\n// This is used by ohm-editor to instantiate grammars after incremental\n// parsing, which is not otherwise supported in the public API.\n\n\n\n\n\n\n\n\n\n//# sourceURL=webpack://tatar-transliteratrr/./node_modules/ohm-js/src/main.js?");

/***/ }),

/***/ "./node_modules/ohm-js/src/makeRecipe.js":
/*!***********************************************!*\
  !*** ./node_modules/ohm-js/src/makeRecipe.js ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   makeRecipe: () => (/* binding */ makeRecipe)\n/* harmony export */ });\n/* harmony import */ var _Builder_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Builder.js */ \"./node_modules/ohm-js/src/Builder.js\");\n\n\nfunction makeRecipe(recipe) {\n  if (typeof recipe === 'function') {\n    return recipe.call(new _Builder_js__WEBPACK_IMPORTED_MODULE_0__.Builder());\n  } else {\n    if (typeof recipe === 'string') {\n      // stringified JSON recipe\n      recipe = JSON.parse(recipe);\n    }\n    return new _Builder_js__WEBPACK_IMPORTED_MODULE_0__.Builder().fromRecipe(recipe);\n  }\n}\n\n\n//# sourceURL=webpack://tatar-transliteratrr/./node_modules/ohm-js/src/makeRecipe.js?");

/***/ }),

/***/ "./node_modules/ohm-js/src/nodes.js":
/*!******************************************!*\
  !*** ./node_modules/ohm-js/src/nodes.js ***!
  \******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   IterationNode: () => (/* binding */ IterationNode),\n/* harmony export */   Node: () => (/* binding */ Node),\n/* harmony export */   NonterminalNode: () => (/* binding */ NonterminalNode),\n/* harmony export */   TerminalNode: () => (/* binding */ TerminalNode)\n/* harmony export */ });\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common.js */ \"./node_modules/ohm-js/src/common.js\");\n\n\n// --------------------------------------------------------------------\n// Private stuff\n// --------------------------------------------------------------------\n\nclass Node {\n  constructor(matchLength) {\n    this.matchLength = matchLength;\n  }\n\n  get ctorName() {\n    throw new Error('subclass responsibility');\n  }\n\n  numChildren() {\n    return this.children ? this.children.length : 0;\n  }\n\n  childAt(idx) {\n    if (this.children) {\n      return this.children[idx];\n    }\n  }\n\n  indexOfChild(arg) {\n    return this.children.indexOf(arg);\n  }\n\n  hasChildren() {\n    return this.numChildren() > 0;\n  }\n\n  hasNoChildren() {\n    return !this.hasChildren();\n  }\n\n  onlyChild() {\n    if (this.numChildren() !== 1) {\n      throw new Error(\n          'cannot get only child of a node of type ' +\n          this.ctorName +\n          ' (it has ' +\n          this.numChildren() +\n          ' children)',\n      );\n    } else {\n      return this.firstChild();\n    }\n  }\n\n  firstChild() {\n    if (this.hasNoChildren()) {\n      throw new Error(\n          'cannot get first child of a ' + this.ctorName + ' node, which has no children',\n      );\n    } else {\n      return this.childAt(0);\n    }\n  }\n\n  lastChild() {\n    if (this.hasNoChildren()) {\n      throw new Error(\n          'cannot get last child of a ' + this.ctorName + ' node, which has no children',\n      );\n    } else {\n      return this.childAt(this.numChildren() - 1);\n    }\n  }\n\n  childBefore(child) {\n    const childIdx = this.indexOfChild(child);\n    if (childIdx < 0) {\n      throw new Error('Node.childBefore() called w/ an argument that is not a child');\n    } else if (childIdx === 0) {\n      throw new Error('cannot get child before first child');\n    } else {\n      return this.childAt(childIdx - 1);\n    }\n  }\n\n  childAfter(child) {\n    const childIdx = this.indexOfChild(child);\n    if (childIdx < 0) {\n      throw new Error('Node.childAfter() called w/ an argument that is not a child');\n    } else if (childIdx === this.numChildren() - 1) {\n      throw new Error('cannot get child after last child');\n    } else {\n      return this.childAt(childIdx + 1);\n    }\n  }\n\n  isTerminal() {\n    return false;\n  }\n\n  isNonterminal() {\n    return false;\n  }\n\n  isIteration() {\n    return false;\n  }\n\n  isOptional() {\n    return false;\n  }\n}\n\n// Terminals\n\nclass TerminalNode extends Node {\n  get ctorName() {\n    return '_terminal';\n  }\n\n  isTerminal() {\n    return true;\n  }\n\n  get primitiveValue() {\n    throw new Error('The `primitiveValue` property was removed in Ohm v17.');\n  }\n}\n\n// Nonterminals\n\nclass NonterminalNode extends Node {\n  constructor(ruleName, children, childOffsets, matchLength) {\n    super(matchLength);\n    this.ruleName = ruleName;\n    this.children = children;\n    this.childOffsets = childOffsets;\n  }\n\n  get ctorName() {\n    return this.ruleName;\n  }\n\n  isNonterminal() {\n    return true;\n  }\n\n  isLexical() {\n    return _common_js__WEBPACK_IMPORTED_MODULE_0__.isLexical(this.ctorName);\n  }\n\n  isSyntactic() {\n    return _common_js__WEBPACK_IMPORTED_MODULE_0__.isSyntactic(this.ctorName);\n  }\n}\n\n// Iterations\n\nclass IterationNode extends Node {\n  constructor(children, childOffsets, matchLength, isOptional) {\n    super(matchLength);\n    this.children = children;\n    this.childOffsets = childOffsets;\n    this.optional = isOptional;\n  }\n\n  get ctorName() {\n    return '_iter';\n  }\n\n  isIteration() {\n    return true;\n  }\n\n  isOptional() {\n    return this.optional;\n  }\n}\n\n\n//# sourceURL=webpack://tatar-transliteratrr/./node_modules/ohm-js/src/nodes.js?");

/***/ }),

/***/ "./node_modules/ohm-js/src/pexprs-allowsSkippingPrecedingSpace.js":
/*!************************************************************************!*\
  !*** ./node_modules/ohm-js/src/pexprs-allowsSkippingPrecedingSpace.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common.js */ \"./node_modules/ohm-js/src/common.js\");\n/* harmony import */ var _pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./pexprs-main.js */ \"./node_modules/ohm-js/src/pexprs-main.js\");\n\n\n\n// --------------------------------------------------------------------\n// Operations\n// --------------------------------------------------------------------\n\n/*\n  Return true if we should skip spaces preceding this expression in a syntactic context.\n*/\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.PExpr.prototype.allowsSkippingPrecedingSpace = (0,_common_js__WEBPACK_IMPORTED_MODULE_0__.abstract)('allowsSkippingPrecedingSpace');\n\n/*\n  Generally, these are all first-order expressions and (with the exception of Apply)\n  directly read from the input stream.\n*/\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.any.allowsSkippingPrecedingSpace =\n  _pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.end.allowsSkippingPrecedingSpace =\n  _pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.Apply.prototype.allowsSkippingPrecedingSpace =\n  _pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.Terminal.prototype.allowsSkippingPrecedingSpace =\n  _pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.Range.prototype.allowsSkippingPrecedingSpace =\n  _pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.UnicodeChar.prototype.allowsSkippingPrecedingSpace =\n    function() {\n      return true;\n    };\n\n/*\n  Higher-order expressions that don't directly consume input.\n*/\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.Alt.prototype.allowsSkippingPrecedingSpace =\n  _pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.Iter.prototype.allowsSkippingPrecedingSpace =\n  _pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.Lex.prototype.allowsSkippingPrecedingSpace =\n  _pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.Lookahead.prototype.allowsSkippingPrecedingSpace =\n  _pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.Not.prototype.allowsSkippingPrecedingSpace =\n  _pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.Param.prototype.allowsSkippingPrecedingSpace =\n  _pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.Seq.prototype.allowsSkippingPrecedingSpace =\n    function() {\n      return false;\n    };\n\n\n//# sourceURL=webpack://tatar-transliteratrr/./node_modules/ohm-js/src/pexprs-allowsSkippingPrecedingSpace.js?");

/***/ }),

/***/ "./node_modules/ohm-js/src/pexprs-assertAllApplicationsAreValid.js":
/*!*************************************************************************!*\
  !*** ./node_modules/ohm-js/src/pexprs-assertAllApplicationsAreValid.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common.js */ \"./node_modules/ohm-js/src/common.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./errors.js */ \"./node_modules/ohm-js/src/errors.js\");\n/* harmony import */ var _pexprs_main_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./pexprs-main.js */ \"./node_modules/ohm-js/src/pexprs-main.js\");\n/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./util.js */ \"./node_modules/ohm-js/src/util.js\");\n\n\n\n\n\nlet BuiltInRules;\n\n_util_js__WEBPACK_IMPORTED_MODULE_3__.awaitBuiltInRules(g => {\n  BuiltInRules = g;\n});\n\n// --------------------------------------------------------------------\n// Operations\n// --------------------------------------------------------------------\n\nlet lexifyCount;\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_2__.PExpr.prototype.assertAllApplicationsAreValid = function(ruleName, grammar) {\n  lexifyCount = 0;\n  this._assertAllApplicationsAreValid(ruleName, grammar);\n};\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_2__.PExpr.prototype._assertAllApplicationsAreValid = (0,_common_js__WEBPACK_IMPORTED_MODULE_0__.abstract)(\n    '_assertAllApplicationsAreValid',\n);\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_2__.any._assertAllApplicationsAreValid =\n  _pexprs_main_js__WEBPACK_IMPORTED_MODULE_2__.end._assertAllApplicationsAreValid =\n  _pexprs_main_js__WEBPACK_IMPORTED_MODULE_2__.Terminal.prototype._assertAllApplicationsAreValid =\n  _pexprs_main_js__WEBPACK_IMPORTED_MODULE_2__.Range.prototype._assertAllApplicationsAreValid =\n  _pexprs_main_js__WEBPACK_IMPORTED_MODULE_2__.Param.prototype._assertAllApplicationsAreValid =\n  _pexprs_main_js__WEBPACK_IMPORTED_MODULE_2__.UnicodeChar.prototype._assertAllApplicationsAreValid =\n    function(ruleName, grammar) {\n      // no-op\n    };\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_2__.Lex.prototype._assertAllApplicationsAreValid = function(ruleName, grammar) {\n  lexifyCount++;\n  this.expr._assertAllApplicationsAreValid(ruleName, grammar);\n  lexifyCount--;\n};\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_2__.Alt.prototype._assertAllApplicationsAreValid = function(ruleName, grammar) {\n  for (let idx = 0; idx < this.terms.length; idx++) {\n    this.terms[idx]._assertAllApplicationsAreValid(ruleName, grammar);\n  }\n};\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_2__.Seq.prototype._assertAllApplicationsAreValid = function(ruleName, grammar) {\n  for (let idx = 0; idx < this.factors.length; idx++) {\n    this.factors[idx]._assertAllApplicationsAreValid(ruleName, grammar);\n  }\n};\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_2__.Iter.prototype._assertAllApplicationsAreValid =\n  _pexprs_main_js__WEBPACK_IMPORTED_MODULE_2__.Not.prototype._assertAllApplicationsAreValid =\n  _pexprs_main_js__WEBPACK_IMPORTED_MODULE_2__.Lookahead.prototype._assertAllApplicationsAreValid =\n    function(ruleName, grammar) {\n      this.expr._assertAllApplicationsAreValid(ruleName, grammar);\n    };\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_2__.Apply.prototype._assertAllApplicationsAreValid = function(\n    ruleName,\n    grammar,\n    skipSyntacticCheck = false,\n) {\n  const ruleInfo = grammar.rules[this.ruleName];\n  const isContextSyntactic = (0,_common_js__WEBPACK_IMPORTED_MODULE_0__.isSyntactic)(ruleName) && lexifyCount === 0;\n\n  // Make sure that the rule exists...\n  if (!ruleInfo) {\n    throw _errors_js__WEBPACK_IMPORTED_MODULE_1__.undeclaredRule(this.ruleName, grammar.name, this.source);\n  }\n\n  // ...and that this application is allowed\n  if (!skipSyntacticCheck && (0,_common_js__WEBPACK_IMPORTED_MODULE_0__.isSyntactic)(this.ruleName) && !isContextSyntactic) {\n    throw _errors_js__WEBPACK_IMPORTED_MODULE_1__.applicationOfSyntacticRuleFromLexicalContext(this.ruleName, this);\n  }\n\n  // ...and that this application has the correct number of arguments.\n  const actual = this.args.length;\n  const expected = ruleInfo.formals.length;\n  if (actual !== expected) {\n    throw _errors_js__WEBPACK_IMPORTED_MODULE_1__.wrongNumberOfArguments(this.ruleName, expected, actual, this.source);\n  }\n\n  const isBuiltInApplySyntactic =\n    BuiltInRules && ruleInfo === BuiltInRules.rules.applySyntactic;\n  const isBuiltInCaseInsensitive =\n    BuiltInRules && ruleInfo === BuiltInRules.rules.caseInsensitive;\n\n  // If it's an application of 'caseInsensitive', ensure that the argument is a Terminal.\n  if (isBuiltInCaseInsensitive) {\n    if (!(this.args[0] instanceof _pexprs_main_js__WEBPACK_IMPORTED_MODULE_2__.Terminal)) {\n      throw _errors_js__WEBPACK_IMPORTED_MODULE_1__.incorrectArgumentType('a Terminal (e.g. \"abc\")', this.args[0]);\n    }\n  }\n\n  if (isBuiltInApplySyntactic) {\n    const arg = this.args[0];\n    if (!(arg instanceof _pexprs_main_js__WEBPACK_IMPORTED_MODULE_2__.Apply)) {\n      throw _errors_js__WEBPACK_IMPORTED_MODULE_1__.incorrectArgumentType('a syntactic rule application', arg);\n    }\n    if (!(0,_common_js__WEBPACK_IMPORTED_MODULE_0__.isSyntactic)(arg.ruleName)) {\n      throw _errors_js__WEBPACK_IMPORTED_MODULE_1__.applySyntacticWithLexicalRuleApplication(arg);\n    }\n    if (isContextSyntactic) {\n      throw _errors_js__WEBPACK_IMPORTED_MODULE_1__.unnecessaryExperimentalApplySyntactic(this);\n    }\n  }\n\n  // ...and that all of the argument expressions only have valid applications and have arity 1.\n  // If `this` is an application of the built-in applySyntactic rule, then its arg is\n  // allowed (and expected) to be a syntactic rule, even if we're in a lexical context.\n  this.args.forEach(arg => {\n    arg._assertAllApplicationsAreValid(ruleName, grammar, isBuiltInApplySyntactic);\n    if (arg.getArity() !== 1) {\n      throw _errors_js__WEBPACK_IMPORTED_MODULE_1__.invalidParameter(this.ruleName, arg);\n    }\n  });\n};\n\n\n//# sourceURL=webpack://tatar-transliteratrr/./node_modules/ohm-js/src/pexprs-assertAllApplicationsAreValid.js?");

/***/ }),

/***/ "./node_modules/ohm-js/src/pexprs-assertChoicesHaveUniformArity.js":
/*!*************************************************************************!*\
  !*** ./node_modules/ohm-js/src/pexprs-assertChoicesHaveUniformArity.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common.js */ \"./node_modules/ohm-js/src/common.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./errors.js */ \"./node_modules/ohm-js/src/errors.js\");\n/* harmony import */ var _pexprs_main_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./pexprs-main.js */ \"./node_modules/ohm-js/src/pexprs-main.js\");\n\n\n\n\n// --------------------------------------------------------------------\n// Operations\n// --------------------------------------------------------------------\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_2__.PExpr.prototype.assertChoicesHaveUniformArity = (0,_common_js__WEBPACK_IMPORTED_MODULE_0__.abstract)(\n    'assertChoicesHaveUniformArity',\n);\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_2__.any.assertChoicesHaveUniformArity =\n  _pexprs_main_js__WEBPACK_IMPORTED_MODULE_2__.end.assertChoicesHaveUniformArity =\n  _pexprs_main_js__WEBPACK_IMPORTED_MODULE_2__.Terminal.prototype.assertChoicesHaveUniformArity =\n  _pexprs_main_js__WEBPACK_IMPORTED_MODULE_2__.Range.prototype.assertChoicesHaveUniformArity =\n  _pexprs_main_js__WEBPACK_IMPORTED_MODULE_2__.Param.prototype.assertChoicesHaveUniformArity =\n  _pexprs_main_js__WEBPACK_IMPORTED_MODULE_2__.Lex.prototype.assertChoicesHaveUniformArity =\n  _pexprs_main_js__WEBPACK_IMPORTED_MODULE_2__.UnicodeChar.prototype.assertChoicesHaveUniformArity =\n    function(ruleName) {\n      // no-op\n    };\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_2__.Alt.prototype.assertChoicesHaveUniformArity = function(ruleName) {\n  if (this.terms.length === 0) {\n    return;\n  }\n  const arity = this.terms[0].getArity();\n  for (let idx = 0; idx < this.terms.length; idx++) {\n    const term = this.terms[idx];\n    term.assertChoicesHaveUniformArity();\n    const otherArity = term.getArity();\n    if (arity !== otherArity) {\n      throw _errors_js__WEBPACK_IMPORTED_MODULE_1__.inconsistentArity(ruleName, arity, otherArity, term);\n    }\n  }\n};\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_2__.Extend.prototype.assertChoicesHaveUniformArity = function(ruleName) {\n  // Extend is a special case of Alt that's guaranteed to have exactly two\n  // cases: [extensions, origBody].\n  const actualArity = this.terms[0].getArity();\n  const expectedArity = this.terms[1].getArity();\n  if (actualArity !== expectedArity) {\n    throw _errors_js__WEBPACK_IMPORTED_MODULE_1__.inconsistentArity(ruleName, expectedArity, actualArity, this.terms[0]);\n  }\n};\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_2__.Seq.prototype.assertChoicesHaveUniformArity = function(ruleName) {\n  for (let idx = 0; idx < this.factors.length; idx++) {\n    this.factors[idx].assertChoicesHaveUniformArity(ruleName);\n  }\n};\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_2__.Iter.prototype.assertChoicesHaveUniformArity = function(ruleName) {\n  this.expr.assertChoicesHaveUniformArity(ruleName);\n};\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_2__.Not.prototype.assertChoicesHaveUniformArity = function(ruleName) {\n  // no-op (not required b/c the nested expr doesn't show up in the CST)\n};\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_2__.Lookahead.prototype.assertChoicesHaveUniformArity = function(ruleName) {\n  this.expr.assertChoicesHaveUniformArity(ruleName);\n};\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_2__.Apply.prototype.assertChoicesHaveUniformArity = function(ruleName) {\n  // The arities of the parameter expressions is required to be 1 by\n  // `assertAllApplicationsAreValid()`.\n};\n\n\n//# sourceURL=webpack://tatar-transliteratrr/./node_modules/ohm-js/src/pexprs-assertChoicesHaveUniformArity.js?");

/***/ }),

/***/ "./node_modules/ohm-js/src/pexprs-assertIteratedExprsAreNotNullable.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/ohm-js/src/pexprs-assertIteratedExprsAreNotNullable.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common.js */ \"./node_modules/ohm-js/src/common.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./errors.js */ \"./node_modules/ohm-js/src/errors.js\");\n/* harmony import */ var _pexprs_main_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./pexprs-main.js */ \"./node_modules/ohm-js/src/pexprs-main.js\");\n\n\n\n\n// --------------------------------------------------------------------\n// Operations\n// --------------------------------------------------------------------\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_2__.PExpr.prototype.assertIteratedExprsAreNotNullable = (0,_common_js__WEBPACK_IMPORTED_MODULE_0__.abstract)(\n    'assertIteratedExprsAreNotNullable',\n);\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_2__.any.assertIteratedExprsAreNotNullable =\n  _pexprs_main_js__WEBPACK_IMPORTED_MODULE_2__.end.assertIteratedExprsAreNotNullable =\n  _pexprs_main_js__WEBPACK_IMPORTED_MODULE_2__.Terminal.prototype.assertIteratedExprsAreNotNullable =\n  _pexprs_main_js__WEBPACK_IMPORTED_MODULE_2__.Range.prototype.assertIteratedExprsAreNotNullable =\n  _pexprs_main_js__WEBPACK_IMPORTED_MODULE_2__.Param.prototype.assertIteratedExprsAreNotNullable =\n  _pexprs_main_js__WEBPACK_IMPORTED_MODULE_2__.UnicodeChar.prototype.assertIteratedExprsAreNotNullable =\n    function(grammar) {\n      // no-op\n    };\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_2__.Alt.prototype.assertIteratedExprsAreNotNullable = function(grammar) {\n  for (let idx = 0; idx < this.terms.length; idx++) {\n    this.terms[idx].assertIteratedExprsAreNotNullable(grammar);\n  }\n};\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_2__.Seq.prototype.assertIteratedExprsAreNotNullable = function(grammar) {\n  for (let idx = 0; idx < this.factors.length; idx++) {\n    this.factors[idx].assertIteratedExprsAreNotNullable(grammar);\n  }\n};\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_2__.Iter.prototype.assertIteratedExprsAreNotNullable = function(grammar) {\n  // Note: this is the implementation of this method for `Star` and `Plus` expressions.\n  // It is overridden for `Opt` below.\n  this.expr.assertIteratedExprsAreNotNullable(grammar);\n  if (this.expr.isNullable(grammar)) {\n    throw _errors_js__WEBPACK_IMPORTED_MODULE_1__.kleeneExprHasNullableOperand(this, []);\n  }\n};\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_2__.Opt.prototype.assertIteratedExprsAreNotNullable =\n  _pexprs_main_js__WEBPACK_IMPORTED_MODULE_2__.Not.prototype.assertIteratedExprsAreNotNullable =\n  _pexprs_main_js__WEBPACK_IMPORTED_MODULE_2__.Lookahead.prototype.assertIteratedExprsAreNotNullable =\n  _pexprs_main_js__WEBPACK_IMPORTED_MODULE_2__.Lex.prototype.assertIteratedExprsAreNotNullable =\n    function(grammar) {\n      this.expr.assertIteratedExprsAreNotNullable(grammar);\n    };\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_2__.Apply.prototype.assertIteratedExprsAreNotNullable = function(grammar) {\n  this.args.forEach(arg => {\n    arg.assertIteratedExprsAreNotNullable(grammar);\n  });\n};\n\n\n//# sourceURL=webpack://tatar-transliteratrr/./node_modules/ohm-js/src/pexprs-assertIteratedExprsAreNotNullable.js?");

/***/ }),

/***/ "./node_modules/ohm-js/src/pexprs-eval.js":
/*!************************************************!*\
  !*** ./node_modules/ohm-js/src/pexprs-eval.js ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _Trace_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Trace.js */ \"./node_modules/ohm-js/src/Trace.js\");\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./common.js */ \"./node_modules/ohm-js/src/common.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./errors.js */ \"./node_modules/ohm-js/src/errors.js\");\n/* harmony import */ var _nodes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./nodes.js */ \"./node_modules/ohm-js/src/nodes.js\");\n/* harmony import */ var _pexprs_main_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./pexprs-main.js */ \"./node_modules/ohm-js/src/pexprs-main.js\");\n\n\n\n\n\n\n// --------------------------------------------------------------------\n// Operations\n// --------------------------------------------------------------------\n\n/*\n  Evaluate the expression and return `true` if it succeeds, `false` otherwise. This method should\n  only be called directly by `State.prototype.eval(expr)`, which also updates the data structures\n  that are used for tracing. (Making those updates in a method of `State` enables the trace-specific\n  data structures to be \"secrets\" of that class, which is good for modularity.)\n\n  The contract of this method is as follows:\n  * When the return value is `true`,\n    - the state object will have `expr.getArity()` more bindings than it did before the call.\n  * When the return value is `false`,\n    - the state object may have more bindings than it did before the call, and\n    - its input stream's position may be anywhere.\n\n  Note that `State.prototype.eval(expr)`, unlike this method, guarantees that neither the state\n  object's bindings nor its input stream's position will change if the expression fails to match.\n*/\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_4__.PExpr.prototype.eval = _common_js__WEBPACK_IMPORTED_MODULE_1__.abstract('eval'); // function(state) { ... }\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_4__.any.eval = function(state) {\n  const {inputStream} = state;\n  const origPos = inputStream.pos;\n  const cp = inputStream.nextCodePoint();\n  if (cp !== undefined) {\n    state.pushBinding(new _nodes_js__WEBPACK_IMPORTED_MODULE_3__.TerminalNode(String.fromCodePoint(cp).length), origPos);\n    return true;\n  } else {\n    state.processFailure(origPos, this);\n    return false;\n  }\n};\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_4__.end.eval = function(state) {\n  const {inputStream} = state;\n  const origPos = inputStream.pos;\n  if (inputStream.atEnd()) {\n    state.pushBinding(new _nodes_js__WEBPACK_IMPORTED_MODULE_3__.TerminalNode(0), origPos);\n    return true;\n  } else {\n    state.processFailure(origPos, this);\n    return false;\n  }\n};\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_4__.Terminal.prototype.eval = function(state) {\n  const {inputStream} = state;\n  const origPos = inputStream.pos;\n  if (!inputStream.matchString(this.obj)) {\n    state.processFailure(origPos, this);\n    return false;\n  } else {\n    state.pushBinding(new _nodes_js__WEBPACK_IMPORTED_MODULE_3__.TerminalNode(this.obj.length), origPos);\n    return true;\n  }\n};\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_4__.Range.prototype.eval = function(state) {\n  const {inputStream} = state;\n  const origPos = inputStream.pos;\n\n  // A range can operate in one of two modes: matching a single, 16-bit _code unit_,\n  // or matching a _code point_. (Code points over 0xFFFF take up two 16-bit code units.)\n  const cp = this.matchCodePoint ? inputStream.nextCodePoint() : inputStream.nextCharCode();\n\n  // Always compare by code point value to get the correct result in all scenarios.\n  // Note that for strings of length 1, codePointAt(0) and charPointAt(0) are equivalent.\n  if (cp !== undefined && this.from.codePointAt(0) <= cp && cp <= this.to.codePointAt(0)) {\n    state.pushBinding(new _nodes_js__WEBPACK_IMPORTED_MODULE_3__.TerminalNode(String.fromCodePoint(cp).length), origPos);\n    return true;\n  } else {\n    state.processFailure(origPos, this);\n    return false;\n  }\n};\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_4__.Param.prototype.eval = function(state) {\n  return state.eval(state.currentApplication().args[this.index]);\n};\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_4__.Lex.prototype.eval = function(state) {\n  state.enterLexifiedContext();\n  const ans = state.eval(this.expr);\n  state.exitLexifiedContext();\n  return ans;\n};\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_4__.Alt.prototype.eval = function(state) {\n  for (let idx = 0; idx < this.terms.length; idx++) {\n    if (state.eval(this.terms[idx])) {\n      return true;\n    }\n  }\n  return false;\n};\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_4__.Seq.prototype.eval = function(state) {\n  for (let idx = 0; idx < this.factors.length; idx++) {\n    const factor = this.factors[idx];\n    if (!state.eval(factor)) {\n      return false;\n    }\n  }\n  return true;\n};\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_4__.Iter.prototype.eval = function(state) {\n  const {inputStream} = state;\n  const origPos = inputStream.pos;\n  const arity = this.getArity();\n  const cols = [];\n  const colOffsets = [];\n  while (cols.length < arity) {\n    cols.push([]);\n    colOffsets.push([]);\n  }\n\n  let numMatches = 0;\n  let prevPos = origPos;\n  let idx;\n  while (numMatches < this.maxNumMatches && state.eval(this.expr)) {\n    if (inputStream.pos === prevPos) {\n      throw _errors_js__WEBPACK_IMPORTED_MODULE_2__.kleeneExprHasNullableOperand(this, state._applicationStack);\n    }\n    prevPos = inputStream.pos;\n    numMatches++;\n    const row = state._bindings.splice(state._bindings.length - arity, arity);\n    const rowOffsets = state._bindingOffsets.splice(\n        state._bindingOffsets.length - arity,\n        arity,\n    );\n    for (idx = 0; idx < row.length; idx++) {\n      cols[idx].push(row[idx]);\n      colOffsets[idx].push(rowOffsets[idx]);\n    }\n  }\n  if (numMatches < this.minNumMatches) {\n    return false;\n  }\n  let offset = state.posToOffset(origPos);\n  let matchLength = 0;\n  if (numMatches > 0) {\n    const lastCol = cols[arity - 1];\n    const lastColOffsets = colOffsets[arity - 1];\n\n    const endOffset =\n      lastColOffsets[lastColOffsets.length - 1] + lastCol[lastCol.length - 1].matchLength;\n    offset = colOffsets[0][0];\n    matchLength = endOffset - offset;\n  }\n  const isOptional = this instanceof _pexprs_main_js__WEBPACK_IMPORTED_MODULE_4__.Opt;\n  for (idx = 0; idx < cols.length; idx++) {\n    state._bindings.push(\n        new _nodes_js__WEBPACK_IMPORTED_MODULE_3__.IterationNode(cols[idx], colOffsets[idx], matchLength, isOptional),\n    );\n    state._bindingOffsets.push(offset);\n  }\n  return true;\n};\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_4__.Not.prototype.eval = function(state) {\n  /*\n    TODO:\n    - Right now we're just throwing away all of the failures that happen inside a `not`, and\n      recording `this` as a failed expression.\n    - Double negation should be equivalent to lookahead, but that's not the case right now wrt\n      failures. E.g., ~~'foo' produces a failure for ~~'foo', but maybe it should produce\n      a failure for 'foo' instead.\n  */\n\n  const {inputStream} = state;\n  const origPos = inputStream.pos;\n  state.pushFailuresInfo();\n\n  const ans = state.eval(this.expr);\n\n  state.popFailuresInfo();\n  if (ans) {\n    state.processFailure(origPos, this);\n    return false;\n  }\n\n  inputStream.pos = origPos;\n  return true;\n};\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_4__.Lookahead.prototype.eval = function(state) {\n  const {inputStream} = state;\n  const origPos = inputStream.pos;\n  if (state.eval(this.expr)) {\n    inputStream.pos = origPos;\n    return true;\n  } else {\n    return false;\n  }\n};\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_4__.Apply.prototype.eval = function(state) {\n  const caller = state.currentApplication();\n  const actuals = caller ? caller.args : [];\n  const app = this.substituteParams(actuals);\n\n  const posInfo = state.getCurrentPosInfo();\n  if (posInfo.isActive(app)) {\n    // This rule is already active at this position, i.e., it is left-recursive.\n    return app.handleCycle(state);\n  }\n\n  const memoKey = app.toMemoKey();\n  const memoRec = posInfo.memo[memoKey];\n\n  if (memoRec && posInfo.shouldUseMemoizedResult(memoRec)) {\n    if (state.hasNecessaryInfo(memoRec)) {\n      return state.useMemoizedResult(state.inputStream.pos, memoRec);\n    }\n    delete posInfo.memo[memoKey];\n  }\n  return app.reallyEval(state);\n};\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_4__.Apply.prototype.handleCycle = function(state) {\n  const posInfo = state.getCurrentPosInfo();\n  const {currentLeftRecursion} = posInfo;\n  const memoKey = this.toMemoKey();\n  let memoRec = posInfo.memo[memoKey];\n\n  if (currentLeftRecursion && currentLeftRecursion.headApplication.toMemoKey() === memoKey) {\n    // We already know about this left recursion, but it's possible there are \"involved\n    // applications\" that we don't already know about, so...\n    memoRec.updateInvolvedApplicationMemoKeys();\n  } else if (!memoRec) {\n    // New left recursion detected! Memoize a failure to try to get a seed parse.\n    memoRec = posInfo.memoize(memoKey, {\n      matchLength: 0,\n      examinedLength: 0,\n      value: false,\n      rightmostFailureOffset: -1,\n    });\n    posInfo.startLeftRecursion(this, memoRec);\n  }\n  return state.useMemoizedResult(state.inputStream.pos, memoRec);\n};\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_4__.Apply.prototype.reallyEval = function(state) {\n  const {inputStream} = state;\n  const origPos = inputStream.pos;\n  const origPosInfo = state.getCurrentPosInfo();\n  const ruleInfo = state.grammar.rules[this.ruleName];\n  const {body} = ruleInfo;\n  const {description} = ruleInfo;\n\n  state.enterApplication(origPosInfo, this);\n\n  if (description) {\n    state.pushFailuresInfo();\n  }\n\n  // Reset the input stream's examinedLength property so that we can track\n  // the examined length of this particular application.\n  const origInputStreamExaminedLength = inputStream.examinedLength;\n  inputStream.examinedLength = 0;\n\n  let value = this.evalOnce(body, state);\n  const currentLR = origPosInfo.currentLeftRecursion;\n  const memoKey = this.toMemoKey();\n  const isHeadOfLeftRecursion = currentLR && currentLR.headApplication.toMemoKey() === memoKey;\n  let memoRec;\n\n  if (state.doNotMemoize) {\n    state.doNotMemoize = false;\n  } else if (isHeadOfLeftRecursion) {\n    value = this.growSeedResult(body, state, origPos, currentLR, value);\n    origPosInfo.endLeftRecursion();\n    memoRec = currentLR;\n    memoRec.examinedLength = inputStream.examinedLength - origPos;\n    memoRec.rightmostFailureOffset = state._getRightmostFailureOffset();\n    origPosInfo.memoize(memoKey, memoRec); // updates origPosInfo's maxExaminedLength\n  } else if (!currentLR || !currentLR.isInvolved(memoKey)) {\n    // This application is not involved in left recursion, so it's ok to memoize it.\n    memoRec = origPosInfo.memoize(memoKey, {\n      matchLength: inputStream.pos - origPos,\n      examinedLength: inputStream.examinedLength - origPos,\n      value,\n      failuresAtRightmostPosition: state.cloneRecordedFailures(),\n      rightmostFailureOffset: state._getRightmostFailureOffset(),\n    });\n  }\n  const succeeded = !!value;\n\n  if (description) {\n    state.popFailuresInfo();\n    if (!succeeded) {\n      state.processFailure(origPos, this);\n    }\n    if (memoRec) {\n      memoRec.failuresAtRightmostPosition = state.cloneRecordedFailures();\n    }\n  }\n\n  // Record trace information in the memo table, so that it is available if the memoized result\n  // is used later.\n  if (state.isTracing() && memoRec) {\n    const entry = state.getTraceEntry(origPos, this, succeeded, succeeded ? [value] : []);\n    if (isHeadOfLeftRecursion) {\n      _common_js__WEBPACK_IMPORTED_MODULE_1__.assert(entry.terminatingLREntry != null || !succeeded);\n      entry.isHeadOfLeftRecursion = true;\n    }\n    memoRec.traceEntry = entry;\n  }\n\n  // Fix the input stream's examinedLength -- it should be the maximum examined length\n  // across all applications, not just this one.\n  inputStream.examinedLength = Math.max(\n      inputStream.examinedLength,\n      origInputStreamExaminedLength,\n  );\n\n  state.exitApplication(origPosInfo, value);\n\n  return succeeded;\n};\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_4__.Apply.prototype.evalOnce = function(expr, state) {\n  const {inputStream} = state;\n  const origPos = inputStream.pos;\n\n  if (state.eval(expr)) {\n    const arity = expr.getArity();\n    const bindings = state._bindings.splice(state._bindings.length - arity, arity);\n    const offsets = state._bindingOffsets.splice(state._bindingOffsets.length - arity, arity);\n    const matchLength = inputStream.pos - origPos;\n    return new _nodes_js__WEBPACK_IMPORTED_MODULE_3__.NonterminalNode(this.ruleName, bindings, offsets, matchLength);\n  } else {\n    return false;\n  }\n};\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_4__.Apply.prototype.growSeedResult = function(body, state, origPos, lrMemoRec, newValue) {\n  if (!newValue) {\n    return false;\n  }\n\n  const {inputStream} = state;\n\n  while (true) {\n    lrMemoRec.matchLength = inputStream.pos - origPos;\n    lrMemoRec.value = newValue;\n    lrMemoRec.failuresAtRightmostPosition = state.cloneRecordedFailures();\n\n    if (state.isTracing()) {\n      // Before evaluating the body again, add a trace node for this application to the memo entry.\n      // Its only child is a copy of the trace node from `newValue`, which will always be the last\n      // element in `state.trace`.\n      const seedTrace = state.trace[state.trace.length - 1];\n      lrMemoRec.traceEntry = new _Trace_js__WEBPACK_IMPORTED_MODULE_0__.Trace(\n          state.input,\n          origPos,\n          inputStream.pos,\n          this,\n          true,\n          [newValue],\n          [seedTrace.clone()],\n      );\n    }\n    inputStream.pos = origPos;\n    newValue = this.evalOnce(body, state);\n    if (inputStream.pos - origPos <= lrMemoRec.matchLength) {\n      break;\n    }\n    if (state.isTracing()) {\n      state.trace.splice(-2, 1); // Drop the trace for the old seed.\n    }\n  }\n  if (state.isTracing()) {\n    // The last entry is for an unused result -- pop it and save it in the \"real\" entry.\n    lrMemoRec.traceEntry.recordLRTermination(state.trace.pop(), newValue);\n  }\n  inputStream.pos = origPos + lrMemoRec.matchLength;\n  return lrMemoRec.value;\n};\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_4__.UnicodeChar.prototype.eval = function(state) {\n  const {inputStream} = state;\n  const origPos = inputStream.pos;\n  const ch = inputStream.next();\n  if (ch && this.pattern.test(ch)) {\n    state.pushBinding(new _nodes_js__WEBPACK_IMPORTED_MODULE_3__.TerminalNode(ch.length), origPos);\n    return true;\n  } else {\n    state.processFailure(origPos, this);\n    return false;\n  }\n};\n\n\n//# sourceURL=webpack://tatar-transliteratrr/./node_modules/ohm-js/src/pexprs-eval.js?");

/***/ }),

/***/ "./node_modules/ohm-js/src/pexprs-getArity.js":
/*!****************************************************!*\
  !*** ./node_modules/ohm-js/src/pexprs-getArity.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common.js */ \"./node_modules/ohm-js/src/common.js\");\n/* harmony import */ var _pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./pexprs-main.js */ \"./node_modules/ohm-js/src/pexprs-main.js\");\n\n\n\n// --------------------------------------------------------------------\n// Operations\n// --------------------------------------------------------------------\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.PExpr.prototype.getArity = (0,_common_js__WEBPACK_IMPORTED_MODULE_0__.abstract)('getArity');\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.any.getArity =\n  _pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.end.getArity =\n  _pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.Terminal.prototype.getArity =\n  _pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.Range.prototype.getArity =\n  _pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.Param.prototype.getArity =\n  _pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.Apply.prototype.getArity =\n  _pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.UnicodeChar.prototype.getArity =\n    function() {\n      return 1;\n    };\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.Alt.prototype.getArity = function() {\n  // This is ok b/c all terms must have the same arity -- this property is\n  // checked by the Grammar constructor.\n  return this.terms.length === 0 ? 0 : this.terms[0].getArity();\n};\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.Seq.prototype.getArity = function() {\n  let arity = 0;\n  for (let idx = 0; idx < this.factors.length; idx++) {\n    arity += this.factors[idx].getArity();\n  }\n  return arity;\n};\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.Iter.prototype.getArity = function() {\n  return this.expr.getArity();\n};\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.Not.prototype.getArity = function() {\n  return 0;\n};\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.Lookahead.prototype.getArity = _pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.Lex.prototype.getArity = function() {\n  return this.expr.getArity();\n};\n\n\n//# sourceURL=webpack://tatar-transliteratrr/./node_modules/ohm-js/src/pexprs-getArity.js?");

/***/ }),

/***/ "./node_modules/ohm-js/src/pexprs-introduceParams.js":
/*!***********************************************************!*\
  !*** ./node_modules/ohm-js/src/pexprs-introduceParams.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common.js */ \"./node_modules/ohm-js/src/common.js\");\n/* harmony import */ var _pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./pexprs-main.js */ \"./node_modules/ohm-js/src/pexprs-main.js\");\n\n\n\n// --------------------------------------------------------------------\n// Operations\n// --------------------------------------------------------------------\n\n/*\n  Called at grammar creation time to rewrite a rule body, replacing each reference to a formal\n  parameter with a `Param` node. Returns a PExpr -- either a new one, or the original one if\n  it was modified in place.\n*/\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.PExpr.prototype.introduceParams = (0,_common_js__WEBPACK_IMPORTED_MODULE_0__.abstract)('introduceParams');\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.any.introduceParams =\n  _pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.end.introduceParams =\n  _pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.Terminal.prototype.introduceParams =\n  _pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.Range.prototype.introduceParams =\n  _pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.Param.prototype.introduceParams =\n  _pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.UnicodeChar.prototype.introduceParams =\n    function(formals) {\n      return this;\n    };\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.Alt.prototype.introduceParams = function(formals) {\n  this.terms.forEach((term, idx, terms) => {\n    terms[idx] = term.introduceParams(formals);\n  });\n  return this;\n};\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.Seq.prototype.introduceParams = function(formals) {\n  this.factors.forEach((factor, idx, factors) => {\n    factors[idx] = factor.introduceParams(formals);\n  });\n  return this;\n};\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.Iter.prototype.introduceParams =\n  _pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.Not.prototype.introduceParams =\n  _pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.Lookahead.prototype.introduceParams =\n  _pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.Lex.prototype.introduceParams =\n    function(formals) {\n      this.expr = this.expr.introduceParams(formals);\n      return this;\n    };\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.Apply.prototype.introduceParams = function(formals) {\n  const index = formals.indexOf(this.ruleName);\n  if (index >= 0) {\n    if (this.args.length > 0) {\n      // TODO: Should this be supported? See issue #64.\n      throw new Error('Parameterized rules cannot be passed as arguments to another rule.');\n    }\n    return new _pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.Param(index).withSource(this.source);\n  } else {\n    this.args.forEach((arg, idx, args) => {\n      args[idx] = arg.introduceParams(formals);\n    });\n    return this;\n  }\n};\n\n\n//# sourceURL=webpack://tatar-transliteratrr/./node_modules/ohm-js/src/pexprs-introduceParams.js?");

/***/ }),

/***/ "./node_modules/ohm-js/src/pexprs-isNullable.js":
/*!******************************************************!*\
  !*** ./node_modules/ohm-js/src/pexprs-isNullable.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common.js */ \"./node_modules/ohm-js/src/common.js\");\n/* harmony import */ var _pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./pexprs-main.js */ \"./node_modules/ohm-js/src/pexprs-main.js\");\n\n\n\n// --------------------------------------------------------------------\n// Operations\n// --------------------------------------------------------------------\n\n// Returns `true` if this parsing expression may accept without consuming any input.\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.PExpr.prototype.isNullable = function(grammar) {\n  return this._isNullable(grammar, Object.create(null));\n};\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.PExpr.prototype._isNullable = (0,_common_js__WEBPACK_IMPORTED_MODULE_0__.abstract)('_isNullable');\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.any._isNullable =\n  _pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.Range.prototype._isNullable =\n  _pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.Param.prototype._isNullable =\n  _pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.Plus.prototype._isNullable =\n  _pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.UnicodeChar.prototype._isNullable =\n    function(grammar, memo) {\n      return false;\n    };\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.end._isNullable = function(grammar, memo) {\n  return true;\n};\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.Terminal.prototype._isNullable = function(grammar, memo) {\n  if (typeof this.obj === 'string') {\n    // This is an over-simplification: it's only correct if the input is a string. If it's an array\n    // or an object, then the empty string parsing expression is not nullable.\n    return this.obj === '';\n  } else {\n    return false;\n  }\n};\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.Alt.prototype._isNullable = function(grammar, memo) {\n  return this.terms.length === 0 || this.terms.some(term => term._isNullable(grammar, memo));\n};\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.Seq.prototype._isNullable = function(grammar, memo) {\n  return this.factors.every(factor => factor._isNullable(grammar, memo));\n};\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.Star.prototype._isNullable =\n  _pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.Opt.prototype._isNullable =\n  _pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.Not.prototype._isNullable =\n  _pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.Lookahead.prototype._isNullable =\n    function(grammar, memo) {\n      return true;\n    };\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.Lex.prototype._isNullable = function(grammar, memo) {\n  return this.expr._isNullable(grammar, memo);\n};\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.Apply.prototype._isNullable = function(grammar, memo) {\n  const key = this.toMemoKey();\n  if (!Object.prototype.hasOwnProperty.call(memo, key)) {\n    const {body} = grammar.rules[this.ruleName];\n    const inlined = body.substituteParams(this.args);\n    memo[key] = false; // Prevent infinite recursion for recursive rules.\n    memo[key] = inlined._isNullable(grammar, memo);\n  }\n  return memo[key];\n};\n\n\n//# sourceURL=webpack://tatar-transliteratrr/./node_modules/ohm-js/src/pexprs-isNullable.js?");

/***/ }),

/***/ "./node_modules/ohm-js/src/pexprs-main.js":
/*!************************************************!*\
  !*** ./node_modules/ohm-js/src/pexprs-main.js ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Alt: () => (/* binding */ Alt),\n/* harmony export */   Apply: () => (/* binding */ Apply),\n/* harmony export */   Extend: () => (/* binding */ Extend),\n/* harmony export */   Iter: () => (/* binding */ Iter),\n/* harmony export */   Lex: () => (/* binding */ Lex),\n/* harmony export */   Lookahead: () => (/* binding */ Lookahead),\n/* harmony export */   Not: () => (/* binding */ Not),\n/* harmony export */   Opt: () => (/* binding */ Opt),\n/* harmony export */   PExpr: () => (/* binding */ PExpr),\n/* harmony export */   Param: () => (/* binding */ Param),\n/* harmony export */   Plus: () => (/* binding */ Plus),\n/* harmony export */   Range: () => (/* binding */ Range),\n/* harmony export */   Seq: () => (/* binding */ Seq),\n/* harmony export */   Splice: () => (/* binding */ Splice),\n/* harmony export */   Star: () => (/* binding */ Star),\n/* harmony export */   Terminal: () => (/* binding */ Terminal),\n/* harmony export */   UnicodeChar: () => (/* binding */ UnicodeChar),\n/* harmony export */   any: () => (/* binding */ any),\n/* harmony export */   end: () => (/* binding */ end)\n/* harmony export */ });\n/* harmony import */ var _UnicodeCategories_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./UnicodeCategories.js */ \"./node_modules/ohm-js/src/UnicodeCategories.js\");\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./common.js */ \"./node_modules/ohm-js/src/common.js\");\n\n\n\n// --------------------------------------------------------------------\n// Private stuff\n// --------------------------------------------------------------------\n\n// General stuff\n\nclass PExpr {\n  constructor() {\n    if (this.constructor === PExpr) {\n      throw new Error(\"PExpr cannot be instantiated -- it's abstract\");\n    }\n  }\n\n  // Set the `source` property to the interval containing the source for this expression.\n  withSource(interval) {\n    if (interval) {\n      this.source = interval.trimmed();\n    }\n    return this;\n  }\n}\n\n// Any\n\nconst any = Object.create(PExpr.prototype);\n\n// End\n\nconst end = Object.create(PExpr.prototype);\n\n// Terminals\n\nclass Terminal extends PExpr {\n  constructor(obj) {\n    super();\n    this.obj = obj;\n  }\n}\n\n// Ranges\n\nclass Range extends PExpr {\n  constructor(from, to) {\n    super();\n    this.from = from;\n    this.to = to;\n    // If either `from` or `to` is made up of multiple code units, then\n    // the range should consume a full code point, not a single code unit.\n    this.matchCodePoint = from.length > 1 || to.length > 1;\n  }\n}\n\n// Parameters\n\nclass Param extends PExpr {\n  constructor(index) {\n    super();\n    this.index = index;\n  }\n}\n\n// Alternation\n\nclass Alt extends PExpr {\n  constructor(terms) {\n    super();\n    this.terms = terms;\n  }\n}\n\n// Extend is an implementation detail of rule extension\n\nclass Extend extends Alt {\n  constructor(superGrammar, name, body) {\n    const origBody = superGrammar.rules[name].body;\n    super([body, origBody]);\n\n    this.superGrammar = superGrammar;\n    this.name = name;\n    this.body = body;\n  }\n}\n\n// Splice is an implementation detail of rule overriding with the `...` operator.\nclass Splice extends Alt {\n  constructor(superGrammar, ruleName, beforeTerms, afterTerms) {\n    const origBody = superGrammar.rules[ruleName].body;\n    super([...beforeTerms, origBody, ...afterTerms]);\n\n    this.superGrammar = superGrammar;\n    this.ruleName = ruleName;\n    this.expansionPos = beforeTerms.length;\n  }\n}\n\n// Sequences\n\nclass Seq extends PExpr {\n  constructor(factors) {\n    super();\n    this.factors = factors;\n  }\n}\n\n// Iterators and optionals\n\nclass Iter extends PExpr {\n  constructor(expr) {\n    super();\n    this.expr = expr;\n  }\n}\n\nclass Star extends Iter {}\nclass Plus extends Iter {}\nclass Opt extends Iter {}\n\nStar.prototype.operator = '*';\nPlus.prototype.operator = '+';\nOpt.prototype.operator = '?';\n\nStar.prototype.minNumMatches = 0;\nPlus.prototype.minNumMatches = 1;\nOpt.prototype.minNumMatches = 0;\n\nStar.prototype.maxNumMatches = Number.POSITIVE_INFINITY;\nPlus.prototype.maxNumMatches = Number.POSITIVE_INFINITY;\nOpt.prototype.maxNumMatches = 1;\n\n// Predicates\n\nclass Not extends PExpr {\n  constructor(expr) {\n    super();\n    this.expr = expr;\n  }\n}\n\nclass Lookahead extends PExpr {\n  constructor(expr) {\n    super();\n    this.expr = expr;\n  }\n}\n\n// \"Lexification\"\n\nclass Lex extends PExpr {\n  constructor(expr) {\n    super();\n    this.expr = expr;\n  }\n}\n\n// Rule application\n\nclass Apply extends PExpr {\n  constructor(ruleName, args = []) {\n    super();\n    this.ruleName = ruleName;\n    this.args = args;\n  }\n\n  isSyntactic() {\n    return _common_js__WEBPACK_IMPORTED_MODULE_1__.isSyntactic(this.ruleName);\n  }\n\n  // This method just caches the result of `this.toString()` in a non-enumerable property.\n  toMemoKey() {\n    if (!this._memoKey) {\n      Object.defineProperty(this, '_memoKey', {value: this.toString()});\n    }\n    return this._memoKey;\n  }\n}\n\n// Unicode character\n\nclass UnicodeChar extends PExpr {\n  constructor(category) {\n    super();\n    this.category = category;\n    this.pattern = _UnicodeCategories_js__WEBPACK_IMPORTED_MODULE_0__.UnicodeCategories[category];\n  }\n}\n\n\n//# sourceURL=webpack://tatar-transliteratrr/./node_modules/ohm-js/src/pexprs-main.js?");

/***/ }),

/***/ "./node_modules/ohm-js/src/pexprs-outputRecipe.js":
/*!********************************************************!*\
  !*** ./node_modules/ohm-js/src/pexprs-outputRecipe.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common.js */ \"./node_modules/ohm-js/src/common.js\");\n/* harmony import */ var _pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./pexprs-main.js */ \"./node_modules/ohm-js/src/pexprs-main.js\");\n\n\n\n// --------------------------------------------------------------------\n// Private stuff\n// --------------------------------------------------------------------\n\nfunction getMetaInfo(expr, grammarInterval) {\n  const metaInfo = {};\n  if (expr.source && grammarInterval) {\n    const adjusted = expr.source.relativeTo(grammarInterval);\n    metaInfo.sourceInterval = [adjusted.startIdx, adjusted.endIdx];\n  }\n  return metaInfo;\n}\n\n// --------------------------------------------------------------------\n// Operations\n// --------------------------------------------------------------------\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.PExpr.prototype.outputRecipe = (0,_common_js__WEBPACK_IMPORTED_MODULE_0__.abstract)('outputRecipe');\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.any.outputRecipe = function(formals, grammarInterval) {\n  return ['any', getMetaInfo(this, grammarInterval)];\n};\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.end.outputRecipe = function(formals, grammarInterval) {\n  return ['end', getMetaInfo(this, grammarInterval)];\n};\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.Terminal.prototype.outputRecipe = function(formals, grammarInterval) {\n  return ['terminal', getMetaInfo(this, grammarInterval), this.obj];\n};\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.Range.prototype.outputRecipe = function(formals, grammarInterval) {\n  return ['range', getMetaInfo(this, grammarInterval), this.from, this.to];\n};\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.Param.prototype.outputRecipe = function(formals, grammarInterval) {\n  return ['param', getMetaInfo(this, grammarInterval), this.index];\n};\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.Alt.prototype.outputRecipe = function(formals, grammarInterval) {\n  return ['alt', getMetaInfo(this, grammarInterval)].concat(\n      this.terms.map(term => term.outputRecipe(formals, grammarInterval)),\n  );\n};\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.Extend.prototype.outputRecipe = function(formals, grammarInterval) {\n  const extension = this.terms[0]; // [extension, original]\n  return extension.outputRecipe(formals, grammarInterval);\n};\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.Splice.prototype.outputRecipe = function(formals, grammarInterval) {\n  const beforeTerms = this.terms.slice(0, this.expansionPos);\n  const afterTerms = this.terms.slice(this.expansionPos + 1);\n  return [\n    'splice',\n    getMetaInfo(this, grammarInterval),\n    beforeTerms.map(term => term.outputRecipe(formals, grammarInterval)),\n    afterTerms.map(term => term.outputRecipe(formals, grammarInterval)),\n  ];\n};\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.Seq.prototype.outputRecipe = function(formals, grammarInterval) {\n  return ['seq', getMetaInfo(this, grammarInterval)].concat(\n      this.factors.map(factor => factor.outputRecipe(formals, grammarInterval)),\n  );\n};\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.Star.prototype.outputRecipe =\n  _pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.Plus.prototype.outputRecipe =\n  _pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.Opt.prototype.outputRecipe =\n  _pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.Not.prototype.outputRecipe =\n  _pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.Lookahead.prototype.outputRecipe =\n  _pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.Lex.prototype.outputRecipe =\n    function(formals, grammarInterval) {\n      return [\n        this.constructor.name.toLowerCase(),\n        getMetaInfo(this, grammarInterval),\n        this.expr.outputRecipe(formals, grammarInterval),\n      ];\n    };\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.Apply.prototype.outputRecipe = function(formals, grammarInterval) {\n  return [\n    'app',\n    getMetaInfo(this, grammarInterval),\n    this.ruleName,\n    this.args.map(arg => arg.outputRecipe(formals, grammarInterval)),\n  ];\n};\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.UnicodeChar.prototype.outputRecipe = function(formals, grammarInterval) {\n  return ['unicodeChar', getMetaInfo(this, grammarInterval), this.category];\n};\n\n\n//# sourceURL=webpack://tatar-transliteratrr/./node_modules/ohm-js/src/pexprs-outputRecipe.js?");

/***/ }),

/***/ "./node_modules/ohm-js/src/pexprs-substituteParams.js":
/*!************************************************************!*\
  !*** ./node_modules/ohm-js/src/pexprs-substituteParams.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common.js */ \"./node_modules/ohm-js/src/common.js\");\n/* harmony import */ var _pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./pexprs-main.js */ \"./node_modules/ohm-js/src/pexprs-main.js\");\n\n\n\n// --------------------------------------------------------------------\n// Operations\n// --------------------------------------------------------------------\n\n/*\n  Returns a PExpr that results from recursively replacing every formal parameter (i.e., instance\n  of `Param`) inside this PExpr with its actual value from `actuals` (an Array).\n\n  The receiver must not be modified; a new PExpr must be returned if any replacement is necessary.\n*/\n// function(actuals) { ... }\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.PExpr.prototype.substituteParams = (0,_common_js__WEBPACK_IMPORTED_MODULE_0__.abstract)('substituteParams');\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.any.substituteParams =\n  _pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.end.substituteParams =\n  _pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.Terminal.prototype.substituteParams =\n  _pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.Range.prototype.substituteParams =\n  _pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.UnicodeChar.prototype.substituteParams =\n    function(actuals) {\n      return this;\n    };\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.Param.prototype.substituteParams = function(actuals) {\n  return actuals[this.index];\n};\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.Alt.prototype.substituteParams = function(actuals) {\n  return new _pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.Alt(this.terms.map(term => term.substituteParams(actuals)));\n};\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.Seq.prototype.substituteParams = function(actuals) {\n  return new _pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.Seq(this.factors.map(factor => factor.substituteParams(actuals)));\n};\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.Iter.prototype.substituteParams =\n  _pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.Not.prototype.substituteParams =\n  _pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.Lookahead.prototype.substituteParams =\n  _pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.Lex.prototype.substituteParams =\n    function(actuals) {\n      return new this.constructor(this.expr.substituteParams(actuals));\n    };\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.Apply.prototype.substituteParams = function(actuals) {\n  if (this.args.length === 0) {\n    // Avoid making a copy of this application, as an optimization\n    return this;\n  } else {\n    const args = this.args.map(arg => arg.substituteParams(actuals));\n    return new _pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.Apply(this.ruleName, args);\n  }\n};\n\n\n//# sourceURL=webpack://tatar-transliteratrr/./node_modules/ohm-js/src/pexprs-substituteParams.js?");

/***/ }),

/***/ "./node_modules/ohm-js/src/pexprs-toArgumentNameList.js":
/*!**************************************************************!*\
  !*** ./node_modules/ohm-js/src/pexprs-toArgumentNameList.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common.js */ \"./node_modules/ohm-js/src/common.js\");\n/* harmony import */ var _pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./pexprs-main.js */ \"./node_modules/ohm-js/src/pexprs-main.js\");\n\n\n\n// --------------------------------------------------------------------\n// Private stuff\n// --------------------------------------------------------------------\n\nfunction isRestrictedJSIdentifier(str) {\n  return /^[a-zA-Z_$][0-9a-zA-Z_$]*$/.test(str);\n}\n\nfunction resolveDuplicatedNames(argumentNameList) {\n  // `count` is used to record the number of times each argument name occurs in the list,\n  // this is useful for checking duplicated argument name. It maps argument names to ints.\n  const count = Object.create(null);\n  argumentNameList.forEach(argName => {\n    count[argName] = (count[argName] || 0) + 1;\n  });\n\n  // Append subscripts ('_1', '_2', ...) to duplicate argument names.\n  Object.keys(count).forEach(dupArgName => {\n    if (count[dupArgName] <= 1) {\n      return;\n    }\n\n    // This name shows up more than once, so add subscripts.\n    let subscript = 1;\n    argumentNameList.forEach((argName, idx) => {\n      if (argName === dupArgName) {\n        argumentNameList[idx] = argName + '_' + subscript++;\n      }\n    });\n  });\n}\n\n// --------------------------------------------------------------------\n// Operations\n// --------------------------------------------------------------------\n\n/*\n  Returns a list of strings that will be used as the default argument names for its receiver\n  (a pexpr) in a semantic action. This is used exclusively by the Semantics Editor.\n\n  `firstArgIndex` is the 1-based index of the first argument name that will be generated for this\n  pexpr. It enables us to name arguments positionally, e.g., if the second argument is a\n  non-alphanumeric terminal like \"+\", it will be named '$2'.\n\n  `noDupCheck` is true if the caller of `toArgumentNameList` is not a top level caller. It enables\n  us to avoid nested duplication subscripts appending, e.g., '_1_1', '_1_2', by only checking\n  duplicates at the top level.\n\n  Here is a more elaborate example that illustrates how this method works:\n  `(a \"+\" b).toArgumentNameList(1)` evaluates to `['a', '$2', 'b']` with the following recursive\n  calls:\n\n    (a).toArgumentNameList(1) -> ['a'],\n    (\"+\").toArgumentNameList(2) -> ['$2'],\n    (b).toArgumentNameList(3) -> ['b']\n\n  Notes:\n  * This method must only be called on well-formed expressions, e.g., the receiver must\n    not have any Alt sub-expressions with inconsistent arities.\n  * e.getArity() === e.toArgumentNameList(1).length\n*/\n// function(firstArgIndex, noDupCheck) { ... }\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.PExpr.prototype.toArgumentNameList = (0,_common_js__WEBPACK_IMPORTED_MODULE_0__.abstract)('toArgumentNameList');\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.any.toArgumentNameList = function(firstArgIndex, noDupCheck) {\n  return ['any'];\n};\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.end.toArgumentNameList = function(firstArgIndex, noDupCheck) {\n  return ['end'];\n};\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.Terminal.prototype.toArgumentNameList = function(firstArgIndex, noDupCheck) {\n  if (typeof this.obj === 'string' && /^[_a-zA-Z0-9]+$/.test(this.obj)) {\n    // If this terminal is a valid suffix for a JS identifier, just prepend it with '_'\n    return ['_' + this.obj];\n  } else {\n    // Otherwise, name it positionally.\n    return ['$' + firstArgIndex];\n  }\n};\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.Range.prototype.toArgumentNameList = function(firstArgIndex, noDupCheck) {\n  let argName = this.from + '_to_' + this.to;\n  // If the `argName` is not valid then try to prepend a `_`.\n  if (!isRestrictedJSIdentifier(argName)) {\n    argName = '_' + argName;\n  }\n  // If the `argName` still not valid after prepending a `_`, then name it positionally.\n  if (!isRestrictedJSIdentifier(argName)) {\n    argName = '$' + firstArgIndex;\n  }\n  return [argName];\n};\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.Alt.prototype.toArgumentNameList = function(firstArgIndex, noDupCheck) {\n  // `termArgNameLists` is an array of arrays where each row is the\n  // argument name list that corresponds to a term in this alternation.\n  const termArgNameLists = this.terms.map(term =>\n    term.toArgumentNameList(firstArgIndex, true),\n  );\n\n  const argumentNameList = [];\n  const numArgs = termArgNameLists[0].length;\n  for (let colIdx = 0; colIdx < numArgs; colIdx++) {\n    const col = [];\n    for (let rowIdx = 0; rowIdx < this.terms.length; rowIdx++) {\n      col.push(termArgNameLists[rowIdx][colIdx]);\n    }\n    const uniqueNames = (0,_common_js__WEBPACK_IMPORTED_MODULE_0__.copyWithoutDuplicates)(col);\n    argumentNameList.push(uniqueNames.join('_or_'));\n  }\n\n  if (!noDupCheck) {\n    resolveDuplicatedNames(argumentNameList);\n  }\n  return argumentNameList;\n};\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.Seq.prototype.toArgumentNameList = function(firstArgIndex, noDupCheck) {\n  // Generate the argument name list, without worrying about duplicates.\n  let argumentNameList = [];\n  this.factors.forEach(factor => {\n    const factorArgumentNameList = factor.toArgumentNameList(firstArgIndex, true);\n    argumentNameList = argumentNameList.concat(factorArgumentNameList);\n\n    // Shift the firstArgIndex to take this factor's argument names into account.\n    firstArgIndex += factorArgumentNameList.length;\n  });\n  if (!noDupCheck) {\n    resolveDuplicatedNames(argumentNameList);\n  }\n  return argumentNameList;\n};\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.Iter.prototype.toArgumentNameList = function(firstArgIndex, noDupCheck) {\n  const argumentNameList = this.expr\n      .toArgumentNameList(firstArgIndex, noDupCheck)\n      .map(exprArgumentString =>\n      exprArgumentString[exprArgumentString.length - 1] === 's' ?\n        exprArgumentString + 'es' :\n        exprArgumentString + 's',\n      );\n  if (!noDupCheck) {\n    resolveDuplicatedNames(argumentNameList);\n  }\n  return argumentNameList;\n};\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.Opt.prototype.toArgumentNameList = function(firstArgIndex, noDupCheck) {\n  return this.expr.toArgumentNameList(firstArgIndex, noDupCheck).map(argName => {\n    return 'opt' + argName[0].toUpperCase() + argName.slice(1);\n  });\n};\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.Not.prototype.toArgumentNameList = function(firstArgIndex, noDupCheck) {\n  return [];\n};\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.Lookahead.prototype.toArgumentNameList = _pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.Lex.prototype.toArgumentNameList =\n  function(firstArgIndex, noDupCheck) {\n    return this.expr.toArgumentNameList(firstArgIndex, noDupCheck);\n  };\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.Apply.prototype.toArgumentNameList = function(firstArgIndex, noDupCheck) {\n  return [this.ruleName];\n};\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.UnicodeChar.prototype.toArgumentNameList = function(firstArgIndex, noDupCheck) {\n  return ['$' + firstArgIndex];\n};\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.Param.prototype.toArgumentNameList = function(firstArgIndex, noDupCheck) {\n  return ['param' + this.index];\n};\n\n// \"Value pexprs\" (Value, Str, Arr, Obj) are going away soon, so we don't worry about them here.\n\n\n//# sourceURL=webpack://tatar-transliteratrr/./node_modules/ohm-js/src/pexprs-toArgumentNameList.js?");

/***/ }),

/***/ "./node_modules/ohm-js/src/pexprs-toDisplayString.js":
/*!***********************************************************!*\
  !*** ./node_modules/ohm-js/src/pexprs-toDisplayString.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common.js */ \"./node_modules/ohm-js/src/common.js\");\n/* harmony import */ var _pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./pexprs-main.js */ \"./node_modules/ohm-js/src/pexprs-main.js\");\n\n\n\n// --------------------------------------------------------------------\n// Operations\n// --------------------------------------------------------------------\n\n// Returns a string representing the PExpr, for use as a UI label, etc.\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.PExpr.prototype.toDisplayString = (0,_common_js__WEBPACK_IMPORTED_MODULE_0__.abstract)('toDisplayString');\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.Alt.prototype.toDisplayString = _pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.Seq.prototype.toDisplayString = function() {\n  if (this.source) {\n    return this.source.trimmed().contents;\n  }\n  return '[' + this.constructor.name + ']';\n};\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.any.toDisplayString =\n  _pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.end.toDisplayString =\n  _pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.Iter.prototype.toDisplayString =\n  _pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.Not.prototype.toDisplayString =\n  _pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.Lookahead.prototype.toDisplayString =\n  _pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.Lex.prototype.toDisplayString =\n  _pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.Terminal.prototype.toDisplayString =\n  _pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.Range.prototype.toDisplayString =\n  _pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.Param.prototype.toDisplayString =\n    function() {\n      return this.toString();\n    };\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.Apply.prototype.toDisplayString = function() {\n  if (this.args.length > 0) {\n    const ps = this.args.map(arg => arg.toDisplayString());\n    return this.ruleName + '<' + ps.join(',') + '>';\n  } else {\n    return this.ruleName;\n  }\n};\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.UnicodeChar.prototype.toDisplayString = function() {\n  return 'Unicode [' + this.category + '] character';\n};\n\n\n//# sourceURL=webpack://tatar-transliteratrr/./node_modules/ohm-js/src/pexprs-toDisplayString.js?");

/***/ }),

/***/ "./node_modules/ohm-js/src/pexprs-toFailure.js":
/*!*****************************************************!*\
  !*** ./node_modules/ohm-js/src/pexprs-toFailure.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common.js */ \"./node_modules/ohm-js/src/common.js\");\n/* harmony import */ var _pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./pexprs-main.js */ \"./node_modules/ohm-js/src/pexprs-main.js\");\n/* harmony import */ var _Failure_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Failure.js */ \"./node_modules/ohm-js/src/Failure.js\");\n\n\n\n\n// --------------------------------------------------------------------\n// Operations\n// --------------------------------------------------------------------\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.PExpr.prototype.toFailure = (0,_common_js__WEBPACK_IMPORTED_MODULE_0__.abstract)('toFailure');\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.any.toFailure = function(grammar) {\n  return new _Failure_js__WEBPACK_IMPORTED_MODULE_2__.Failure(this, 'any object', 'description');\n};\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.end.toFailure = function(grammar) {\n  return new _Failure_js__WEBPACK_IMPORTED_MODULE_2__.Failure(this, 'end of input', 'description');\n};\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.Terminal.prototype.toFailure = function(grammar) {\n  return new _Failure_js__WEBPACK_IMPORTED_MODULE_2__.Failure(this, this.obj, 'string');\n};\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.Range.prototype.toFailure = function(grammar) {\n  // TODO: come up with something better\n  return new _Failure_js__WEBPACK_IMPORTED_MODULE_2__.Failure(this, JSON.stringify(this.from) + '..' + JSON.stringify(this.to), 'code');\n};\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.Not.prototype.toFailure = function(grammar) {\n  const description =\n    this.expr === _pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.any ? 'nothing' : 'not ' + this.expr.toFailure(grammar);\n  return new _Failure_js__WEBPACK_IMPORTED_MODULE_2__.Failure(this, description, 'description');\n};\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.Lookahead.prototype.toFailure = function(grammar) {\n  return this.expr.toFailure(grammar);\n};\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.Apply.prototype.toFailure = function(grammar) {\n  let {description} = grammar.rules[this.ruleName];\n  if (!description) {\n    const article = /^[aeiouAEIOU]/.test(this.ruleName) ? 'an' : 'a';\n    description = article + ' ' + this.ruleName;\n  }\n  return new _Failure_js__WEBPACK_IMPORTED_MODULE_2__.Failure(this, description, 'description');\n};\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.UnicodeChar.prototype.toFailure = function(grammar) {\n  return new _Failure_js__WEBPACK_IMPORTED_MODULE_2__.Failure(this, 'a Unicode [' + this.category + '] character', 'description');\n};\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.Alt.prototype.toFailure = function(grammar) {\n  const fs = this.terms.map(t => t.toFailure(grammar));\n  const description = '(' + fs.join(' or ') + ')';\n  return new _Failure_js__WEBPACK_IMPORTED_MODULE_2__.Failure(this, description, 'description');\n};\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.Seq.prototype.toFailure = function(grammar) {\n  const fs = this.factors.map(f => f.toFailure(grammar));\n  const description = '(' + fs.join(' ') + ')';\n  return new _Failure_js__WEBPACK_IMPORTED_MODULE_2__.Failure(this, description, 'description');\n};\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.Iter.prototype.toFailure = function(grammar) {\n  const description = '(' + this.expr.toFailure(grammar) + this.operator + ')';\n  return new _Failure_js__WEBPACK_IMPORTED_MODULE_2__.Failure(this, description, 'description');\n};\n\n\n//# sourceURL=webpack://tatar-transliteratrr/./node_modules/ohm-js/src/pexprs-toFailure.js?");

/***/ }),

/***/ "./node_modules/ohm-js/src/pexprs-toString.js":
/*!****************************************************!*\
  !*** ./node_modules/ohm-js/src/pexprs-toString.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common.js */ \"./node_modules/ohm-js/src/common.js\");\n/* harmony import */ var _pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./pexprs-main.js */ \"./node_modules/ohm-js/src/pexprs-main.js\");\n\n\n\n// --------------------------------------------------------------------\n// Operations\n// --------------------------------------------------------------------\n\n/*\n  e1.toString() === e2.toString() ==> e1 and e2 are semantically equivalent.\n  Note that this is not an iff (<==>): e.g.,\n  (~\"b\" \"a\").toString() !== (\"a\").toString(), even though\n  ~\"b\" \"a\" and \"a\" are interchangeable in any grammar,\n  both in terms of the languages they accept and their arities.\n*/\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.PExpr.prototype.toString = (0,_common_js__WEBPACK_IMPORTED_MODULE_0__.abstract)('toString');\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.any.toString = function() {\n  return 'any';\n};\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.end.toString = function() {\n  return 'end';\n};\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.Terminal.prototype.toString = function() {\n  return JSON.stringify(this.obj);\n};\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.Range.prototype.toString = function() {\n  return JSON.stringify(this.from) + '..' + JSON.stringify(this.to);\n};\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.Param.prototype.toString = function() {\n  return '$' + this.index;\n};\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.Lex.prototype.toString = function() {\n  return '#(' + this.expr.toString() + ')';\n};\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.Alt.prototype.toString = function() {\n  return this.terms.length === 1 ?\n    this.terms[0].toString() :\n    '(' + this.terms.map(term => term.toString()).join(' | ') + ')';\n};\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.Seq.prototype.toString = function() {\n  return this.factors.length === 1 ?\n    this.factors[0].toString() :\n    '(' + this.factors.map(factor => factor.toString()).join(' ') + ')';\n};\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.Iter.prototype.toString = function() {\n  return this.expr + this.operator;\n};\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.Not.prototype.toString = function() {\n  return '~' + this.expr;\n};\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.Lookahead.prototype.toString = function() {\n  return '&' + this.expr;\n};\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.Apply.prototype.toString = function() {\n  if (this.args.length > 0) {\n    const ps = this.args.map(arg => arg.toString());\n    return this.ruleName + '<' + ps.join(',') + '>';\n  } else {\n    return this.ruleName;\n  }\n};\n\n_pexprs_main_js__WEBPACK_IMPORTED_MODULE_1__.UnicodeChar.prototype.toString = function() {\n  return '\\\\p{' + this.category + '}';\n};\n\n\n//# sourceURL=webpack://tatar-transliteratrr/./node_modules/ohm-js/src/pexprs-toString.js?");

/***/ }),

/***/ "./node_modules/ohm-js/src/pexprs.js":
/*!*******************************************!*\
  !*** ./node_modules/ohm-js/src/pexprs.js ***!
  \*******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Alt: () => (/* reexport safe */ _pexprs_main_js__WEBPACK_IMPORTED_MODULE_14__.Alt),\n/* harmony export */   Apply: () => (/* reexport safe */ _pexprs_main_js__WEBPACK_IMPORTED_MODULE_14__.Apply),\n/* harmony export */   CaseInsensitiveTerminal: () => (/* reexport safe */ _CaseInsensitiveTerminal_js__WEBPACK_IMPORTED_MODULE_15__.CaseInsensitiveTerminal),\n/* harmony export */   Extend: () => (/* reexport safe */ _pexprs_main_js__WEBPACK_IMPORTED_MODULE_14__.Extend),\n/* harmony export */   Iter: () => (/* reexport safe */ _pexprs_main_js__WEBPACK_IMPORTED_MODULE_14__.Iter),\n/* harmony export */   Lex: () => (/* reexport safe */ _pexprs_main_js__WEBPACK_IMPORTED_MODULE_14__.Lex),\n/* harmony export */   Lookahead: () => (/* reexport safe */ _pexprs_main_js__WEBPACK_IMPORTED_MODULE_14__.Lookahead),\n/* harmony export */   Not: () => (/* reexport safe */ _pexprs_main_js__WEBPACK_IMPORTED_MODULE_14__.Not),\n/* harmony export */   Opt: () => (/* reexport safe */ _pexprs_main_js__WEBPACK_IMPORTED_MODULE_14__.Opt),\n/* harmony export */   PExpr: () => (/* reexport safe */ _pexprs_main_js__WEBPACK_IMPORTED_MODULE_14__.PExpr),\n/* harmony export */   Param: () => (/* reexport safe */ _pexprs_main_js__WEBPACK_IMPORTED_MODULE_14__.Param),\n/* harmony export */   Plus: () => (/* reexport safe */ _pexprs_main_js__WEBPACK_IMPORTED_MODULE_14__.Plus),\n/* harmony export */   Range: () => (/* reexport safe */ _pexprs_main_js__WEBPACK_IMPORTED_MODULE_14__.Range),\n/* harmony export */   Seq: () => (/* reexport safe */ _pexprs_main_js__WEBPACK_IMPORTED_MODULE_14__.Seq),\n/* harmony export */   Splice: () => (/* reexport safe */ _pexprs_main_js__WEBPACK_IMPORTED_MODULE_14__.Splice),\n/* harmony export */   Star: () => (/* reexport safe */ _pexprs_main_js__WEBPACK_IMPORTED_MODULE_14__.Star),\n/* harmony export */   Terminal: () => (/* reexport safe */ _pexprs_main_js__WEBPACK_IMPORTED_MODULE_14__.Terminal),\n/* harmony export */   UnicodeChar: () => (/* reexport safe */ _pexprs_main_js__WEBPACK_IMPORTED_MODULE_14__.UnicodeChar),\n/* harmony export */   any: () => (/* reexport safe */ _pexprs_main_js__WEBPACK_IMPORTED_MODULE_14__.any),\n/* harmony export */   end: () => (/* reexport safe */ _pexprs_main_js__WEBPACK_IMPORTED_MODULE_14__.end)\n/* harmony export */ });\n/* harmony import */ var _pexprs_allowsSkippingPrecedingSpace_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./pexprs-allowsSkippingPrecedingSpace.js */ \"./node_modules/ohm-js/src/pexprs-allowsSkippingPrecedingSpace.js\");\n/* harmony import */ var _pexprs_assertAllApplicationsAreValid_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./pexprs-assertAllApplicationsAreValid.js */ \"./node_modules/ohm-js/src/pexprs-assertAllApplicationsAreValid.js\");\n/* harmony import */ var _pexprs_assertChoicesHaveUniformArity_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./pexprs-assertChoicesHaveUniformArity.js */ \"./node_modules/ohm-js/src/pexprs-assertChoicesHaveUniformArity.js\");\n/* harmony import */ var _pexprs_assertIteratedExprsAreNotNullable_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pexprs-assertIteratedExprsAreNotNullable.js */ \"./node_modules/ohm-js/src/pexprs-assertIteratedExprsAreNotNullable.js\");\n/* harmony import */ var _pexprs_eval_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./pexprs-eval.js */ \"./node_modules/ohm-js/src/pexprs-eval.js\");\n/* harmony import */ var _pexprs_getArity_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./pexprs-getArity.js */ \"./node_modules/ohm-js/src/pexprs-getArity.js\");\n/* harmony import */ var _pexprs_outputRecipe_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./pexprs-outputRecipe.js */ \"./node_modules/ohm-js/src/pexprs-outputRecipe.js\");\n/* harmony import */ var _pexprs_introduceParams_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./pexprs-introduceParams.js */ \"./node_modules/ohm-js/src/pexprs-introduceParams.js\");\n/* harmony import */ var _pexprs_isNullable_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./pexprs-isNullable.js */ \"./node_modules/ohm-js/src/pexprs-isNullable.js\");\n/* harmony import */ var _pexprs_substituteParams_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./pexprs-substituteParams.js */ \"./node_modules/ohm-js/src/pexprs-substituteParams.js\");\n/* harmony import */ var _pexprs_toArgumentNameList_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./pexprs-toArgumentNameList.js */ \"./node_modules/ohm-js/src/pexprs-toArgumentNameList.js\");\n/* harmony import */ var _pexprs_toDisplayString_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./pexprs-toDisplayString.js */ \"./node_modules/ohm-js/src/pexprs-toDisplayString.js\");\n/* harmony import */ var _pexprs_toFailure_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./pexprs-toFailure.js */ \"./node_modules/ohm-js/src/pexprs-toFailure.js\");\n/* harmony import */ var _pexprs_toString_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./pexprs-toString.js */ \"./node_modules/ohm-js/src/pexprs-toString.js\");\n/* harmony import */ var _pexprs_main_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./pexprs-main.js */ \"./node_modules/ohm-js/src/pexprs-main.js\");\n/* harmony import */ var _CaseInsensitiveTerminal_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./CaseInsensitiveTerminal.js */ \"./node_modules/ohm-js/src/CaseInsensitiveTerminal.js\");\n// --------------------------------------------------------------------\n// Extensions\n// --------------------------------------------------------------------\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//# sourceURL=webpack://tatar-transliteratrr/./node_modules/ohm-js/src/pexprs.js?");

/***/ }),

/***/ "./node_modules/ohm-js/src/semanticsDeferredInit.js":
/*!**********************************************************!*\
  !*** ./node_modules/ohm-js/src/semanticsDeferredInit.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _dist_operations_and_attributes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../dist/operations-and-attributes.js */ \"./node_modules/ohm-js/dist/operations-and-attributes.js\");\n/* harmony import */ var _Grammar_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Grammar.js */ \"./node_modules/ohm-js/src/Grammar.js\");\n/* harmony import */ var _Semantics_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Semantics.js */ \"./node_modules/ohm-js/src/Semantics.js\");\n\n\n\n\ninitBuiltInSemantics(_Grammar_js__WEBPACK_IMPORTED_MODULE_1__.Grammar.BuiltInRules);\ninitPrototypeParser(_dist_operations_and_attributes_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]); // requires BuiltInSemantics\n\nfunction initBuiltInSemantics(builtInRules) {\n  const actions = {\n    empty() {\n      return this.iteration();\n    },\n    nonEmpty(first, _, rest) {\n      return this.iteration([first].concat(rest.children));\n    },\n  };\n\n  _Semantics_js__WEBPACK_IMPORTED_MODULE_2__.Semantics.BuiltInSemantics = _Semantics_js__WEBPACK_IMPORTED_MODULE_2__.Semantics.createSemantics(builtInRules, null).addOperation(\n      'asIteration',\n      {\n        emptyListOf: actions.empty,\n        nonemptyListOf: actions.nonEmpty,\n        EmptyListOf: actions.empty,\n        NonemptyListOf: actions.nonEmpty,\n      },\n  );\n}\n\nfunction initPrototypeParser(grammar) {\n  _Semantics_js__WEBPACK_IMPORTED_MODULE_2__.Semantics.prototypeGrammarSemantics = grammar.createSemantics().addOperation('parse', {\n    AttributeSignature(name) {\n      return {\n        name: name.parse(),\n        formals: [],\n      };\n    },\n    OperationSignature(name, optFormals) {\n      return {\n        name: name.parse(),\n        formals: optFormals.children.map(c => c.parse())[0] || [],\n      };\n    },\n    Formals(oparen, fs, cparen) {\n      return fs.asIteration().children.map(c => c.parse());\n    },\n    name(first, rest) {\n      return this.sourceString;\n    },\n  });\n  _Semantics_js__WEBPACK_IMPORTED_MODULE_2__.Semantics.prototypeGrammar = grammar;\n}\n\n\n//# sourceURL=webpack://tatar-transliteratrr/./node_modules/ohm-js/src/semanticsDeferredInit.js?");

/***/ }),

/***/ "./node_modules/ohm-js/src/util.js":
/*!*****************************************!*\
  !*** ./node_modules/ohm-js/src/util.js ***!
  \*****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   announceBuiltInRules: () => (/* binding */ announceBuiltInRules),\n/* harmony export */   awaitBuiltInRules: () => (/* binding */ awaitBuiltInRules),\n/* harmony export */   getLineAndColumn: () => (/* binding */ getLineAndColumn),\n/* harmony export */   getLineAndColumnMessage: () => (/* binding */ getLineAndColumnMessage),\n/* harmony export */   uniqueId: () => (/* binding */ uniqueId)\n/* harmony export */ });\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common.js */ \"./node_modules/ohm-js/src/common.js\");\n\n\n// --------------------------------------------------------------------\n// Private stuff\n// --------------------------------------------------------------------\n\n// Given an array of numbers `arr`, return an array of the numbers as strings,\n// right-justified and padded to the same length.\nfunction padNumbersToEqualLength(arr) {\n  let maxLen = 0;\n  const strings = arr.map(n => {\n    const str = n.toString();\n    maxLen = Math.max(maxLen, str.length);\n    return str;\n  });\n  return strings.map(s => _common_js__WEBPACK_IMPORTED_MODULE_0__.padLeft(s, maxLen));\n}\n\n// Produce a new string that would be the result of copying the contents\n// of the string `src` onto `dest` at offset `offest`.\nfunction strcpy(dest, src, offset) {\n  const origDestLen = dest.length;\n  const start = dest.slice(0, offset);\n  const end = dest.slice(offset + src.length);\n  return (start + src + end).substr(0, origDestLen);\n}\n\n// Casts the underlying lineAndCol object to a formatted message string,\n// highlighting `ranges`.\nfunction lineAndColumnToMessage(...ranges) {\n  const lineAndCol = this;\n  const {offset} = lineAndCol;\n  const {repeatStr} = _common_js__WEBPACK_IMPORTED_MODULE_0__;\n\n  const sb = new _common_js__WEBPACK_IMPORTED_MODULE_0__.StringBuffer();\n  sb.append('Line ' + lineAndCol.lineNum + ', col ' + lineAndCol.colNum + ':\\n');\n\n  // An array of the previous, current, and next line numbers as strings of equal length.\n  const lineNumbers = padNumbersToEqualLength([\n    lineAndCol.prevLine == null ? 0 : lineAndCol.lineNum - 1,\n    lineAndCol.lineNum,\n    lineAndCol.nextLine == null ? 0 : lineAndCol.lineNum + 1,\n  ]);\n\n  // Helper for appending formatting input lines to the buffer.\n  const appendLine = (num, content, prefix) => {\n    sb.append(prefix + lineNumbers[num] + ' | ' + content + '\\n');\n  };\n\n  // Include the previous line for context if possible.\n  if (lineAndCol.prevLine != null) {\n    appendLine(0, lineAndCol.prevLine, '  ');\n  }\n  // Line that the error occurred on.\n  appendLine(1, lineAndCol.line, '> ');\n\n  // Build up the line that points to the offset and possible indicates one or more ranges.\n  // Start with a blank line, and indicate each range by overlaying a string of `~` chars.\n  const lineLen = lineAndCol.line.length;\n  let indicationLine = repeatStr(' ', lineLen + 1);\n  for (let i = 0; i < ranges.length; ++i) {\n    let startIdx = ranges[i][0];\n    let endIdx = ranges[i][1];\n    _common_js__WEBPACK_IMPORTED_MODULE_0__.assert(startIdx >= 0 && startIdx <= endIdx, 'range start must be >= 0 and <= end');\n\n    const lineStartOffset = offset - lineAndCol.colNum + 1;\n    startIdx = Math.max(0, startIdx - lineStartOffset);\n    endIdx = Math.min(endIdx - lineStartOffset, lineLen);\n\n    indicationLine = strcpy(indicationLine, repeatStr('~', endIdx - startIdx), startIdx);\n  }\n  const gutterWidth = 2 + lineNumbers[1].length + 3;\n  sb.append(repeatStr(' ', gutterWidth));\n  indicationLine = strcpy(indicationLine, '^', lineAndCol.colNum - 1);\n  sb.append(indicationLine.replace(/ +$/, '') + '\\n');\n\n  // Include the next line for context if possible.\n  if (lineAndCol.nextLine != null) {\n    appendLine(2, lineAndCol.nextLine, '  ');\n  }\n  return sb.contents();\n}\n\n// --------------------------------------------------------------------\n// Exports\n// --------------------------------------------------------------------\n\nlet builtInRulesCallbacks = [];\n\n// Since Grammar.BuiltInRules is bootstrapped, most of Ohm can't directly depend it.\n// This function allows modules that do depend on the built-in rules to register a callback\n// that will be called later in the initialization process.\nfunction awaitBuiltInRules(cb) {\n  builtInRulesCallbacks.push(cb);\n}\n\nfunction announceBuiltInRules(grammar) {\n  builtInRulesCallbacks.forEach(cb => {\n    cb(grammar);\n  });\n  builtInRulesCallbacks = null;\n}\n\n// Return an object with the line and column information for the given\n// offset in `str`.\nfunction getLineAndColumn(str, offset) {\n  let lineNum = 1;\n  let colNum = 1;\n\n  let currOffset = 0;\n  let lineStartOffset = 0;\n\n  let nextLine = null;\n  let prevLine = null;\n  let prevLineStartOffset = -1;\n\n  while (currOffset < offset) {\n    const c = str.charAt(currOffset++);\n    if (c === '\\n') {\n      lineNum++;\n      colNum = 1;\n      prevLineStartOffset = lineStartOffset;\n      lineStartOffset = currOffset;\n    } else if (c !== '\\r') {\n      colNum++;\n    }\n  }\n\n  // Find the end of the target line.\n  let lineEndOffset = str.indexOf('\\n', lineStartOffset);\n  if (lineEndOffset === -1) {\n    lineEndOffset = str.length;\n  } else {\n    // Get the next line.\n    const nextLineEndOffset = str.indexOf('\\n', lineEndOffset + 1);\n    nextLine =\n      nextLineEndOffset === -1 ?\n        str.slice(lineEndOffset) :\n        str.slice(lineEndOffset, nextLineEndOffset);\n    // Strip leading and trailing EOL char(s).\n    nextLine = nextLine.replace(/^\\r?\\n/, '').replace(/\\r$/, '');\n  }\n\n  // Get the previous line.\n  if (prevLineStartOffset >= 0) {\n    // Strip trailing EOL char(s).\n    prevLine = str.slice(prevLineStartOffset, lineStartOffset).replace(/\\r?\\n$/, '');\n  }\n\n  // Get the target line, stripping a trailing carriage return if necessary.\n  const line = str.slice(lineStartOffset, lineEndOffset).replace(/\\r$/, '');\n\n  return {\n    offset,\n    lineNum,\n    colNum,\n    line,\n    prevLine,\n    nextLine,\n    toString: lineAndColumnToMessage,\n  };\n}\n\n// Return a nicely-formatted string describing the line and column for the\n// given offset in `str` highlighting `ranges`.\nfunction getLineAndColumnMessage(str, offset, ...ranges) {\n  return getLineAndColumn(str, offset).toString(...ranges);\n}\n\nconst uniqueId = (() => {\n  let idCounter = 0;\n  return prefix => '' + prefix + idCounter++;\n})();\n\n\n//# sourceURL=webpack://tatar-transliteratrr/./node_modules/ohm-js/src/util.js?");

/***/ }),

/***/ "./node_modules/ohm-js/src/version.js":
/*!********************************************!*\
  !*** ./node_modules/ohm-js/src/version.js ***!
  \********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   version: () => (/* binding */ version)\n/* harmony export */ });\n// Generated by scripts/prebuild.js\nconst version = '17.1.0';\n\n\n//# sourceURL=webpack://tatar-transliteratrr/./node_modules/ohm-js/src/version.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/script.ts");
/******/ 	
/******/ })()
;